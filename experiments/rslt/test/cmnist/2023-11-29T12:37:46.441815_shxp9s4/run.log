Expt: experiments/rslt/test/cmnist/2023-11-29T12:37:46.441815_shxp9s4
RunID: 2023-11-29T12:37:46.441815
Arguments: Namespace(K=20, batch_size=128, cuda=False, device='cpu', epochs=30, experiment='./rslt/test/cmnist', latent_dim=20, learn_prior=False, llik_scaling=0.0, logp=False, looser=False, model='Classifier_OSCN', no_analytics=False, no_cuda=True, num_hidden_layers=1, obj='cross', pre_trained='', pretrained_path='', print_freq=0, run_type='train', seed=4, use_conditional=False)
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1           [-1, 32, 16, 16]           1,568
              ReLU-2           [-1, 32, 16, 16]               0
            Conv2d-3             [-1, 64, 8, 8]          32,832
              ReLU-4             [-1, 64, 8, 8]               0
            Conv2d-5            [-1, 128, 4, 4]         131,200
              ReLU-6            [-1, 128, 4, 4]               0
            Conv2d-7              [-1, 8, 1, 1]          16,392
            Linear-8                    [-1, 9]              81
================================================================
Total params: 182,073
Trainable params: 182,073
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.01
Forward/backward pass size (MB): 0.22
Params size (MB): 0.69
Estimated Total Size (MB): 0.93
----------------------------------------------------------------

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 4, 0, 8, 0, 1, 4, 8, 1, 0, 6, 6, 1, 4, 1, 2, 0, 2, 1, 1, 7, 4, 3, 0,
        7, 8, 1, 1, 8, 5, 2, 2, 8, 5, 0, 4, 0, 6, 7, 4, 7, 4, 7, 7, 8, 8, 3, 0,
        2, 3, 7, 6, 2, 8, 5, 6, 2, 1, 0, 5, 2, 8, 7, 2, 6, 8, 3, 1, 1, 6, 8, 4,
        8, 7, 2, 7, 6, 8, 1, 0, 0, 2, 1, 0, 4, 0, 3, 2, 0, 3, 7, 1, 4, 7, 2, 6,
        0, 5, 0, 2, 5, 7, 4, 2, 2, 2, 1, 2, 2, 6, 8, 4, 7, 5, 3, 2, 7, 6, 6, 0,
        4, 3, 2, 8, 8, 1, 8, 0]) 
pred: tensor([[-1.6074e-01,  2.8794e-01, -1.2236e-01,  ..., -1.4867e-01,
          2.0089e-02, -1.4938e-03],
        [-1.6376e-01,  2.8953e-01, -1.1648e-01,  ..., -1.5218e-01,
          1.8119e-02,  1.2810e-04],
        [-1.5995e-01,  2.8309e-01, -1.2171e-01,  ..., -1.4772e-01,
          2.3549e-02,  1.7181e-03],
        ...,
        [-1.6011e-01,  2.8213e-01, -1.2930e-01,  ..., -1.4745e-01,
          1.2597e-02,  1.5592e-04],
        [-1.6680e-01,  2.8299e-01, -1.1690e-01,  ..., -1.4634e-01,
          2.4987e-02, -2.7540e-03],
        [-1.6120e-01,  2.8584e-01, -1.1749e-01,  ..., -1.4942e-01,
          2.4862e-02,  2.1245e-03]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 7, 4, 4, 3, 2, 2, 4, 7, 5, 7, 3, 0, 8, 5, 7, 1, 0, 6, 5, 8, 0, 7, 6,
        3, 8, 8, 4, 6, 3, 7, 8, 2, 0, 5, 4, 8, 2, 0, 5, 0, 3, 1, 4, 5, 8, 5, 1,
        7, 2, 1, 0, 7, 2, 6, 7, 1, 8, 1, 0, 2, 5, 3, 2, 7, 1, 5, 1, 5, 2, 3, 2,
        6, 1, 7, 7, 7, 2, 1, 2, 8, 8, 7, 1, 4, 6, 4, 4, 8, 5, 7, 8, 2, 4, 7, 7,
        6, 4, 8, 6, 3, 0, 0, 2, 4, 0, 1, 8, 0, 8, 0, 8, 3, 4, 5, 2, 5, 6, 6, 0,
        5, 6, 0, 3, 0, 6, 7, 2]) 
pred: tensor([[-0.1409,  0.2152, -0.0076,  ..., -0.1545,  0.0523,  0.1189],
        [-0.1533,  0.2484, -0.0634,  ..., -0.1540,  0.0375,  0.0612],
        [-0.1459,  0.2561, -0.0924,  ..., -0.1435,  0.0368,  0.0416],
        ...,
        [-0.1467,  0.2576, -0.0952,  ..., -0.1453,  0.0280,  0.0430],
        [-0.1414,  0.2057,  0.0084,  ..., -0.1577,  0.0506,  0.1341],
        [-0.1474,  0.2631, -0.0955,  ..., -0.1494,  0.0260,  0.0395]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 5, 4, 2, 4, 1, 3, 2, 5, 0, 8, 7, 3, 0, 0, 8, 7, 0, 3, 0, 0, 2, 5, 5,
        2, 7, 6, 1, 7, 0, 7, 3, 6, 4, 4, 7, 5, 7, 7, 6, 6, 4, 0, 0, 0, 6, 6, 8,
        3, 2, 7, 4, 7, 4, 7, 0, 1, 0, 5, 3, 7, 4, 8, 6, 8, 0, 1, 0, 7, 6, 1, 7,
        8, 7, 6, 3, 4, 2, 4, 5, 6, 4, 1, 0, 1, 7, 4, 0, 5, 5, 1, 6, 4, 8, 5, 3,
        3, 1, 1, 3, 0, 2, 6, 7, 0, 6, 6, 8, 1, 3, 6, 2, 8, 0, 8, 0, 3, 2, 3, 2,
        1, 1, 2, 0, 5, 4, 5, 0]) 
pred: tensor([[-0.1186,  0.1874, -0.0287,  ..., -0.1455,  0.0535,  0.1439],
        [-0.1186,  0.2050, -0.0613,  ..., -0.1395,  0.0441,  0.1159],
        [-0.1254,  0.2244, -0.0725,  ..., -0.1447,  0.0373,  0.0923],
        ...,
        [-0.0869,  0.1461, -0.0203,  ..., -0.1410,  0.0782,  0.2038],
        [-0.1142,  0.1924, -0.0469,  ..., -0.1374,  0.0584,  0.1298],
        [-0.1280,  0.2235, -0.0723,  ..., -0.1489,  0.0336,  0.0948]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 3, 6, 0, 2, 1, 6, 5, 8, 4, 3, 8, 6, 0, 4, 2, 8, 0, 1, 0, 5, 7, 8, 7,
        0, 8, 6, 2, 5, 7, 6, 3, 0, 5, 3, 6, 0, 5, 7, 4, 7, 5, 2, 2, 0, 8, 3, 1,
        0, 5, 7, 2, 3, 7, 1, 3, 6, 2, 6, 5, 5, 0, 5, 2, 3, 7, 5, 4, 8, 8, 4, 8,
        2, 0, 0, 0, 4, 3, 0, 5, 1, 5, 0, 2, 1, 1, 4, 2, 8, 4, 5, 7, 4, 0, 5, 6,
        8, 0, 3, 4, 8, 5, 7, 4, 4, 4, 7, 7, 8, 2, 4, 5, 4, 3, 2, 0, 7, 4, 5, 6,
        1, 1, 4, 1, 6, 4, 5, 2]) 
pred: tensor([[-0.0867,  0.1834, -0.0900,  ..., -0.1221,  0.0452,  0.1313],
        [ 0.0082, -0.0258,  0.0287,  ..., -0.0669,  0.1378,  0.3838],
        [-0.0674,  0.1420, -0.0749,  ..., -0.1104,  0.0662,  0.1765],
        ...,
        [-0.0526,  0.1124, -0.0597,  ..., -0.0992,  0.0845,  0.2105],
        [ 0.0260, -0.0367, -0.0200,  ..., -0.0629,  0.1398,  0.3830],
        [-0.0773,  0.1514, -0.0599,  ..., -0.1179,  0.0662,  0.1720]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 7, 0, 5, 1, 0, 6, 2, 2, 6, 8, 4, 7, 3, 7, 2, 0, 4, 6, 0, 8, 3, 7, 1,
        5, 0, 7, 7, 8, 0, 5, 5, 4, 3, 6, 7, 3, 5, 7, 8, 8, 8, 6, 5, 5, 5, 3, 1,
        0, 0, 2, 7, 5, 4, 4, 3, 6, 3, 7, 8, 0, 6, 4, 1, 8, 8, 8, 6, 6, 5, 1, 2,
        4, 3, 7, 1, 6, 4, 6, 0, 7, 4, 4, 0, 7, 6, 2, 7, 3, 6, 8, 7, 5, 0, 4, 5,
        1, 1, 5, 4, 6, 8, 0, 0, 7, 5, 7, 5, 0, 6, 8, 5, 4, 4, 1, 8, 8, 8, 3, 3,
        2, 2, 5, 2, 1, 5, 3, 0]) 
pred: tensor([[-0.0475,  0.1065, -0.0758,  ..., -0.1013,  0.0617,  0.2074],
        [ 0.0102, -0.0247, -0.0680,  ..., -0.0793,  0.0972,  0.3383],
        [-0.0628,  0.1531, -0.1160,  ..., -0.1097,  0.0381,  0.1487],
        ...,
        [-0.0478,  0.1226, -0.1201,  ..., -0.1009,  0.0407,  0.1776],
        [-0.0297,  0.0886, -0.1116,  ..., -0.0856,  0.0640,  0.2072],
        [-0.0625,  0.1494, -0.1032,  ..., -0.1064,  0.0466,  0.1542]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 5, 3, 8, 3, 3, 1, 2, 1, 0, 0, 8, 5, 8, 2, 2, 8, 8, 4, 5, 0, 1, 0, 1,
        6, 0, 0, 5, 2, 6, 2, 3, 0, 1, 1, 6, 8, 1, 5, 7, 7, 3, 6, 4, 8, 2, 5, 1,
        8, 7, 0, 3, 4, 5, 8, 8, 4, 8, 8, 6, 6, 8, 5, 4, 6, 8, 0, 7, 7, 1, 0, 8,
        4, 4, 0, 6, 1, 6, 8, 1, 5, 1, 3, 8, 3, 8, 8, 2, 7, 5, 0, 8, 5, 1, 4, 4,
        7, 0, 1, 0, 2, 5, 4, 0, 1, 8, 4, 6, 6, 4, 1, 3, 4, 0, 8, 1, 3, 2, 8, 6,
        5, 0, 8, 4, 1, 2, 3, 4]) 
pred: tensor([[ 0.0142, -0.0689, -0.1105,  ..., -0.0409,  0.1010,  0.3233],
        [ 0.0105, -0.0416, -0.0980,  ..., -0.0482,  0.1179,  0.3104],
        [-0.0195,  0.0585, -0.1542,  ..., -0.0724,  0.0603,  0.2052],
        ...,
        [-0.0362,  0.0917, -0.1345,  ..., -0.0800,  0.0513,  0.1830],
        [-0.0257,  0.0577, -0.1496,  ..., -0.0768,  0.0625,  0.2073],
        [-0.0176,  0.0361, -0.1574,  ..., -0.0600,  0.0591,  0.2160]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 0, 7, 5, 5, 5, 8, 4, 7, 1, 7, 0, 0, 4, 7, 3, 1, 6, 7, 0, 7, 6, 5, 2,
        1, 6, 3, 5, 6, 5, 3, 8, 8, 0, 4, 3, 3, 0, 4, 5, 8, 1, 2, 6, 3, 6, 8, 4,
        7, 3, 7, 8, 1, 7, 3, 5, 5, 3, 0, 6, 5, 6, 2, 8, 8, 6, 1, 7, 3, 8, 8, 6,
        2, 8, 6, 6, 8, 0, 3, 4, 2, 4, 8, 6, 6, 6, 5, 8, 4, 6, 3, 4, 7, 0, 5, 7,
        7, 4, 3, 3, 0, 3, 3, 2, 2, 1, 1, 2, 0, 1, 2, 6, 6, 7, 5, 7, 1, 2, 6, 0,
        3, 7, 8, 2, 1, 7, 5, 5]) 
pred: tensor([[-0.0357,  0.1262, -0.1901,  ..., -0.0914,  0.0137,  0.1397],
        [-0.0342,  0.1286, -0.1954,  ..., -0.0901,  0.0128,  0.1366],
        [ 0.1745, -0.5856, -0.0885,  ...,  0.0590,  0.2530,  0.7616],
        ...,
        [ 0.0591, -0.1572, -0.2220,  ..., -0.0348,  0.0766,  0.3714],
        [ 0.0328, -0.0688, -0.2015,  ..., -0.0411,  0.0647,  0.2994],
        [ 0.0424, -0.0843, -0.1812,  ..., -0.0302,  0.0711,  0.3166]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 2, 7, 8, 3, 2, 2, 6, 0, 2, 4, 1, 6, 7, 0, 0, 5, 0, 4, 3, 5, 8, 2, 4,
        1, 7, 7, 0, 5, 6, 6, 0, 1, 3, 6, 5, 8, 7, 6, 5, 4, 4, 7, 8, 5, 5, 1, 4,
        6, 5, 1, 6, 3, 5, 3, 0, 5, 3, 5, 3, 8, 1, 7, 8, 2, 4, 0, 0, 7, 5, 0, 7,
        4, 0, 4, 7, 7, 3, 3, 0, 6, 0, 1, 0, 2, 3, 0, 7, 2, 7, 8, 4, 1, 4, 0, 7,
        4, 6, 7, 4, 8, 0, 8, 3, 4, 1, 8, 0, 7, 1, 0, 0, 1, 1, 5, 7, 6, 8, 6, 7,
        2, 7, 4, 8, 6, 2, 2, 2]) 
pred: tensor([[-0.0154,  0.0430, -0.2301,  ..., -0.0632,  0.0348,  0.1805],
        [-0.0039,  0.0304, -0.2309,  ..., -0.0461,  0.0418,  0.1871],
        [-0.0118,  0.0203, -0.2228,  ..., -0.0536,  0.0343,  0.1995],
        ...,
        [ 0.0022, -0.1903, -0.0761,  ..., -0.0374,  0.1537,  0.4024],
        [-0.0008, -0.0236, -0.2314,  ..., -0.0423,  0.0585,  0.2284],
        [-0.0135,  0.0141, -0.2143,  ..., -0.0458,  0.0424,  0.1997]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 2, 0, 4, 5, 6, 4, 3, 3, 6, 6, 7, 2, 3, 7, 4, 0, 6, 2, 0, 5, 8, 6, 6,
        6, 3, 5, 3, 0, 7, 6, 1, 0, 7, 1, 8, 2, 8, 3, 6, 6, 3, 3, 6, 7, 0, 5, 6,
        0, 0, 7, 4, 1, 8, 1, 2, 6, 4, 3, 5, 2, 3, 7, 1, 2, 3, 3, 2, 0, 1, 2, 0,
        8, 2, 2, 8, 1, 2, 1, 3, 4, 0, 6, 2, 3, 4, 2, 2, 2, 7, 6, 1, 5, 6, 1, 0,
        5, 0, 2, 8, 7, 5, 2, 0, 7, 0, 8, 0, 7, 0, 0, 0, 6, 2, 4, 7, 0, 3, 4, 5,
        2, 3, 2, 8, 7, 7, 3, 6]) 
pred: tensor([[-0.0085, -0.0401, -0.2402,  ..., -0.0272,  0.0773,  0.2177],
        [-0.0127, -0.0686, -0.2015,  ..., -0.0243,  0.1088,  0.2439],
        [-0.0330,  0.1071, -0.2380,  ..., -0.0599,  0.0347,  0.1119],
        ...,
        [ 0.0467, -0.2647, -0.2959,  ...,  0.0546,  0.1641,  0.3442],
        [ 0.1031, -0.4842, -0.2623,  ...,  0.1253,  0.3001,  0.5136],
        [ 0.0475, -0.3759, -0.2154,  ...,  0.0555,  0.2372,  0.4581]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 8, 7, 8, 5, 4, 6, 5, 2, 8, 4, 1, 7, 6, 7, 2, 3, 7, 1, 8, 7, 2, 2, 2,
        0, 0, 5, 6, 3, 0, 5, 0, 4, 0, 7, 6, 5, 3, 2, 6, 5, 3, 3, 4, 4, 0, 1, 5,
        1, 4, 1, 3, 5, 7, 6, 5, 5, 7, 3, 6, 2, 5, 0, 0, 4, 1, 1, 6, 8, 0, 0, 4,
        8, 5, 4, 7, 6, 3, 2, 0, 6, 1, 3, 5, 6, 5, 8, 5, 3, 6, 8, 2, 0, 1, 0, 8,
        2, 7, 2, 0, 0, 6, 3, 1, 8, 0, 7, 7, 4, 4, 1, 4, 1, 4, 0, 4, 6, 2, 2, 7,
        6, 8, 3, 0, 1, 1, 6, 2]) 
pred: tensor([[-0.0506,  0.0431, -0.2271,  ..., -0.0510,  0.0861,  0.1349],
        [ 0.1538, -1.0027, -0.4039,  ...,  0.3570,  0.5437,  0.7156],
        [ 0.0109, -0.4827, -0.1507,  ...,  0.1184,  0.3954,  0.4859],
        ...,
        [-0.0372,  0.0796, -0.1916,  ..., -0.0441,  0.0800,  0.1331],
        [ 0.0047, -0.4326, -0.1163,  ...,  0.0854,  0.3833,  0.4706],
        [ 0.0161, -0.2788, -0.2452,  ...,  0.0869,  0.2398,  0.3299]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 3, 5, 4, 1, 7, 7, 8, 1, 5, 1, 8, 6, 3, 8, 3, 3, 1, 7, 0, 2, 8, 6, 7,
        7, 2, 8, 4, 8, 0, 2, 1, 1, 7, 3, 7, 8, 3, 4, 1, 8, 1, 4, 7, 2, 5, 3, 3,
        3, 4, 6, 8, 3, 2, 7, 2, 2, 7, 4, 8, 2, 1, 4, 4, 1, 0, 3, 3, 3, 6, 7, 0,
        4, 3, 1, 6, 2, 1, 7, 4, 1, 5, 7, 2, 5, 4, 3, 0, 8, 6, 4, 2, 8, 6, 1, 2,
        3, 1, 8, 2, 7, 2, 7, 8, 0, 5, 3, 0, 2, 3, 0, 5, 5, 4, 4, 0, 7, 8, 4, 5,
        0, 5, 8, 3, 0, 8, 1, 6]) 
pred: tensor([[-0.0630,  0.0244, -0.1683,  ..., -0.0309,  0.1328,  0.1524],
        [-0.0638, -0.1204, -0.1979,  ...,  0.0255,  0.1898,  0.2053],
        [-0.0632,  0.0263, -0.1961,  ..., -0.0260,  0.1179,  0.1337],
        ...,
        [ 0.0325, -1.0818, -0.3382,  ...,  0.4222,  0.6807,  0.6534],
        [-0.0521,  0.0324, -0.2001,  ..., -0.0300,  0.1011,  0.1393],
        [-0.0277, -0.2643, -0.2372,  ...,  0.1168,  0.2808,  0.2652]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 5, 5, 5, 8, 6, 0, 1, 8, 5, 7, 6, 6, 8, 5, 6, 2, 7, 8, 2, 2, 6, 7, 1,
        2, 3, 4, 7, 7, 1, 8, 2, 4, 3, 5, 1, 5, 6, 5, 7, 0, 2, 8, 8, 2, 6, 6, 6,
        0, 1, 7, 6, 5, 1, 8, 8, 4, 8, 1, 1, 3, 5, 5, 8, 7, 5, 1, 0, 5, 8, 4, 3,
        3, 3, 0, 7, 2, 0, 0, 6, 4, 1, 6, 0, 8, 7, 2, 6, 5, 6, 6, 6, 5, 6, 6, 7,
        7, 2, 2, 5, 7, 2, 1, 0, 6, 6, 2, 4, 0, 3, 0, 4, 1, 0, 8, 6, 0, 8, 2, 3,
        6, 6, 7, 5, 7, 8, 6, 3]) 
pred: tensor([[-0.1087, -0.5158, -0.1581,  ...,  0.1470,  0.4238,  0.3882],
        [-0.1283, -0.3697, -0.0777,  ...,  0.0539,  0.3555,  0.3607],
        [-0.1033, -0.3594, -0.1575,  ...,  0.0638,  0.3321,  0.3343],
        ...,
        [-0.1200, -1.2495, -0.1926,  ...,  0.3981,  0.8085,  0.7245],
        [-0.1888, -1.3932,  0.1264,  ...,  0.3577,  1.0553,  0.9183],
        [-0.0803, -0.2812, -0.1943,  ...,  0.1050,  0.3215,  0.2611]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 6, 0, 0, 8, 0, 6, 6, 0, 8, 0, 4, 6, 2, 3, 2, 7, 3, 6, 3, 1, 3, 3, 0,
        1, 5, 0, 4, 1, 2, 6, 4, 0, 2, 0, 1, 4, 0, 1, 6, 0, 3, 2, 0, 4, 3, 4, 4,
        4, 4, 0, 5, 0, 3, 1, 8, 0, 2, 1, 8, 4, 0, 8, 4, 5, 7, 2, 2, 7, 2, 0, 0,
        7, 3, 6, 6, 5, 8, 7, 7, 6, 1, 4, 5, 0, 6, 1, 7, 6, 0, 2, 0, 2, 5, 1, 4,
        8, 5, 7, 0, 8, 5, 1, 3, 6, 5, 6, 8, 4, 0, 2, 6, 0, 8, 5, 0, 1, 4, 5, 6,
        6, 1, 5, 0, 3, 5, 0, 6]) 
pred: tensor([[-0.2160, -1.4215, -0.1502,  ...,  0.4726,  0.8769,  0.7617],
        [-0.1615, -0.5711, -0.1507,  ...,  0.1701,  0.4316,  0.3783],
        [-0.0735,  0.1602, -0.1885,  ..., -0.0654,  0.0467,  0.0556],
        ...,
        [-0.1140, -0.1354, -0.1495,  ...,  0.0273,  0.2349,  0.1955],
        [-0.1143,  0.1279, -0.1408,  ..., -0.0681,  0.0937,  0.0638],
        [-0.2151, -0.6010, -0.0323,  ...,  0.1834,  0.5447,  0.3937]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 8, 2, 8, 8, 3, 1, 8, 4, 7, 0, 2, 1, 5, 1, 2, 2, 1, 2, 3, 5, 7, 3, 1,
        2, 8, 7, 6, 8, 3, 2, 6, 4, 3, 6, 6, 6, 1, 0, 6, 3, 6, 5, 7, 4, 5, 8, 3,
        5, 4, 5, 4, 7, 7, 0, 6, 2, 3, 4, 4, 7, 6, 5, 6, 2, 4, 8, 3, 8, 5, 0, 5,
        8, 2, 8, 7, 8, 0, 0, 0, 7, 3, 4, 1, 4, 2, 2, 5, 1, 3, 3, 0, 2, 1, 7, 8,
        3, 6, 3, 3, 7, 8, 6, 2, 5, 7, 6, 4, 5, 1, 5, 8, 2, 7, 3, 6, 6, 4, 6, 8,
        4, 0, 2, 5, 1, 7, 4, 2]) 
pred: tensor([[-0.2711, -0.8646, -0.1011,  ...,  0.3150,  0.5662,  0.4479],
        [-0.1556, -0.2911, -0.1365,  ...,  0.1055,  0.3050,  0.2398],
        [-0.1013,  0.1037, -0.1573,  ..., -0.0313,  0.0893,  0.0621],
        ...,
        [-0.2605, -1.8248, -0.3583,  ...,  0.7079,  0.8314,  0.8234],
        [-0.2179, -0.5507, -0.1052,  ...,  0.1751,  0.3609,  0.3415],
        [-0.0892,  0.0764, -0.1840,  ..., -0.0230,  0.1035,  0.0808]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 5, 6, 8, 0, 7, 0, 0, 4, 2, 4, 0, 1, 5, 1, 2, 4, 3, 0, 0, 0, 1, 5, 2,
        1, 5, 3, 0, 5, 8, 4, 5, 2, 2, 4, 0, 2, 2, 1, 0, 1, 5, 8, 7, 5, 0, 4, 3,
        3, 2, 3, 4, 6, 1, 3, 3, 2, 6, 0, 2, 0, 6, 4, 1, 2, 7, 6, 8, 8, 3, 1, 8,
        3, 1, 2, 2, 2, 0, 4, 4, 5, 3, 2, 4, 2, 4, 0, 6, 0, 3, 8, 6, 1, 8, 7, 0,
        7, 3, 7, 5, 2, 0, 5, 6, 1, 5, 8, 4, 4, 0, 8, 6, 4, 0, 4, 1, 3, 4, 2, 6,
        7, 8, 3, 7, 5, 0, 2, 1]) 
pred: tensor([[-0.0982,  0.0883, -0.1838,  ..., -0.0280,  0.0588,  0.0683],
        [-0.1434, -0.1757, -0.1828,  ...,  0.0798,  0.1876,  0.1689],
        [-0.2837, -0.8936, -0.2226,  ...,  0.3863,  0.4808,  0.3792],
        ...,
        [-0.0831,  0.1338, -0.2187,  ..., -0.0248,  0.0486,  0.0251],
        [-0.3407, -0.8326, -0.0723,  ...,  0.3434,  0.4533,  0.3486],
        [-0.1390, -0.1025, -0.1788,  ...,  0.0326,  0.1898,  0.1310]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 1, 8, 0, 7, 7, 2, 8, 0, 4, 8, 5, 1, 1, 2, 7, 4, 0, 0, 8, 4, 1, 8, 3,
        5, 8, 5, 3, 2, 0, 8, 0, 3, 2, 8, 4, 0, 7, 4, 5, 2, 6, 1, 8, 8, 1, 0, 7,
        0, 6, 2, 7, 2, 4, 5, 2, 0, 2, 3, 0, 5, 0, 0, 8, 8, 0, 5, 6, 0, 7, 4, 5,
        1, 1, 2, 4, 3, 2, 3, 3, 8, 5, 5, 8, 3, 4, 8, 1, 0, 7, 2, 3, 1, 2, 4, 0,
        6, 1, 7, 7, 4, 0, 7, 7, 6, 6, 5, 8, 8, 2, 4, 7, 4, 2, 3, 0, 3, 3, 7, 8,
        7, 7, 2, 3, 0, 8, 4, 7]) 
pred: tensor([[-0.3475, -0.8334, -0.2832,  ...,  0.2289,  0.2839,  0.3650],
        [-0.2139, -0.3665, -0.3151,  ...,  0.1534,  0.1345,  0.1321],
        [-0.2387, -0.4085, -0.2032,  ...,  0.1395,  0.2184,  0.2212],
        ...,
        [-0.3773, -1.0859, -0.3759,  ...,  0.3825,  0.3389,  0.4012],
        [-0.2199, -0.2555, -0.2457,  ...,  0.1190,  0.1479,  0.1138],
        [-1.0148, -3.3588, -0.4214,  ...,  1.0866,  0.8833,  1.1299]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 3, 4, 3, 6, 6, 6, 5, 2, 8, 7, 3, 2, 6, 0, 5, 5, 1, 1, 5, 1, 6, 0, 2,
        8, 6, 0, 5, 6, 0, 1, 0, 2, 6, 0, 5, 7, 8, 0, 5, 2, 3, 2, 1, 7, 5, 4, 4,
        8, 6, 2, 1, 5, 1, 3, 8, 3, 7, 4, 3, 8, 6, 3, 6, 7, 8, 2, 6, 6, 8, 2, 5,
        6, 1, 8, 0, 2, 0, 8, 6, 5, 0, 2, 4, 8, 0, 2, 8, 6, 3, 5, 4, 1, 1, 7, 2,
        7, 6, 3, 4, 8, 8, 3, 6, 6, 4, 7, 7, 6, 4, 2, 6, 4, 4, 7, 5, 8, 3, 3, 6,
        7, 4, 4, 4, 0, 3, 1, 1]) 
pred: tensor([[-3.1308e-01, -5.8765e-01, -3.1491e-01,  ...,  1.7475e-01,
          1.3833e-01,  2.3079e-01],
        [-3.0468e-01, -3.4237e-01, -1.9522e-01,  ...,  9.1980e-02,
          1.2918e-01,  1.3706e-01],
        [-2.1168e-01, -1.3693e-01, -1.9095e-01,  ...,  4.8493e-04,
          3.3402e-02,  1.1615e-01],
        ...,
        [-3.0412e-01, -4.8548e-01, -2.5876e-01,  ...,  6.9035e-02,
          7.7537e-02,  2.2462e-01],
        [-1.6707e-01, -4.8309e-02, -1.7251e-01,  ...,  2.7588e-03,
          3.8303e-03,  8.7784e-02],
        [-2.1374e-01, -8.5040e-02, -1.9864e-01,  ..., -2.2305e-02,
          3.4567e-02,  9.2016e-02]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 4, 6, 8, 1, 1, 3, 0, 1, 7, 1, 4, 6, 5, 6, 5, 5, 4, 7, 1, 4, 5, 3, 8,
        4, 1, 6, 8, 8, 3, 3, 2, 5, 7, 2, 2, 7, 3, 2, 1, 2, 6, 8, 0, 5, 4, 5, 3,
        7, 4, 8, 8, 2, 2, 6, 5, 3, 8, 4, 2, 0, 3, 1, 5, 8, 0, 3, 4, 5, 6, 7, 1,
        2, 5, 8, 8, 7, 4, 0, 8, 4, 0, 7, 8, 6, 1, 5, 1, 0, 7, 5, 5, 4, 3, 5, 8,
        7, 8, 0, 6, 6, 8, 2, 2, 4, 2, 2, 8, 6, 4, 7, 6, 7, 4, 8, 3, 0, 2, 2, 8,
        4, 7, 4, 0, 4, 5, 2, 8]) 
pred: tensor([[-0.2031, -0.1101, -0.2116,  ...,  0.0270,  0.0973,  0.0816],
        [-0.2690, -0.1616, -0.1443,  ...,  0.0121,  0.0647,  0.1028],
        [-0.4602, -0.8412, -0.2874,  ...,  0.2287,  0.1767,  0.2875],
        ...,
        [-0.5851, -0.9842, -0.1817,  ...,  0.2269,  0.1852,  0.3324],
        [-0.3180, -0.3403, -0.1721,  ...,  0.0155,  0.0103,  0.1802],
        [-0.3144, -0.3160, -0.1967,  ...,  0.0624,  0.1150,  0.1399]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 6, 2, 4, 4, 8, 2, 5, 6, 4, 7, 7, 3, 4, 4, 5, 1, 1, 8, 7, 0, 0, 5, 2,
        3, 7, 2, 5, 4, 4, 4, 5, 2, 5, 6, 1, 7, 0, 6, 3, 1, 6, 0, 6, 7, 2, 4, 1,
        6, 6, 1, 3, 5, 3, 0, 1, 8, 0, 2, 0, 1, 4, 3, 7, 7, 4, 6, 3, 8, 8, 6, 0,
        7, 0, 2, 7, 0, 0, 5, 4, 6, 6, 3, 7, 3, 1, 8, 7, 0, 7, 2, 6, 0, 8, 6, 2,
        6, 1, 1, 4, 3, 3, 1, 5, 0, 5, 3, 7, 5, 7, 8, 3, 0, 8, 7, 6, 3, 5, 6, 0,
        7, 6, 0, 0, 6, 5, 5, 3]) 
pred: tensor([[-1.9887e-01, -1.7196e-01, -1.8221e-01,  ...,  6.7097e-02,
          1.4271e-01,  1.1897e-01],
        [-1.0003e+00, -2.0286e+00,  1.2125e-02,  ...,  3.9998e-01,
          4.8558e-01,  7.7288e-01],
        [-2.6957e-01, -2.6093e-01, -2.3889e-01,  ...,  4.1836e-02,
          8.3679e-02,  1.0648e-01],
        ...,
        [-2.7297e-01, -1.3712e-01, -1.2657e-01,  ...,  9.9808e-03,
          9.6344e-02,  9.0965e-02],
        [-2.5365e-01, -1.2643e-01, -1.5639e-01,  ..., -7.9608e-04,
          5.5514e-02,  9.4194e-02],
        [-4.4887e-01, -8.3507e-01, -2.6045e-01,  ...,  1.6160e-01,
          1.7422e-01,  3.3890e-01]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 6, 0, 3, 1, 8, 5, 2, 5, 3, 7, 6, 2, 2, 3, 5, 6, 3, 6, 6, 8, 4, 8, 6,
        5, 2, 0, 0, 6, 2, 4, 6, 3, 1, 1, 3, 6, 1, 5, 5, 4, 6, 4, 6, 7, 3, 4, 1,
        3, 6, 7, 1, 0, 4, 8, 4, 8, 7, 7, 5, 3, 2, 1, 8, 6, 5, 4, 4, 2, 3, 8, 5,
        4, 3, 7, 5, 6, 5, 2, 1, 1, 0, 8, 3, 0, 5, 8, 3, 8, 4, 6, 7, 6, 1, 4, 7,
        2, 7, 1, 1, 1, 6, 1, 2, 7, 6, 0, 6, 2, 1, 3, 7, 3, 8, 0, 3, 6, 5, 6, 4,
        0, 2, 3, 7, 1, 0, 2, 0]) 
pred: tensor([[-0.0971,  0.1585, -0.0919,  ..., -0.0454,  0.0034,  0.0249],
        [-0.4252, -0.5275, -0.0710,  ...,  0.1095,  0.2418,  0.2317],
        [-0.0195,  0.2509, -0.2768,  ..., -0.0615, -0.0591, -0.0458],
        ...,
        [-0.0281,  0.2177, -0.2575,  ..., -0.0806, -0.0644, -0.0077],
        [-0.1233,  0.0448, -0.1550,  ..., -0.0152,  0.0368,  0.0591],
        [-0.1021,  0.1685, -0.0888,  ..., -0.0520, -0.0024,  0.0192]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 8, 3, 6, 4, 1, 7, 6, 6, 2, 3, 5, 3, 3, 0, 6, 5, 2, 3, 8, 7, 6, 5, 5,
        8, 6, 2, 7, 2, 4, 5, 6, 0, 3, 2, 1, 8, 6, 2, 0, 2, 8, 8, 6, 7, 0, 6, 3,
        3, 4, 4, 5, 2, 1, 0, 3, 5, 5, 0, 8, 1, 0, 0, 0, 7, 7, 6, 8, 4, 8, 1, 1,
        6, 1, 5, 5, 2, 3, 2, 4, 7, 4, 3, 2, 5, 3, 8, 3, 1, 1, 7, 4, 8, 0, 5, 5,
        4, 8, 3, 8, 7, 7, 2, 0, 5, 1, 4, 6, 6, 5, 4, 6, 5, 5, 0, 1, 4, 5, 5, 6,
        2, 0, 3, 4, 6, 2, 1, 0]) 
pred: tensor([[-0.6547, -0.8707, -0.1769,  ...,  0.2595,  0.3556,  0.1903],
        [-2.0806, -4.8566, -0.4656,  ...,  1.3645,  1.4315,  1.4050],
        [-0.6573, -0.7891, -0.0730,  ...,  0.1992,  0.2638,  0.2047],
        ...,
        [-0.4972, -0.9778, -0.5461,  ...,  0.3006,  0.2885,  0.1989],
        [-0.0311,  0.2252, -0.1939,  ..., -0.0338, -0.0266, -0.0226],
        [-0.0901,  0.1952, -0.2026,  ..., -0.0174, -0.0102, -0.0621]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 5, 5, 7, 2, 4, 4, 0, 5, 6, 2, 2, 1, 0, 0, 0, 8, 5, 0, 5, 1, 8, 7, 8,
        5, 3, 2, 0, 1, 6, 7, 2, 3, 7, 8, 5, 3, 2, 7, 2, 8, 3, 8, 4, 6, 5, 5, 2,
        8, 2, 0, 0, 6, 3, 8, 2, 3, 1, 7, 5, 3, 7, 3, 4, 3, 3, 1, 4, 0, 2, 5, 4,
        2, 4, 6, 2, 6, 4, 2, 5, 4, 0, 1, 4, 2, 3, 8, 3, 5, 4, 8, 8, 7, 7, 1, 4,
        1, 5, 8, 1, 3, 6, 5, 2, 8, 4, 3, 7, 4, 7, 6, 7, 8, 3, 5, 6, 0, 2, 5, 3,
        1, 1, 0, 4, 5, 1, 2, 2]) 
pred: tensor([[-0.7639, -1.2336, -0.3462,  ...,  0.3821,  0.3866,  0.2639],
        [-1.7077, -3.2039, -0.4002,  ...,  1.0895,  1.1426,  0.6329],
        [-2.2522, -3.8891,  0.1010,  ...,  1.3595,  1.7077,  0.7831],
        ...,
        [-0.2904, -0.1901, -0.3198,  ...,  0.1256,  0.0868, -0.0521],
        [-0.5281, -0.5891, -0.1997,  ...,  0.1636,  0.1109,  0.1255],
        [-0.2740, -0.0952, -0.2557,  ...,  0.1157,  0.1188, -0.0704]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 0, 8, 6, 7, 8, 7, 2, 8, 6, 8, 7, 2, 8, 5, 7, 2, 6, 1, 7, 0, 4, 4, 7,
        1, 5, 4, 4, 6, 4, 7, 5, 1, 8, 1, 7, 2, 1, 3, 4, 4, 0, 7, 4, 5, 6, 4, 0,
        0, 0, 5, 1, 3, 3, 0, 2, 0, 2, 7, 3, 2, 8, 3, 0, 7, 8, 4, 6, 0, 0, 5, 4,
        6, 1, 1, 3, 3, 1, 4, 3, 1, 0, 0, 1, 6, 0, 3, 4, 6, 4, 8, 5, 7, 1, 2, 4,
        1, 8, 1, 5, 5, 0, 7, 6, 2, 2, 5, 5, 6, 8, 0, 1, 0, 4, 2, 7, 1, 7, 7, 0,
        6, 6, 5, 1, 6, 8, 5, 8]) 
pred: tensor([[-2.2171, -4.3464, -0.7692,  ...,  1.4130,  1.2795,  0.8323],
        [ 0.0759,  0.3754, -0.3401,  ..., -0.0282, -0.1656, -0.1520],
        [-1.5783, -2.4873, -0.3426,  ...,  0.8592,  0.9100,  0.3499],
        ...,
        [-3.5488, -6.3500, -0.5112,  ...,  2.1287,  2.1627,  1.0442],
        [-2.6464, -4.0208, -0.0949,  ...,  1.2634,  1.4416,  0.5652],
        [-0.6654, -0.8023, -0.2421,  ...,  0.3165,  0.3413,  0.0852]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 0, 6, 3, 3, 0, 0, 1, 5, 2, 5, 6, 5, 6, 2, 2, 0, 6, 1, 7, 2, 5, 6, 3,
        6, 6, 2, 6, 2, 3, 5, 0, 8, 2, 0, 6, 2, 2, 1, 4, 1, 5, 0, 8, 0, 3, 8, 0,
        8, 7, 0, 2, 8, 0, 2, 2, 4, 2, 0, 0, 6, 0, 1, 1, 5, 0, 2, 1, 6, 0, 2, 7,
        3, 1, 3, 5, 2, 5, 2, 2, 8, 6, 0, 2, 4, 6, 4, 7, 7, 6, 8, 8, 0, 1, 3, 7,
        0, 4, 7, 3, 8, 1, 6, 3, 1, 4, 7, 7, 6, 6, 8, 5, 4, 1, 2, 0, 0, 6, 5, 7,
        4, 3, 4, 8, 0, 0, 6, 4]) 
pred: tensor([[-5.2673e-01, -5.3922e-01, -2.9155e-01,  ...,  3.4195e-01,
          2.8049e-01, -7.2705e-02],
        [-2.1823e-01, -2.6256e-03, -3.7554e-01,  ...,  1.2690e-01,
         -8.5110e-02, -1.8863e-01],
        [-9.3031e-01, -1.3740e+00, -4.6544e-01,  ...,  4.8200e-01,
          3.9384e-01,  1.6431e-01],
        ...,
        [ 1.2356e-01,  3.6032e-01, -3.4933e-01,  ...,  3.6895e-04,
         -1.5687e-01, -1.4515e-01],
        [-1.0877e+00, -1.9003e+00, -5.4574e-01,  ...,  7.0509e-01,
          6.1381e-01,  2.6388e-01],
        [-1.0278e+00, -1.2038e+00, -2.5269e-01,  ...,  4.6421e-01,
          4.1353e-01,  4.6727e-02]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 5, 6, 2, 3, 4, 8, 8, 3, 0, 3, 8, 3, 6, 2, 7, 5, 8, 4, 5, 0, 4, 4, 1,
        6, 1, 4, 3, 5, 3, 2, 8, 1, 3, 4, 4, 3, 3, 2, 0, 1, 1, 6, 0, 6, 0, 3, 0,
        3, 8, 1, 3, 2, 4, 5, 6, 3, 3, 1, 6, 5, 6, 3, 4, 1, 4, 2, 3, 7, 7, 4, 5,
        1, 6, 7, 7, 8, 8, 7, 8, 2, 3, 4, 1, 6, 8, 7, 0, 6, 0, 3, 4, 4, 5, 5, 0,
        8, 7, 8, 3, 8, 7, 8, 1, 7, 5, 2, 1, 3, 8, 4, 7, 0, 1, 3, 6, 0, 0, 8, 4,
        0, 4, 8, 6, 6, 6, 4, 6]) 
pred: tensor([[ 0.0955,  0.4709, -0.2573,  ..., -0.0843, -0.2321, -0.1753],
        [-0.1805,  0.1559, -0.2119,  ...,  0.0287, -0.0441, -0.1560],
        [-0.9178, -1.5983, -0.5342,  ...,  0.5535,  0.3879,  0.2660],
        ...,
        [-1.8495, -3.9189, -1.0348,  ...,  1.3220,  0.9793,  0.8092],
        [-0.7309, -0.8866, -0.3574,  ...,  0.4599,  0.3548, -0.0521],
        [-0.3211, -0.2647, -0.3301,  ...,  0.2247,  0.1115, -0.0835]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 4, 0, 4, 4, 3, 0, 3, 5, 1, 4, 5, 3, 3, 5, 6, 1, 4, 8, 4, 6, 5, 2, 8,
        1, 7, 1, 0, 5, 4, 5, 0, 5, 7, 6, 5, 8, 1, 7, 2, 8, 0, 5, 0, 1, 6, 4, 5,
        0, 3, 5, 1, 7, 8, 6, 1, 2, 4, 8, 5, 4, 0, 2, 7, 4, 3, 4, 8, 5, 5, 5, 3,
        6, 3, 0, 1, 6, 4, 4, 2, 2, 4, 2, 6, 4, 6, 0, 1, 6, 4, 0, 2, 4, 5, 7, 2,
        1, 2, 7, 0, 8, 6, 1, 1, 2, 3, 0, 4, 6, 8, 5, 1, 5, 3, 3, 6, 7, 3, 4, 0,
        0, 6, 6, 2, 5, 6, 8, 2]) 
pred: tensor([[-1.6912, -4.0570, -1.1618,  ...,  1.4336,  0.9249,  0.9467],
        [-0.3524, -0.5850, -0.5659,  ...,  0.3043,  0.0484,  0.0074],
        [ 0.1714,  0.4728, -0.3177,  ..., -0.0106, -0.2943, -0.2322],
        ...,
        [-0.9243, -1.7923, -0.5885,  ...,  0.6498,  0.3927,  0.3958],
        [-0.4705, -0.5714, -0.3313,  ...,  0.2338,  0.1432,  0.0761],
        [-0.5696, -0.5814, -0.0936,  ...,  0.1398,  0.0578,  0.1249]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 8, 3, 5, 5, 8, 1, 6, 8, 4, 8, 4, 4, 2, 7, 1, 7, 4, 6, 1, 3, 2, 4, 7,
        6, 2, 1, 1, 8, 6, 0, 8, 8, 7, 3, 8, 1, 2, 0, 4, 7, 0, 2, 4, 5, 1, 6, 0,
        7, 7, 1, 3, 7, 7, 4, 5, 8, 8, 1, 2, 7, 0, 7, 4, 8, 0, 8, 4, 7, 4, 3, 3,
        4, 8, 1, 0, 1, 2, 1, 5, 0, 5, 3, 7, 7, 0, 4, 8, 0, 8, 3, 3, 1, 0, 6, 8,
        4, 2, 6, 6, 1, 2, 3, 2, 5, 0, 2, 4, 1, 5, 3, 6, 7, 7, 1, 5, 8, 5, 5, 0,
        8, 0, 5, 7, 6, 7, 5, 5]) 
pred: tensor([[-1.1143, -1.8385, -0.4064,  ...,  0.5876,  0.3491,  0.3670],
        [-1.7570, -4.0753, -1.0252,  ...,  1.4534,  0.8428,  1.0047],
        [-0.7385, -0.9903, -0.3308,  ...,  0.4179,  0.1075,  0.0989],
        ...,
        [-0.3670, -0.2748, -0.2882,  ...,  0.1605,  0.0263, -0.0428],
        [-0.3135, -0.4006, -0.3325,  ...,  0.1679, -0.0518,  0.0563],
        [-0.3399, -0.4994, -0.3743,  ...,  0.2127, -0.0545,  0.0548]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 3, 2, 1, 7, 5, 5, 8, 8, 1, 5, 6, 2, 1, 8, 1, 8, 8, 0, 6, 1, 5, 1, 5,
        8, 3, 2, 1, 0, 3, 5, 7, 5, 0, 7, 1, 3, 3, 5, 8, 5, 3, 1, 6, 7, 2, 4, 7,
        3, 1, 3, 6, 8, 4, 2, 6, 3, 3, 5, 2, 5, 3, 0, 5, 4, 2, 6, 8, 0, 0, 5, 6,
        1, 5, 1, 0, 7, 7, 8, 5, 2, 3, 7, 3, 5, 2, 5, 6, 3, 0, 1, 1, 6, 5, 0, 6,
        4, 5, 4, 6, 7, 7, 3, 4, 7, 4, 6, 7, 0, 6, 2, 4, 1, 6, 0, 2, 1, 7, 0, 2,
        8, 4, 0, 2, 2, 0, 8, 0]) 
pred: tensor([[ 1.6251e-01,  4.2289e-01, -3.1191e-01,  ..., -4.6332e-02,
         -3.5398e-01, -2.0419e-01],
        [ 1.8776e-01,  4.7794e-01, -3.4001e-01,  ...,  2.0147e-03,
         -3.4480e-01, -2.7283e-01],
        [ 4.5556e-01,  6.8765e-01, -3.7425e-01,  ..., -1.2165e-01,
         -4.6848e-01, -2.0645e-01],
        ...,
        [ 5.1136e-01,  8.0642e-01, -3.8337e-01,  ..., -1.0866e-01,
         -5.4828e-01, -3.0734e-01],
        [-1.3024e+00, -3.2243e+00, -7.6840e-01,  ...,  9.2796e-01,
          6.9753e-01,  1.0727e+00],
        [ 2.3628e-01,  2.3856e-01, -3.7876e-01,  ..., -2.0511e-02,
         -4.0197e-01, -1.0767e-01]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 8, 0, 0, 0, 3, 8, 0, 2, 5, 4, 4, 7, 0, 5, 6, 7, 0, 8, 5, 3, 8, 8, 0,
        0, 8, 5, 5, 0, 5, 5, 2, 4, 5, 5, 3, 8, 1, 6, 0, 1, 1, 4, 6, 2, 6, 5, 1,
        8, 0, 3, 1, 2, 3, 7, 3, 6, 8, 3, 2, 7, 3, 7, 6, 5, 3, 0, 2, 4, 8, 3, 1,
        4, 2, 8, 6, 1, 3, 5, 2, 5, 0, 6, 0, 3, 5, 5, 6, 4, 0, 8, 6, 2, 4, 3, 7,
        6, 4, 4, 4, 2, 6, 6, 5, 7, 3, 2, 6, 3, 6, 4, 7, 3, 8, 8, 3, 1, 7, 8, 1,
        4, 8, 5, 2, 1, 8, 1, 3]) 
pred: tensor([[ 0.2079,  0.4865, -0.2869,  ..., -0.0854, -0.4235, -0.2415],
        [-1.6939, -3.9075, -0.6432,  ...,  1.0617,  1.1668,  1.3499],
        [ 0.7539,  1.0936, -0.3913,  ..., -0.1721, -0.6998, -0.3964],
        ...,
        [-1.7444, -3.6771, -0.5292,  ...,  0.9815,  1.1462,  1.2189],
        [ 0.1496,  0.6107, -0.2259,  ..., -0.0942, -0.4666, -0.3378],
        [-0.5160, -0.3911, -0.2901,  ...,  0.2288,  0.0743, -0.1274]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 3, 4, 4, 0, 2, 4, 4, 0, 7, 2, 6, 7, 0, 4, 7, 5, 8, 5, 8, 7, 1, 2, 2,
        3, 5, 2, 3, 0, 8, 3, 1, 4, 0, 8, 6, 6, 0, 2, 6, 3, 8, 4, 7, 8, 6, 4, 0,
        6, 7, 0, 1, 2, 8, 1, 2, 8, 4, 2, 3, 8, 0, 7, 2, 6, 1, 5, 1, 0, 0, 1, 2,
        0, 3, 1, 3, 5, 7, 5, 2, 1, 7, 7, 2, 8, 3, 6, 0, 0, 1, 4, 8, 1, 2, 8, 1,
        7, 3, 4, 1, 7, 4, 2, 7, 7, 3, 7, 3, 4, 2, 1, 8, 6, 4, 0, 1, 1, 6, 7, 2,
        2, 4, 5, 5, 4, 1, 0, 1]) 
pred: tensor([[-0.5045, -0.3132, -0.1043,  ...,  0.0285,  0.0941,  0.0209],
        [-0.9192, -1.2031, -0.1014,  ...,  0.1943,  0.2899,  0.3535],
        [ 0.0816,  0.2657, -0.3140,  ..., -0.0026, -0.2418, -0.1906],
        ...,
        [ 0.1510,  0.4640, -0.1277,  ..., -0.1272, -0.3828, -0.2142],
        [ 0.6446,  0.9088, -0.2844,  ..., -0.1917, -0.6167, -0.3021],
        [ 0.1595,  0.5591, -0.3468,  ..., -0.0390, -0.4106, -0.4039]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 6, 2, 6, 0, 5, 8, 6, 3, 1, 1, 1, 0, 8, 4, 6, 2, 5, 7, 2, 1, 7, 3, 1,
        5, 2, 4, 6, 7, 5, 4, 1, 4, 0, 8, 5, 8, 8, 3, 0, 1, 2, 7, 2, 0, 6, 4, 0,
        4, 4, 0, 2, 2, 6, 1, 3, 3, 8, 1, 3, 0, 1, 0, 3, 0, 3, 0, 3, 7, 8, 6, 7,
        3, 8, 3, 6, 8, 8, 6, 5, 6, 0, 7, 7, 2, 1, 4, 0, 7, 8, 5, 6, 0, 4, 0, 6,
        0, 7, 3, 1, 5, 6, 6, 8, 1, 7, 0, 6, 3, 2, 2, 3, 7, 5, 7, 2, 3, 2, 2, 4,
        4, 7, 4, 8, 4, 4, 6, 0]) 
pred: tensor([[-1.3932, -2.5713, -0.2017,  ...,  0.4916,  1.0111,  1.0362],
        [-1.6443, -2.4417, -0.1278,  ...,  0.5412,  0.9232,  0.7313],
        [ 0.6527,  1.0875, -0.1849,  ..., -0.2478, -0.6316, -0.3752],
        ...,
        [-0.1306,  0.5848,  0.0473,  ..., -0.1799, -0.3400, -0.3897],
        [-0.3338,  0.1886, -0.0146,  ..., -0.0924, -0.0842, -0.2080],
        [ 0.5375,  0.8747, -0.1299,  ..., -0.2336, -0.5813, -0.3283]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 0, 2, 0, 3, 8, 6, 0, 7, 2, 0, 6, 2, 6, 8, 3, 5, 2, 1, 4, 1, 1, 3, 1,
        4, 1, 1, 1, 2, 8, 0, 2, 6, 5, 1, 0, 1, 4, 4, 3, 4, 6, 6, 1, 2, 5, 7, 8,
        7, 8, 3, 8, 4, 0, 8, 2, 2, 3, 3, 4, 7, 6, 2, 2, 1, 5, 5, 1, 8, 3, 0, 7,
        6, 3, 8, 6, 6, 6, 8, 3, 6, 0, 0, 6, 6, 8, 0, 8, 5, 2, 3, 1, 1, 2, 2, 1,
        0, 8, 0, 0, 4, 5, 6, 6, 0, 2, 8, 0, 5, 8, 6, 8, 3, 0, 3, 2, 6, 0, 5, 4,
        1, 0, 7, 8, 7, 1, 3, 2]) 
pred: tensor([[ 0.9528,  1.5631, -0.1673,  ..., -0.2953, -0.8614, -0.6687],
        [ 0.9073,  1.4481, -0.2310,  ..., -0.2633, -0.8705, -0.6375],
        [ 0.3830,  1.0485, -0.0962,  ..., -0.2529, -0.6335, -0.5181],
        ...,
        [ 0.4280,  1.1498,  0.0184,  ..., -0.2712, -0.5771, -0.4969],
        [-0.6271,  0.1175,  0.2611,  ..., -0.0875, -0.1058, -0.2973],
        [ 0.1701,  0.6615,  0.0155,  ..., -0.2045, -0.3645, -0.2889]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 6, 0, 1, 6, 5, 4, 8, 6, 1, 2, 2, 2, 4, 2, 1, 6, 3, 0, 0, 4, 7, 0, 7,
        7, 4, 8, 2, 3, 1, 6, 8, 6, 7, 5, 4, 3, 3, 2, 5, 2, 6, 2, 8, 7, 0, 6, 0,
        6, 5, 5, 6, 5, 1, 3, 2, 2, 4, 5, 4, 6, 1, 7, 2, 5, 3, 2, 8, 0, 6, 6, 0,
        0, 1, 5, 2, 1, 3, 5, 5, 8, 4, 0, 5, 3, 8, 3, 3, 5, 8, 7, 1, 4, 0, 0, 2,
        0, 3, 5, 1, 4, 2, 8, 8, 6, 0, 4, 5, 0, 6, 3, 7, 6, 7, 8, 6, 7, 8, 0, 7,
        2, 0, 5, 3, 6, 2, 7, 7]) 
pred: tensor([[-1.9380e+00, -3.9789e+00, -1.9512e-01,  ...,  8.4294e-01,
          1.6297e+00,  1.7366e+00],
        [-5.9568e-01, -2.6465e-01,  1.5670e-01,  ...,  1.7392e-02,
          1.7285e-01,  5.9788e-03],
        [ 1.3038e+00,  2.0117e+00, -1.1130e-03,  ..., -4.2574e-01,
         -1.1068e+00, -7.4566e-01],
        ...,
        [-7.2026e-01, -3.9839e-01,  3.3081e-01,  ..., -2.5136e-03,
          3.0941e-01,  2.8316e-02],
        [-2.3043e+00, -3.7082e+00,  1.1471e-01,  ...,  6.9463e-01,
          1.5937e+00,  1.4825e+00],
        [-2.3084e+00, -4.2828e+00, -2.3456e-01,  ...,  9.7919e-01,
          1.8697e+00,  1.6373e+00]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 8, 2, 0, 3, 8, 1, 8, 7, 2, 4, 8, 5, 0, 3, 0, 1, 5, 6, 4, 4, 8, 0, 8,
        3, 4, 8, 8, 2, 7, 4, 8, 7, 3, 6, 8, 0, 2, 0, 8, 8, 6, 6, 0, 7, 2, 1, 4,
        8, 4, 3, 8, 1, 6, 6, 1, 2, 0, 3, 8, 1, 4, 0, 6, 4, 3, 7, 2, 6, 6, 3, 6,
        0, 3, 3, 5, 7, 2, 7, 1, 8, 7, 5, 1, 2, 1, 3, 3, 2, 7, 6, 0, 5, 8, 1, 3,
        3, 8, 1, 6, 7, 4, 0, 5, 4, 4, 4, 2, 3, 3, 4, 5, 7, 3, 2, 2, 8, 0, 2, 3,
        6, 7, 4, 3, 1, 6, 7, 5]) 
pred: tensor([[ 1.2149,  1.9777, -0.0255,  ..., -0.3656, -1.0255, -0.9008],
        [-2.0657, -4.1734, -0.2964,  ...,  0.9284,  1.6593,  1.8322],
        [-0.4783,  0.0779,  0.3354,  ..., -0.0776, -0.2355, -0.2239],
        ...,
        [-2.0015, -3.7708, -0.5321,  ...,  0.9587,  1.4170,  1.3752],
        [-1.9663, -3.4313, -0.0954,  ...,  0.7200,  1.3998,  1.4403],
        [-1.5599, -1.7197,  0.0400,  ...,  0.4547,  0.9249,  0.3506]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 0, 3, 4, 5, 5, 0, 3, 1, 2, 7, 1, 5, 7, 3, 5, 0, 6, 3, 7, 7, 1, 1, 3,
        4, 4, 3, 8, 5, 0, 3, 5, 0, 3, 6, 6, 2, 6, 0, 7, 7, 0, 6, 4, 3, 5, 4, 5,
        6, 1, 0, 0, 2, 1, 6, 2, 4, 1, 5, 3, 4, 4, 2, 8, 8, 8, 0, 2, 2, 7, 6, 3,
        7, 1, 6, 5, 7, 0, 1, 0, 4, 2, 7, 1, 5, 4, 1, 8, 1, 5, 2, 5, 2, 1, 4, 4,
        7, 1, 6, 1, 1, 3, 6, 5, 6, 5, 2, 1, 4, 5, 0, 0, 6, 3, 2, 4, 5, 5, 0, 5,
        8, 5, 3, 8, 1, 5, 7, 1]) 
pred: tensor([[-1.3866, -1.4851,  0.2193,  ...,  0.3394,  0.5846,  0.4068],
        [ 1.6948,  2.0087,  0.0119,  ..., -0.3347, -1.0258, -0.7124],
        [ 0.0536, -0.0956, -0.2750,  ...,  0.1478, -0.2924, -0.1653],
        ...,
        [-2.1008, -3.3654, -0.3570,  ...,  0.9031,  1.4125,  1.1228],
        [-1.1956, -1.4457, -0.0366,  ...,  0.3936,  0.5166,  0.4085],
        [ 0.2528,  1.0683,  0.2826,  ..., -0.2753, -0.5887, -0.5538]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 7, 5, 1, 8, 3, 8, 6, 3, 2, 8, 8, 6, 3, 1, 0, 5, 8, 2, 1, 7, 1, 3, 3,
        0, 0, 1, 5, 6, 5, 5, 6, 4, 5, 2, 6, 7, 3, 2, 3, 6, 5, 6, 1, 6, 8, 7, 1,
        0, 0, 0, 6, 5, 0, 2, 1, 7, 8, 5, 8, 5, 4, 2, 4, 6, 3, 3, 8, 0, 3, 6, 3,
        3, 3, 3, 3, 1, 7, 5, 8, 6, 2, 0, 8, 0, 5, 2, 0, 5, 2, 8, 2, 8, 3, 2, 1,
        1, 2, 6, 7, 2, 3, 0, 3, 1, 5, 3, 6, 1, 7, 7, 6, 0, 8, 4, 1, 6, 2, 0, 8,
        3, 0, 1, 8, 5, 2, 6, 3]) 
pred: tensor([[-3.1374e+00, -5.4422e+00, -7.8261e-01,  ...,  1.6978e+00,
          2.0549e+00,  1.8036e+00],
        [-3.0215e+00, -5.6183e+00, -8.9286e-01,  ...,  1.6093e+00,
          1.8942e+00,  2.0297e+00],
        [-2.2963e+00, -2.0198e+00, -1.0853e-01,  ...,  7.4648e-01,
          8.7739e-01,  4.2702e-03],
        ...,
        [-1.9684e-01,  4.4838e-01,  1.2595e-01,  ...,  6.5440e-02,
         -3.6610e-01, -5.8258e-01],
        [-8.8278e-01, -3.5776e-01, -5.7724e-02,  ...,  1.6411e-01,
          6.4942e-02, -2.2806e-01],
        [-1.0109e+00, -1.2957e+00, -1.5039e-01,  ...,  5.3800e-01,
          2.6544e-01,  1.8994e-01]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 0, 7, 8, 7, 1, 7, 7, 3, 7, 0, 5, 8, 0, 0, 7, 3, 4, 4, 5, 7, 3, 6, 5,
        3, 8, 5, 0, 6, 6, 8, 1, 4, 4, 5, 5, 4, 0, 8, 7, 0, 1, 3, 5, 5, 6, 7, 1,
        4, 3, 2, 8, 7, 4, 0, 4, 3, 6, 1, 2, 4, 6, 8, 3, 3, 1, 2, 2, 5, 1, 7, 5,
        7, 3, 1, 1, 4, 1, 2, 7, 1, 5, 8, 8, 8, 4, 3, 3, 7, 4, 3, 2, 6, 1, 7, 6,
        8, 4, 2, 8, 2, 3, 8, 4, 7, 6, 4, 1, 4, 0, 1, 6, 6, 7, 8, 7, 0, 2, 6, 3,
        8, 1, 7, 3, 6, 6, 6, 6]) 
pred: tensor([[-0.2300, -0.0367, -0.0601,  ...,  0.3165,  0.0594, -0.3791],
        [ 2.1794,  2.7639,  0.4684,  ..., -0.6363, -1.2058, -0.9600],
        [-4.6250, -7.0143, -1.4426,  ...,  2.5964,  2.5921,  1.5931],
        ...,
        [-1.3756, -1.1160, -0.2398,  ...,  0.5444,  0.2856, -0.1554],
        [-4.2313, -6.5109, -1.4379,  ...,  2.2804,  1.7293,  1.4963],
        [-2.2124, -3.0869, -0.6065,  ...,  1.0935,  0.8887,  0.7157]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 4, 4, 1, 8, 3, 5, 0, 6, 8, 0, 8, 8, 8, 7, 0, 1, 4, 6, 1, 5, 6, 6, 2,
        1, 6, 2, 4, 2, 8, 2, 7, 2, 1, 7, 2, 8, 5, 2, 0, 4, 4, 6, 7, 3, 3, 3, 8,
        7, 0, 1, 5, 7, 1, 6, 6, 3, 8, 7, 3, 8, 3, 2, 8, 1, 0, 1, 6, 8, 5, 3, 7,
        7, 2, 2, 2, 8, 0, 3, 6, 6, 4, 7, 8, 7, 8, 1, 2, 3, 1, 2, 1, 7, 7, 5, 6,
        3, 8, 3, 8, 1, 1, 5, 2, 4, 6, 3, 3, 7, 5, 3, 0, 4, 8, 3, 0, 0, 6, 2, 5,
        2, 6, 0, 7, 7, 0, 5, 8]) 
pred: tensor([[-1.4513e+00, -1.2176e+00, -2.2652e-03,  ...,  4.4470e-01,
          3.7832e-01,  5.3597e-02],
        [-1.2940e+00, -1.6518e+00, -2.0813e-02,  ...,  5.8799e-01,
          6.6155e-01,  4.5220e-01],
        [-2.0408e+00, -1.2245e+00,  3.5074e-02,  ...,  5.8617e-01,
          3.3620e-01, -4.7566e-01],
        ...,
        [ 2.0181e+00,  2.6228e+00,  7.0278e-01,  ..., -6.0208e-01,
         -9.3502e-01, -9.2627e-01],
        [-2.7708e+00, -3.3075e+00, -6.1980e-01,  ...,  1.1588e+00,
          9.9201e-01,  5.3910e-01],
        [-4.3376e+00, -7.6316e+00, -1.8512e+00,  ...,  2.6614e+00,
          2.3885e+00,  2.3775e+00]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 8, 1, 8, 0, 4, 1, 2, 2, 4, 5, 5, 0, 8, 4, 6, 8, 0, 7, 3, 1, 8, 0, 6,
        2, 8, 6, 7, 8, 3, 3, 0, 1, 1, 0, 8, 3, 2, 7, 2, 5, 8, 5, 3, 2, 6, 4, 5,
        5, 7, 7, 3, 0, 6, 4, 5, 7, 3, 1, 6, 6, 1, 3, 0, 7, 8, 1, 7, 5, 2, 6, 8,
        5, 2, 4, 0, 2, 0, 5, 1, 5, 6, 8, 3, 4, 8, 2, 8, 7, 8, 5, 1, 1, 8, 8, 6,
        1, 0, 4, 3, 7, 5, 4, 3, 1, 3, 7, 6, 1, 4, 5, 2, 5, 5, 8, 2, 1, 3, 7, 7,
        0, 3, 1, 3, 0, 6, 2, 4]) 
pred: tensor([[-4.7820, -9.1764, -2.3476,  ...,  3.0639,  2.5250,  3.3708],
        [-4.1558, -8.2187, -2.1509,  ...,  2.7378,  2.4006,  3.1109],
        [ 1.4648,  2.5918,  0.6658,  ..., -0.6292, -0.9713, -1.2321],
        ...,
        [-1.7968, -2.1849, -0.3881,  ...,  0.8664,  0.8391,  0.5065],
        [ 1.1683,  1.8124,  0.8876,  ..., -0.4512, -0.3323, -0.5651],
        [-1.8997, -2.3399,  0.1990,  ...,  0.7591,  0.6700,  0.6908]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 5, 2, 0, 1, 1, 0, 1, 6, 4, 0, 7, 8, 1, 3, 1, 5, 0, 6, 5, 2, 5, 3, 8,
        2, 6, 0, 3, 1, 8, 4, 2, 3, 2, 1, 8, 4, 1, 0, 1, 1, 8, 3, 4, 1, 5, 8, 0,
        7, 6, 5, 3, 3, 7, 7, 3, 2, 5, 4, 6, 6, 5, 1, 8, 2, 4, 4, 2, 3, 0, 2, 3,
        1, 2, 1, 5, 2, 1, 8, 2, 6, 2, 7, 2, 0, 8, 1, 0, 7, 5, 7, 6, 6, 5, 6, 7,
        7, 6, 2, 2, 1, 1, 0, 5, 0, 3, 2, 5, 6, 8, 2, 4, 8, 7, 1, 8, 4, 3, 4, 2,
        1, 1, 0, 0, 5, 5, 0, 0]) 
pred: tensor([[-0.9936, -1.3942, -0.0360,  ...,  0.1948, -0.1487,  0.4590],
        [-3.5159, -5.1229, -0.6559,  ...,  1.3386,  1.3086,  1.8983],
        [-0.3181,  1.1324,  0.8707,  ..., -0.3817, -0.4562, -0.7840],
        ...,
        [-2.5360, -2.9697, -0.1273,  ...,  0.7266,  0.9647,  1.0788],
        [ 2.7733,  2.9391,  1.5177,  ..., -0.8939, -0.7166, -0.5365],
        [ 1.8851,  3.0728,  1.4987,  ..., -0.8867, -0.9572, -1.1269]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 2, 1, 0, 5, 4, 5, 8, 1, 3, 2, 7, 8, 3, 6, 8, 0, 0, 2, 2, 4, 6, 5, 8,
        1, 0, 5, 6, 7, 1, 3, 3, 7, 3, 0, 5, 7, 3, 7, 0, 0, 7, 7, 6, 6, 5, 3, 4,
        8, 8, 0, 4, 5, 3, 1, 7, 7, 1, 4, 0, 3, 7, 5, 4, 0, 2, 5, 2, 8, 4, 0, 2,
        7, 1, 5, 4, 5, 4, 1, 2, 2, 2, 7, 6, 1, 1, 1, 1, 0, 0, 6, 6, 7, 0, 0, 6,
        7, 1, 2, 8, 2, 8, 7, 4, 2, 5, 3, 1, 8, 5, 7, 2, 6, 0, 8, 8, 7, 1, 0, 0,
        4, 8, 6, 4, 7, 7, 2, 1]) 
pred: tensor([[-2.5290, -2.5627, -0.1028,  ...,  0.5144,  0.6630,  0.8141],
        [-0.8516,  1.1961,  0.9396,  ..., -0.3418, -0.4330, -1.2468],
        [ 1.4999,  2.5600,  1.3417,  ..., -0.7500, -0.7604, -1.0276],
        ...,
        [-4.0862, -6.1583, -1.0133,  ...,  1.3674,  1.7721,  2.6480],
        [-0.7938,  0.8283,  1.3527,  ..., -0.4252, -0.3498, -0.6968],
        [ 0.8945,  2.4277,  1.5258,  ..., -0.8429, -0.7948, -1.0445]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 8, 8, 0, 6, 7, 2, 3, 4, 5, 8, 7, 6, 8, 2, 8, 1, 2, 6, 8, 3, 3, 4, 5,
        8, 8, 8, 0, 2, 4, 0, 6, 2, 6, 6, 0, 0, 2, 4, 3, 0, 8, 8, 1, 8, 5, 8, 3,
        3, 7, 0, 0, 1, 4, 4, 5, 7, 6, 0, 0, 4, 0, 4, 7, 5, 1, 1, 0, 8, 1, 6, 6,
        2, 4, 4, 1, 4, 1, 1, 5, 8, 3, 6, 0, 6, 3, 0, 8, 7, 5, 2, 2, 2, 4, 8, 3,
        4, 0, 0, 3, 7, 6, 0, 8, 8, 6, 3, 3, 8, 1, 4, 3, 7, 6, 8, 4, 8, 1, 7, 2,
        4, 2, 3, 0, 6, 5, 2, 3]) 
pred: tensor([[ 2.5323,  3.0112,  1.7924,  ..., -1.0358, -0.5043, -0.6890],
        [-5.9153, -8.4277, -1.3573,  ...,  2.0401,  2.5691,  3.4514],
        [-6.5685, -8.4871, -0.9595,  ...,  1.9544,  2.8124,  3.3242],
        ...,
        [-1.2255, -0.2461,  1.1270,  ..., -0.1374,  0.3419,  0.0573],
        [ 2.5214,  3.2669,  1.5082,  ..., -1.0468, -0.8280, -1.0582],
        [ 0.8471,  2.3462,  1.6537,  ..., -0.8501, -0.6476, -1.0495]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 8, 0, 4, 3, 0, 3, 8, 1, 6, 5, 1, 4, 0, 5, 8, 7, 8, 2, 0, 2, 1, 7, 7,
        5, 3, 0, 8, 3, 7, 3, 5, 6, 4, 2, 2, 4, 8, 8, 0, 1, 1, 8, 1, 8, 8, 6, 6,
        5, 5, 5, 6, 2, 3, 8, 0, 2, 6, 2, 0, 6, 5, 1, 2, 0, 2, 4, 4, 0, 2, 6, 5,
        0, 8, 2, 7, 3, 5, 8, 1, 8, 1, 1, 2, 5, 2, 1, 6, 3, 3, 8, 3, 6, 8, 5, 8,
        8, 5, 3, 6, 2, 6, 3, 2, 7, 5, 2, 3, 2, 1, 6, 1, 4, 7, 7, 4, 4, 4, 2, 0,
        5, 5, 0, 7, 3, 6, 6, 0]) 
pred: tensor([[-0.3564,  1.1468,  1.9194,  ..., -0.6396, -0.2728, -0.5720],
        [-6.5369, -9.5874, -1.7194,  ...,  2.2379,  3.0084,  4.2093],
        [ 5.6379,  4.4446,  2.1870,  ..., -1.5250, -1.1612, -0.4600],
        ...,
        [-2.5281, -1.8263,  0.2764,  ...,  0.3634,  0.6625,  0.4584],
        [-5.0168, -6.1384, -0.5001,  ...,  1.3015,  2.0757,  2.6082],
        [ 4.6579,  4.0970,  2.0224,  ..., -1.4742, -1.0859, -0.6803]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 0, 0, 2, 8, 0, 6, 8, 7, 3, 4, 5, 1, 0, 0, 4, 2, 0, 6, 1, 7, 3, 4, 1,
        5, 2, 7, 6, 6, 5, 8, 1, 5, 6, 1, 3, 8, 5, 1, 0, 3, 8, 7, 4, 8, 5, 1, 2,
        3, 3, 6, 5, 4, 7, 2, 2, 5, 1, 8, 2, 1, 5, 5, 6, 5, 8, 4, 1, 1, 0, 3, 2,
        1, 5, 4, 8, 1, 3, 7, 8, 0, 2, 1, 6, 3, 7, 7, 1, 0, 7, 8, 0, 0, 6, 7, 7,
        2, 4, 1, 1, 7, 6, 4, 7, 8, 6, 1, 2, 5, 4, 8, 8, 7, 4, 2, 4, 3, 3, 5, 2,
        4, 0, 8, 5, 0, 3, 1, 5]) 
pred: tensor([[-6.5149e+00, -1.0211e+01, -2.3775e+00,  ...,  2.5759e+00,
          3.0317e+00,  4.6453e+00],
        [ 4.4765e+00,  3.4070e+00,  2.4504e+00,  ..., -1.3912e+00,
         -5.2153e-01, -1.3582e-03],
        [ 3.9866e+00,  3.7594e+00,  2.3822e+00,  ..., -1.3594e+00,
         -8.7210e-01, -6.4997e-01],
        ...,
        [ 1.0928e-02,  9.4581e-01,  1.2016e+00,  ..., -5.0813e-01,
         -3.5178e-01, -4.5444e-01],
        [-1.2115e-01,  2.2111e+00,  1.5138e+00,  ..., -8.6283e-01,
         -7.2744e-01, -1.5069e+00],
        [-2.3620e+00, -1.5715e+00,  4.9233e-01,  ...,  1.5223e-01,
          6.8487e-01,  4.9055e-01]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 3, 8, 1, 2, 8, 5, 8, 4, 5, 2, 5, 2, 5, 6, 3, 2, 5, 3, 0, 0, 0, 2, 2,
        1, 1, 3, 5, 1, 1, 6, 8, 5, 5, 8, 6, 5, 3, 3, 3, 1, 4, 5, 3, 4, 1, 3, 4,
        3, 2, 0, 6, 1, 8, 3, 1, 7, 5, 2, 8, 4, 1, 5, 1, 0, 2, 6, 1, 6, 3, 8, 7,
        5, 6, 5, 1, 4, 7, 8, 0, 6, 5, 8, 5, 5, 6, 7, 1, 7, 6, 2, 6, 1, 7, 3, 0,
        4, 7, 4, 8, 6, 0, 3, 2, 6, 8, 2, 6, 7, 2, 3, 1, 4, 5, 6, 6, 0, 1, 0, 0,
        6, 7, 4, 0, 7, 7, 4, 4]) 
pred: tensor([[ 2.3286e+00,  2.8854e+00,  2.0139e+00,  ..., -1.2656e+00,
         -8.0466e-01, -7.7365e-01],
        [-4.5196e-01,  3.6953e-01,  1.2297e+00,  ..., -3.4931e-01,
          2.8854e-01, -1.0039e-01],
        [-7.5279e+00, -1.1175e+01, -3.0773e+00,  ...,  3.1337e+00,
          3.2788e+00,  4.7005e+00],
        ...,
        [-5.7287e+00, -7.6281e+00, -1.8657e+00,  ...,  1.8382e+00,
          1.9953e+00,  3.1272e+00],
        [-3.4977e+00, -2.6633e+00,  3.9896e-01,  ...,  3.7350e-01,
          7.6252e-01,  7.7644e-01],
        [-2.2733e+00, -1.0705e+00,  4.8188e-01,  ...,  1.8505e-01,
          2.6104e-01,  9.6526e-03]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 1, 3, 2, 3, 7, 4, 5, 7, 0, 5, 3, 5, 0, 2, 6, 6, 3, 0, 6, 1, 0, 6, 2,
        8, 6, 5, 6, 0, 7, 2, 7, 6, 8, 1, 3, 0, 0, 4, 1, 0, 0, 6, 2, 6, 6, 5, 7,
        5, 2, 1, 7, 8, 6, 8, 1, 6, 8, 2, 0, 0, 7, 1, 5, 3, 4, 6, 5, 2, 3, 1, 5,
        6, 1, 4, 7, 4, 8, 6, 1, 2, 4, 5, 2, 0, 0, 0, 2, 7, 2, 7, 8, 4, 4, 8, 5,
        1, 8, 5, 8, 7, 3, 8, 0, 7, 6, 8, 0, 0, 3, 0, 8, 4, 3, 5, 2, 0, 4, 4, 0,
        6, 7, 1, 4, 4, 2, 4, 0]) 
pred: tensor([[-2.2326, -0.3930,  1.1389,  ..., -0.0259,  0.0761, -0.4256],
        [ 1.0887,  1.3852,  1.4192,  ..., -0.5810, -0.1710, -0.3914],
        [-2.3314, -2.6454, -0.3178,  ...,  0.9594,  0.9185,  0.7744],
        ...,
        [-1.7693, -0.5042,  0.6596,  ...,  0.0505,  0.0265, -0.4289],
        [-2.2006, -1.2304,  0.1741,  ...,  0.5100,  0.4389, -0.1139],
        [ 3.3866,  3.4442,  1.9612,  ..., -1.4125, -1.0787, -0.9288]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 8, 5, 7, 3, 1, 2, 6, 5, 0, 5, 4, 5, 1, 6, 5, 4, 8, 5, 2, 5, 0, 5, 6,
        6, 3, 2, 7, 4, 7, 6, 5, 4, 2, 6, 8, 0, 1, 6, 8, 2, 0, 3, 3, 0, 6, 1, 4,
        1, 8, 4, 7, 1, 8, 2, 8, 7, 0, 8, 6, 4, 5, 7, 2, 4, 2, 5, 1, 5, 0, 4, 5,
        8, 0, 4, 1, 0, 0, 3, 2, 4, 0, 4, 4, 7, 4, 3, 3, 2, 0, 0, 7, 3, 7, 3, 6,
        1, 0, 0, 1, 6, 2, 5, 4, 5, 6, 2, 5, 2, 7, 6, 0, 0, 0, 0, 6, 6, 4, 1, 3,
        2, 6, 6, 5, 5, 6, 7, 2]) 
pred: tensor([[ -2.4031,  -0.0283,   0.7713,  ...,  -0.1668,  -0.2959,  -0.9108],
        [ -6.9894,  -9.7882,  -3.5695,  ...,   3.4831,   2.7926,   3.6027],
        [ -6.3447,  -5.7419,  -1.8269,  ...,   2.1349,   1.3336,   0.9472],
        ...,
        [ -5.0877,  -4.4008,  -1.2621,  ...,   1.6524,   1.3250,   0.7553],
        [ -8.9134, -11.3283,  -4.0491,  ...,   4.2701,   3.1493,   3.5688],
        [  1.1869,   1.6417,   1.4556,  ...,  -0.6765,  -0.1006,  -0.4658]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 1, 2, 7, 1, 1, 4, 1, 5, 0, 7, 5, 2, 7, 5, 4, 7, 0, 1, 1, 0, 4, 8, 5,
        4, 5, 0, 5, 8, 7, 8, 5, 7, 8, 8, 0, 1, 1, 5, 6, 5, 2, 3, 0, 7, 8, 8, 1,
        8, 6, 1, 7, 5, 4, 5, 2, 6, 4, 5, 5, 3, 8, 1, 7, 4, 6, 3, 4, 2, 6, 5, 3,
        6, 0, 6, 5, 1, 4, 3, 6, 0, 4, 8, 1, 8, 1, 0, 6, 2, 6, 4, 7, 8, 0, 1, 3,
        8, 8, 0, 5, 5, 5, 8, 0, 4, 6, 1, 8, 4, 2, 7, 3, 3, 2, 8, 4, 7, 3, 8, 5,
        7, 8, 1, 0, 2, 1, 4, 3]) 
pred: tensor([[-7.0123, -9.6682, -3.6080,  ...,  3.6074,  2.6919,  3.5691],
        [ 3.8387,  2.6303,  1.4891,  ..., -0.9683, -0.7801, -0.3380],
        [-0.4279,  0.8112,  0.9562,  ..., -0.3794, -0.4910, -0.8498],
        ...,
        [ 4.6847,  2.7676,  1.7599,  ..., -1.1378, -0.6914, -0.0136],
        [-4.2665, -2.9146, -0.6059,  ...,  1.1095,  0.6620,  0.1732],
        [ 0.1078,  1.4514,  1.3760,  ..., -0.5609, -0.3113, -0.7909]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 3, 3, 1, 2, 1, 7, 5, 0, 1, 2, 1, 1, 3, 5, 2, 8, 0, 8, 3, 6, 5, 1, 2,
        7, 8, 1, 4, 1, 8, 0, 3, 3, 7, 3, 4, 1, 0, 7, 3, 6, 5, 4, 7, 8, 6, 3, 1,
        6, 2, 5, 4, 8, 5, 7, 1, 5, 5, 6, 7, 7, 7, 3, 0, 1, 4, 6, 6, 0, 5, 2, 0,
        8, 2, 8, 7, 3, 7, 2, 6, 1, 0, 2, 5, 0, 6, 3, 1, 0, 2, 4, 0, 0, 8, 4, 7,
        8, 5, 0, 7, 7, 7, 6, 2, 7, 3, 2, 2, 4, 5, 0, 6, 1, 4, 6, 0, 0, 3, 3, 6,
        2, 4, 0, 7, 3, 1, 4, 1]) 
pred: tensor([[-1.8944, -0.2587,  0.4974,  ...,  0.0536, -0.1638, -0.6789],
        [-0.8109,  1.0819,  1.6902,  ..., -0.6524, -0.7313, -0.9098],
        [ 2.1860,  1.3077,  0.9522,  ..., -0.6794, -0.4727, -0.0328],
        ...,
        [ 4.2513,  3.5867,  2.0601,  ..., -1.5788, -1.2977, -0.7492],
        [-4.6455, -2.8330,  0.1225,  ...,  0.9670,  0.7435,  0.2438],
        [ 5.0876,  3.0658,  2.0371,  ..., -1.4953, -0.7887,  0.0829]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 3, 8, 7, 0, 3, 8, 5, 2, 4, 4, 1, 8, 2, 3, 3, 0, 7, 7, 0, 8, 7, 6, 1,
        6, 4, 7, 2, 4, 5, 8, 7, 6, 8, 6, 7, 6, 5, 6, 8, 8, 6, 1, 1, 5, 2, 4, 0,
        3, 2, 6, 4, 5, 1, 5, 4, 1, 6, 7, 1, 1, 8, 2, 4, 8, 5, 1, 2, 6, 2, 7, 1,
        2, 2, 5, 3, 3, 4, 7, 8, 2, 0, 2, 2, 8, 3, 8, 2, 4, 6, 0, 6, 2, 8, 4, 0,
        8, 2, 5, 6, 2, 8, 5, 2, 1, 5, 8, 7, 8, 3, 0, 4, 3, 1, 5, 8, 2, 5, 0, 1,
        3, 4, 6, 5, 8, 8, 1, 7]) 
pred: tensor([[ -6.2838,  -6.9220,  -1.3207,  ...,   2.0159,   2.4521,   2.9628],
        [  0.1409,   1.0219,   2.0993,  ...,  -0.7842,  -0.2691,  -0.1688],
        [ -4.7255,  -5.5567,  -1.5112,  ...,   1.7894,   1.9770,   2.3926],
        ...,
        [-10.0609, -13.4835,  -3.7651,  ...,   4.3782,   4.7262,   6.0528],
        [  4.9198,   3.7862,   2.9030,  ...,  -1.9793,  -1.4507,  -0.3384],
        [ -8.7077, -10.3755,  -2.2800,  ...,   3.2334,   3.6922,   4.5217]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 0, 1, 4, 6, 8, 3, 5, 2, 0, 1, 3, 0, 8, 4, 4, 5, 8, 4, 2, 2, 1, 1, 6,
        7, 4, 2, 2, 0, 5, 0, 5, 4, 1, 7, 8, 5, 2, 5, 4, 2, 8, 7, 8, 4, 3, 0, 6,
        7, 8, 8, 8, 2, 5, 8, 2, 6, 2, 0, 3, 1, 7, 3, 6, 0, 1, 7, 6, 5, 1, 4, 0,
        5, 3, 5, 8, 1, 7, 4, 3, 4, 4, 5, 3, 4, 0, 1, 2, 5, 0, 0, 5, 3, 5, 7, 6,
        8, 0, 6, 8, 2, 4, 0, 6, 6, 2, 6, 7, 4, 3, 0, 6, 7, 2, 3, 3, 8, 8, 8, 8,
        5, 8, 4, 1, 7, 6, 5, 3]) 
pred: tensor([[-10.0413, -12.5453,  -2.8586,  ...,   3.8618,   4.8985,   5.8867],
        [  6.9398,   4.6546,   3.3476,  ...,  -2.3214,  -1.4605,  -0.1178],
        [  1.7603,   3.3590,   2.7841,  ...,  -1.5399,  -1.2257,  -1.4077],
        ...,
        [ -8.1628,  -7.4297,  -0.5813,  ...,   2.2684,   3.1339,   2.9352],
        [ -4.5219,  -3.1276,   0.7260,  ...,   0.4851,   1.2243,   1.3026],
        [ -0.7718,  -0.7409,   1.0632,  ...,  -0.1859,   0.4022,   0.5521]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 5, 8, 3, 4, 4, 7, 2, 1, 0, 7, 2, 3, 0, 2, 5, 6, 2, 2, 8, 5, 0, 3, 5,
        8, 7, 5, 4, 7, 7, 7, 0, 0, 7, 6, 3, 0, 6, 4, 8, 6, 0, 0, 5, 3, 4, 3, 1,
        2, 2, 3, 4, 8, 3, 2, 7, 7, 7, 2, 1, 0, 5, 5, 6, 5, 2, 2, 4, 6, 8, 7, 2,
        1, 7, 5, 4, 7, 3, 0, 1, 6, 5, 2, 3, 0, 7, 5, 7, 0, 5, 2, 2, 2, 3, 1, 6,
        1, 6, 1, 3, 7, 0, 3, 2, 2, 1, 5, 1, 0, 0, 7, 5, 4, 6, 4, 8, 5, 7, 6, 1,
        7, 8, 1, 5, 6, 7, 6, 4]) 
pred: tensor([[  0.2249,   2.5407,   3.3424,  ...,  -1.6927,  -0.6726,  -0.8537],
        [ -5.9376,  -3.6474,   0.5729,  ...,   0.9342,   1.6192,   0.9916],
        [ -8.8649, -11.5630,  -2.5057,  ...,   3.2473,   4.6415,   6.0711],
        ...,
        [ -8.3021,  -9.4068,  -1.5635,  ...,   2.6590,   4.0198,   4.6382],
        [ -7.0455,  -6.7427,  -1.1973,  ...,   2.0226,   2.9387,   2.7560],
        [ -6.2816,  -3.7697,   0.3658,  ...,   0.8626,   1.1933,   0.8079]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 0, 6, 7, 3, 0, 5, 4, 1, 0, 1, 1, 7, 2, 4, 0, 1, 2, 2, 0, 1, 7, 2, 6,
        5, 7, 8, 6, 2, 5, 1, 5, 3, 3, 2, 6, 8, 8, 4, 4, 3, 6, 1, 1, 0, 8, 2, 4,
        2, 7, 3, 3, 5, 6, 7, 4, 2, 2, 7, 5, 8, 5, 3, 2, 3, 8, 0, 4, 8, 7, 7, 6,
        3, 2, 0, 6, 7, 4, 6, 4, 6, 1, 5, 8, 1, 2, 0, 3, 4, 6, 2, 2, 3, 6, 6, 5,
        6, 2, 0, 7, 0, 3, 5, 3, 5, 6, 3, 4, 0, 1, 0, 1, 2, 8, 0, 4, 5, 5, 6, 0,
        0, 8, 5, 2, 8, 8, 1, 7]) 
pred: tensor([[ -1.7665,   0.7393,   2.3313,  ...,  -0.8327,  -0.2404,  -0.6268],
        [  5.3273,   5.0148,   4.0719,  ...,  -2.5231,  -1.6561,  -0.8903],
        [ -8.0307,  -6.9090,  -1.0341,  ...,   2.2404,   3.0743,   2.5328],
        ...,
        [-11.1249, -13.6421,  -3.1704,  ...,   4.3375,   5.9159,   6.6618],
        [  4.0739,   4.2318,   3.7237,  ...,  -2.2017,  -1.2584,  -0.7590],
        [ -6.9195,  -6.1481,  -0.6705,  ...,   1.8688,   2.7371,   2.5451]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 2, 4, 4, 0, 8, 0, 8, 7, 2, 7, 2, 5, 7, 3, 3, 1, 3, 6, 2, 1, 1, 8, 1,
        8, 2, 2, 6, 8, 4, 4, 2, 6, 3, 7, 4, 5, 3, 6, 2, 4, 3, 7, 3, 8, 3, 5, 6,
        3, 4, 5, 0, 5, 8, 3, 3, 2, 8, 6, 0, 7, 3, 0, 0, 3, 1, 1, 4, 5, 5, 2, 4,
        0, 2, 8, 4, 2, 8, 5, 1, 0, 8, 7, 8, 5, 2, 5, 0, 5, 5, 0, 8, 1, 8, 0, 7,
        0, 7, 6, 0, 6, 3, 3, 7, 8, 4, 0, 6, 8, 1, 6, 0, 2, 5, 6, 2, 2, 1, 5, 2,
        1, 1, 8, 8, 0, 2, 6, 4]) 
pred: tensor([[ 2.4199,  3.2050,  2.7928,  ..., -1.6608, -1.2608, -1.0043],
        [-4.2497,  2.2792,  3.7079,  ..., -0.8494, -0.8123, -2.7508],
        [-6.9181, -3.0431,  0.6109,  ...,  0.9271,  1.4929,  0.1121],
        ...,
        [-2.3628,  2.0325,  3.3312,  ..., -1.0982, -1.0433, -1.8598],
        [-8.2386, -7.2605, -1.3272,  ...,  2.6377,  3.2469,  2.6031],
        [-6.7018, -2.3615,  1.4075,  ...,  0.3532,  0.7818, -0.1896]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 4, 1, 4, 5, 7, 4, 1, 5, 6, 1, 6, 2, 7, 0, 5, 2, 6, 8, 5, 8, 3, 0, 5,
        7, 6, 8, 5, 6, 3, 0, 1, 8, 0, 3, 8, 8, 2, 7, 5, 8, 8, 4, 2, 2, 0, 5, 4,
        3, 0, 0, 1, 1, 6, 8, 3, 6, 8, 1, 4, 6, 6, 2, 7, 5, 0, 0, 8, 8, 6, 8, 2,
        6, 4, 3, 4, 0, 2, 4, 6, 1, 0, 2, 1, 6, 4, 3, 4, 4, 4, 5, 8, 0, 2, 4, 6,
        4, 3, 2, 2, 5, 2, 5, 2, 7, 3, 8, 4, 0, 6, 8, 7, 5, 4, 6, 7, 7, 6, 4, 0,
        5, 5, 7, 1, 6, 6, 1, 1]) 
pred: tensor([[ -9.6224, -11.8582,  -3.5477,  ...,   4.3551,   4.7195,   5.5838],
        [ -6.3182,  -3.6778,   0.4311,  ...,   1.4341,   1.3203,   0.6881],
        [  3.1802,   4.7971,   3.3123,  ...,  -2.2381,  -1.9971,  -2.0183],
        ...,
        [ -9.1418,  -8.5757,  -1.2745,  ...,   3.1720,   3.2180,   3.4662],
        [ -0.2023,   3.9741,   3.4134,  ...,  -1.6582,  -1.9300,  -2.7417],
        [  2.6356,   2.9307,   2.2260,  ...,  -1.2943,  -1.1312,  -1.0117]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 4, 0, 1, 3, 4, 3, 4, 0, 5, 5, 0, 5, 1, 6, 5, 4, 1, 7, 1, 4, 0, 7, 1,
        1, 7, 5, 5, 5, 3, 0, 5, 2, 7, 8, 4, 2, 0, 2, 7, 8, 0, 8, 2, 5, 2, 1, 0,
        5, 6, 4, 1, 0, 6, 2, 2, 7, 6, 1, 1, 0, 8, 8, 1, 6, 3, 4, 5, 5, 2, 3, 8,
        1, 5, 0, 2, 8, 1, 6, 2, 3, 5, 3, 1, 1, 0, 5, 8, 7, 7, 2, 8, 5, 5, 8, 6,
        0, 4, 7, 4, 1, 0, 6, 8, 4, 6, 8, 8, 8, 0, 6, 8, 5, 3, 1, 6, 2, 4, 0, 8,
        2, 5, 0, 7, 0, 2, 3, 0]) 
pred: tensor([[-5.6557, -2.0626,  0.3953,  ...,  0.8553, -0.0207, -0.6644],
        [-7.3895, -4.1593, -0.1250,  ...,  1.5611,  0.9150,  0.4571],
        [ 6.9714,  6.0293,  4.4458,  ..., -3.2029, -2.7687, -1.2517],
        ...,
        [-3.3638,  1.0180,  1.8809,  ..., -0.1516, -1.0881, -2.0708],
        [-1.6783,  1.5837,  2.4060,  ..., -0.8117, -1.5388, -1.5699],
        [ 5.7117,  5.3215,  3.6860,  ..., -2.5013, -2.5373, -1.5809]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 6, 8, 0, 5, 1, 6, 5, 0, 3, 4, 7, 5, 4, 5, 4, 7, 3, 5, 5, 4, 6, 6, 1,
        4, 8, 2, 2, 1, 4, 5, 8, 7, 3, 8, 8, 4, 2, 5, 1, 3, 2, 0, 5, 4, 5, 3, 0,
        4, 4, 6, 5, 4, 2, 8, 6, 4, 3, 1, 1, 1, 0, 1, 8, 2, 4, 5, 6, 3, 5, 5, 7,
        8, 7, 4, 6, 0, 1, 2, 3, 2, 4, 2, 0, 3, 4, 1, 6, 6, 1, 7, 0, 5, 7, 3, 7,
        2, 0, 8, 3, 7, 7, 1, 5, 4, 8, 2, 0, 7, 4, 2, 1, 7, 6, 1, 8, 7, 0, 3, 0,
        4, 0, 8, 0, 4, 0, 1, 8]) 
pred: tensor([[  3.2488,   4.4098,   3.0703,  ...,  -1.9568,  -2.2149,  -2.0044],
        [ -6.6417,  -7.1862,  -2.2096,  ...,   2.9727,   1.7794,   2.8509],
        [ -8.9832, -11.7067,  -4.4871,  ...,   4.7001,   3.6388,   5.4060],
        ...,
        [  9.1492,   6.0870,   4.6309,  ...,  -3.4704,  -2.7728,  -0.3626],
        [  3.0389,   5.0102,   4.0141,  ...,  -2.5518,  -2.8905,  -2.1522],
        [ -9.0261, -12.3236,  -4.7743,  ...,   4.9885,   3.9304,   5.8334]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 7, 4, 7, 7, 5, 1, 7, 5, 7, 7, 3, 3, 1, 6, 2, 4, 0, 7, 8, 0, 3, 4, 7,
        2, 8, 2, 6, 4, 5, 2, 2, 0, 0, 5, 8, 0, 3, 1, 2, 4, 1, 3, 8, 0, 0, 4, 8,
        8, 8, 4, 4, 0, 2, 3, 0, 4, 7, 4, 8, 3, 0, 5, 2, 1, 0, 5, 7, 5, 8, 0, 4,
        5, 2, 4, 2, 6, 4, 6, 5, 7, 3, 0, 1, 4, 2, 7, 3, 7, 2, 5, 5, 6, 1, 4, 7,
        1, 3, 5, 2, 6, 4, 2, 4, 8, 3, 0, 1, 5, 6, 5, 3, 7, 7, 7, 0, 8, 2, 0, 2,
        3, 8, 5, 7, 3, 1, 6, 6]) 
pred: tensor([[-10.0523, -12.9427,  -4.9481,  ...,   5.3008,   4.2976,   6.0198],
        [ -6.8327,  -7.4731,  -2.8686,  ...,   3.2857,   2.2046,   2.8788],
        [ -6.2499,  -1.5565,   0.3096,  ...,   0.8174,  -0.2897,  -1.2702],
        ...,
        [  4.7121,   4.8980,   3.0340,  ...,  -2.3474,  -2.4900,  -1.7709],
        [ -7.9122,  -7.1396,  -2.3293,  ...,   3.0493,   1.9970,   2.2964],
        [ -7.0289,  -4.2503,  -0.8413,  ...,   1.8823,   0.5634,   0.5432]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 5, 8, 7, 6, 5, 7, 0, 5, 7, 4, 7, 8, 2, 0, 8, 4, 1, 3, 1, 5, 2, 4, 2,
        3, 0, 7, 0, 3, 8, 3, 3, 1, 7, 4, 8, 5, 4, 2, 4, 4, 7, 7, 5, 3, 0, 4, 8,
        2, 6, 4, 8, 3, 6, 4, 1, 7, 8, 2, 1, 0, 0, 4, 2, 2, 3, 4, 6, 1, 8, 8, 4,
        2, 1, 4, 2, 8, 3, 0, 5, 4, 4, 2, 8, 8, 0, 1, 2, 8, 3, 0, 4, 3, 8, 5, 4,
        7, 3, 4, 4, 2, 8, 7, 6, 5, 0, 7, 5, 6, 1, 3, 6, 5, 1, 3, 5, 3, 1, 0, 5,
        4, 3, 5, 6, 2, 7, 2, 5]) 
pred: tensor([[-12.2316, -14.8158,  -5.1414,  ...,   6.0902,   6.0366,   6.9928],
        [ -8.5707,  -5.1938,  -0.8924,  ...,   2.6865,   1.5476,   0.5227],
        [-11.9333, -14.2563,  -5.0473,  ...,   5.9189,   5.7457,   6.5865],
        ...,
        [-11.4914, -10.8514,  -3.0327,  ...,   4.4883,   4.3853,   4.3527],
        [ -2.1051,   2.6321,   3.2537,  ...,  -1.0163,  -1.9944,  -2.6697],
        [ -7.8762,  -3.5751,   0.1031,  ...,   1.7867,   1.0093,  -0.1828]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 8, 0, 1, 1, 3, 0, 3, 7, 8, 1, 2, 2, 8, 6, 4, 4, 0, 1, 8, 7, 1, 2, 5,
        2, 4, 4, 7, 7, 6, 6, 4, 4, 8, 5, 2, 0, 5, 5, 2, 5, 4, 3, 6, 0, 0, 8, 7,
        3, 3, 7, 6, 0, 0, 5, 2, 2, 2, 0, 0, 1, 5, 5, 7, 1, 4, 2, 2, 6, 0, 3, 8,
        7, 8, 0, 8, 0, 6, 8, 0, 2, 3, 4, 0, 2, 0, 7, 1, 1, 3, 8, 6, 4, 6, 8, 0,
        2, 0, 3, 0, 6, 7, 7, 6, 8, 3, 0, 1, 3, 0, 1, 6, 4, 8, 7, 4, 8, 0, 5, 5,
        5, 8, 6, 6, 7, 4, 3, 8]) 
pred: tensor([[-9.8977e+00, -5.7209e+00, -1.6072e-01,  ...,  2.1919e+00,
          2.8087e+00,  1.3861e+00],
        [-1.0463e+01, -1.1376e+01, -3.4253e+00,  ...,  4.3242e+00,
          5.2528e+00,  5.5560e+00],
        [ 9.6461e+00,  6.1999e+00,  4.5680e+00,  ..., -3.5775e+00,
         -3.1123e+00, -4.4538e-01],
        ...,
        [-3.0342e+00,  1.6191e+00,  2.3512e+00,  ..., -6.7065e-01,
         -7.0960e-01, -1.9756e+00],
        [ 7.3475e-03,  2.4874e+00,  2.4143e+00,  ..., -1.1370e+00,
         -1.3652e+00, -1.6636e+00],
        [-1.0463e+01, -1.1376e+01, -3.4253e+00,  ...,  4.3242e+00,
          5.2528e+00,  5.5560e+00]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 5, 0, 5, 4, 4, 4, 8, 8, 1, 5, 3, 0, 3, 1, 6, 4, 6, 4, 5, 5, 8, 8, 6,
        8, 0, 5, 2, 6, 0, 5, 4, 0, 7, 0, 6, 0, 0, 2, 4, 2, 7, 3, 2, 0, 1, 2, 8,
        7, 1, 0, 6, 8, 2, 1, 8, 2, 5, 3, 3, 2, 7, 6, 5, 6, 4, 8, 2, 7, 7, 6, 2,
        8, 6, 3, 8, 8, 5, 3, 8, 6, 0, 1, 4, 3, 5, 6, 6, 0, 8, 7, 7, 1, 1, 6, 1,
        6, 6, 1, 5, 5, 7, 2, 6, 4, 8, 7, 4, 3, 0, 8, 6, 2, 1, 6, 1, 2, 0, 6, 1,
        0, 8, 6, 3, 1, 7, 0, 6]) 
pred: tensor([[  9.4939,   6.0862,   4.6900,  ...,  -3.5745,  -3.0740,  -0.4060],
        [ -7.0487,  -2.2572,   0.9762,  ...,   0.9502,   0.8766,  -0.3877],
        [  8.2066,   5.6432,   3.9996,  ...,  -2.9819,  -2.5201,  -0.8491],
        ...,
        [-11.7569,  -9.3071,  -1.5715,  ...,   3.5760,   4.6302,   3.7839],
        [  7.1532,   6.0806,   4.5712,  ...,  -3.1072,  -2.9836,  -1.6006],
        [ -9.3788,  -7.0544,  -1.3325,  ...,   2.9233,   3.4919,   2.4910]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 2, 3, 6, 6, 2, 8, 3, 2, 6, 1, 3, 0, 2, 3, 8, 2, 4, 3, 7, 1, 0, 0, 3,
        1, 3, 5, 4, 1, 8, 2, 1, 4, 1, 6, 3, 6, 8, 2, 4, 0, 3, 2, 7, 1, 1, 2, 2,
        8, 8, 8, 7, 0, 7, 4, 4, 3, 1, 3, 7, 0, 4, 0, 7, 5, 7, 6, 4, 0, 7, 4, 6,
        1, 2, 3, 8, 6, 5, 0, 1, 5, 1, 8, 7, 6, 1, 2, 1, 8, 2, 8, 3, 5, 4, 6, 0,
        4, 2, 1, 3, 0, 1, 0, 0, 0, 1, 4, 4, 7, 3, 8, 7, 0, 0, 0, 1, 6, 5, 8, 3,
        6, 4, 1, 2, 5, 8, 4, 8]) 
pred: tensor([[-12.6886, -10.6719,  -1.9732,  ...,   4.0231,   5.3125,   4.8954],
        [ -1.4578,   3.2620,   3.4951,  ...,  -1.5646,  -1.6558,  -2.6333],
        [ -1.6767,   2.2969,   2.3231,  ...,  -0.9745,  -1.3686,  -2.2768],
        ...,
        [-14.5254, -17.8071,  -5.0900,  ...,   6.4938,   9.3849,  10.3606],
        [ -7.2185,  -4.4104,   0.2385,  ...,   1.7688,   2.4228,   1.4257],
        [-11.6870, -13.7198,  -4.0057,  ...,   4.9152,   7.0294,   7.8427]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 2, 2, 5, 6, 5, 2, 1, 0, 0, 0, 7, 4, 5, 8, 4, 3, 8, 0, 4, 1, 2, 0, 4,
        5, 1, 3, 3, 1, 0, 8, 4, 7, 8, 5, 8, 6, 8, 0, 0, 1, 2, 8, 7, 6, 1, 2, 1,
        7, 3, 0, 3, 7, 1, 0, 6, 1, 0, 7, 7, 0, 0, 7, 1, 1, 5, 2, 7, 0, 1, 0, 1,
        1, 5, 1, 0, 5, 3, 2, 4, 3, 3, 5, 0, 0, 6, 1, 5, 1, 7, 5, 8, 3, 1, 0, 6,
        5, 8, 5, 1, 1, 4, 0, 6, 5, 6, 1, 4, 5, 0, 3, 5, 5, 3, 8, 5, 1, 0, 5, 1,
        6, 1, 8, 4, 1, 0, 7, 2]) 
pred: tensor([[-10.1997,  -7.7683,  -1.8266,  ...,   3.1679,   3.5507,   3.0335],
        [ -1.2471,   2.1572,   2.8192,  ...,  -1.4074,  -1.7764,  -1.6911],
        [ -0.2439,   3.4413,   3.7119,  ...,  -1.6914,  -1.9612,  -2.2819],
        ...,
        [  7.2639,   5.9056,   4.0262,  ...,  -3.2954,  -3.2504,  -1.4796],
        [-10.2911,  -9.2236,  -2.1355,  ...,   3.5072,   4.6527,   4.6015],
        [ -2.4608,   2.6008,   3.0716,  ...,  -1.3890,  -1.7520,  -2.5179]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 6, 1, 0, 6, 5, 3, 6, 7, 7, 8, 2, 0, 1, 8, 3, 0, 3, 6, 7, 7, 8, 8, 2,
        1, 7, 4, 2, 1, 7, 5, 5, 5, 5, 1, 1, 1, 1, 6, 0, 4, 2, 0, 2, 4, 8, 6, 0,
        1, 3, 6, 7, 7, 2, 5, 5, 5, 7, 2, 8, 0, 0, 7, 8, 1, 2, 7, 3, 8, 0, 6, 2,
        8, 3, 2, 4, 3, 8, 1, 2, 0, 4, 7, 8, 3, 2, 4, 7, 3, 4, 7, 7, 8, 7, 7, 3,
        4, 8, 0, 6, 3, 4, 2, 3, 6, 4, 1, 4, 3, 0, 7, 3, 6, 5, 4, 6, 3, 0, 3, 0,
        3, 6, 0, 2, 8, 4, 0, 5]) 
pred: tensor([[-1.0510e+01, -7.1855e+00, -2.1838e+00,  ...,  3.2533e+00,
          3.0387e+00,  2.0096e+00],
        [-1.0681e+01, -7.7845e+00, -2.1352e+00,  ...,  3.3665e+00,
          3.2009e+00,  2.6234e+00],
        [ 1.0129e+00,  4.2165e+00,  3.1693e+00,  ..., -2.1936e+00,
         -2.9603e+00, -2.7582e+00],
        ...,
        [-4.1171e+00,  4.8895e-02,  1.3455e+00,  ..., -6.2041e-03,
         -7.3818e-01, -1.2912e+00],
        [ 1.0259e+01,  6.4337e+00,  4.5201e+00,  ..., -3.8166e+00,
         -3.1441e+00, -6.3814e-01],
        [-9.2846e+00, -4.1901e+00, -3.9486e-01,  ...,  2.0590e+00,
          1.4631e+00,  5.5350e-02]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 7, 7, 6, 5, 4, 5, 1, 7, 4, 0, 0, 6, 3, 8, 1, 7, 5, 2, 8, 5, 7, 0, 1,
        8, 0, 2, 7, 2, 2, 2, 0, 7, 1, 5, 2, 7, 6, 4, 6, 2, 7, 2, 1, 1, 1, 0, 8,
        5, 7, 7, 6, 2, 6, 7, 8, 8, 1, 8, 8, 1, 7, 8, 4, 1, 1, 2, 7, 1, 3, 3, 6,
        3, 7, 1, 6, 4, 8, 0, 7, 7, 1, 7, 6, 4, 3, 4, 5, 0, 0, 4, 7, 5, 5, 6, 0,
        2, 8, 4, 7, 6, 5, 7, 4, 4, 7, 2, 7, 4, 8, 2, 6, 3, 6, 5, 5, 7, 4, 1, 1,
        2, 5, 2, 6, 1, 1, 2, 4]) 
pred: tensor([[  4.6427,   4.8791,   4.2351,  ...,  -2.6418,  -2.2700,  -1.5472],
        [ -8.4295,  -6.5611,  -2.1497,  ...,   2.8606,   2.9044,   2.4432],
        [-10.8968,  -8.2193,  -2.7494,  ...,   3.9544,   3.4217,   2.7005],
        ...,
        [  4.2896,   6.1983,   4.5033,  ...,  -2.8364,  -3.4024,  -3.0973],
        [  4.0633,   3.8195,   3.3855,  ...,  -2.1618,  -1.9378,  -0.8940],
        [ -8.0353,  -1.2396,   0.8505,  ...,   1.2771,  -0.0431,  -2.2701]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 0, 4, 8, 5, 6, 3, 6, 4, 1, 3, 2, 0, 2, 3, 3, 8, 5, 0, 1, 6, 6, 0, 7,
        1, 7, 8, 8, 2, 4, 0, 6, 1, 1, 6, 3, 2, 6, 4, 5, 0, 8, 7, 8, 3, 8, 2, 7,
        0, 1, 0, 6, 2, 7, 4, 7, 0, 4, 4, 6, 7, 8, 5, 2, 0, 0, 3, 6, 5, 6, 3, 6,
        8, 5, 7, 1, 5, 0, 1, 0, 7, 7, 2, 3, 1, 5, 5, 0, 2, 7, 7, 4, 1, 4, 1, 8,
        4, 0, 0, 8, 8, 7, 6, 6, 7, 3, 7, 7, 8, 0, 6, 4, 8, 6, 6, 6, 6, 6, 3, 8,
        4, 2, 5, 2, 0, 1, 5, 6]) 
pred: tensor([[-3.6690e+00,  3.7221e+00,  3.9066e+00,  ..., -1.1578e+00,
         -2.3840e+00, -4.1768e+00],
        [ 1.0894e+01,  7.0081e+00,  4.7008e+00,  ..., -3.8803e+00,
         -3.6491e+00, -1.0450e+00],
        [-6.3218e+00,  1.0863e-02,  1.0416e+00,  ...,  6.9817e-01,
         -4.4730e-01, -2.6982e+00],
        ...,
        [-1.9329e-01,  6.0331e+00,  4.7470e+00,  ..., -2.1299e+00,
         -3.4681e+00, -5.0927e+00],
        [-8.0565e+00, -1.7147e+00,  1.2997e+00,  ...,  1.0471e+00,
          4.7725e-01, -1.1006e+00],
        [-1.3058e+01, -7.7002e+00, -1.3520e+00,  ...,  3.9470e+00,
          3.3920e+00,  1.6355e+00]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 8, 0, 4, 8, 8, 5, 0, 5, 2, 2, 1, 1, 7, 8, 8, 8, 6, 3, 4, 5, 8, 3, 1,
        0, 6, 1, 0, 3, 6, 7, 6, 6, 2, 1, 1, 1, 5, 7, 6, 2, 3, 6, 8, 6, 3, 3, 3,
        3, 7, 6, 2, 6, 1, 4, 0, 0, 0, 3, 5, 2, 5, 7, 7, 1, 6, 1, 2, 8, 1, 4, 5,
        5, 8, 0, 0, 5, 0, 6, 7, 4, 8, 1, 7, 1, 7, 0, 3, 1, 7, 6, 6, 8, 8, 2, 4,
        5, 1, 7, 0, 7, 4, 7, 4, 2, 4, 2, 6, 6, 2, 6, 1, 8, 1, 5, 6, 6, 3, 5, 5,
        1, 3, 3, 8, 6, 2, 6, 2]) 
pred: tensor([[ 10.1822,   6.9625,   5.3643,  ...,  -3.8168,  -2.8000,  -0.9193],
        [-12.4350, -13.4234,  -4.6381,  ...,   6.0379,   6.5342,   7.1336],
        [  8.0546,   6.8927,   4.9531,  ...,  -3.2987,  -3.4034,  -2.2656],
        ...,
        [ -2.5990,   3.9879,   4.1988,  ...,  -1.3054,  -2.9207,  -4.0325],
        [-10.5656,  -7.2888,  -1.7629,  ...,   3.8376,   2.9181,   2.2438],
        [ -0.3034,   3.5028,   3.2889,  ...,  -1.3911,  -1.9005,  -2.6471]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 2, 2, 2, 1, 1, 1, 2, 6, 5, 4, 2, 0, 8, 1, 6, 1, 0, 0, 7, 3, 4, 0, 0,
        8, 4, 0, 4, 0, 2, 6, 3, 2, 0, 5, 5, 7, 4, 1, 1, 4, 2, 1, 1, 8, 2, 2, 1,
        7, 7, 1, 1, 0, 7, 5, 5, 8, 2, 6, 8, 4, 5, 6, 8, 7, 0, 6, 0, 1, 3, 2, 6,
        6, 7, 1, 7, 0, 0, 8, 5, 0, 4, 5, 8, 2, 0, 1, 5, 1, 0, 8, 0, 5, 1, 4, 2,
        6, 2, 0, 3, 0, 4, 6, 2, 5, 7, 2, 1, 3, 3, 7, 3, 6, 4, 4, 4, 5, 0, 3, 6,
        1, 1, 2, 0, 1, 2, 4, 1]) 
pred: tensor([[ 4.0975,  5.5156,  5.1522,  ..., -2.6112, -3.1661, -2.3023],
        [-2.4595,  2.9347,  3.5960,  ..., -1.0876, -2.3705, -3.0043],
        [-2.0978,  4.0987,  3.6429,  ..., -1.5703, -2.7852, -4.0016],
        ...,
        [-2.2155,  1.4760,  3.5600,  ..., -0.0841, -1.2016, -1.6505],
        [-7.4482, -0.8183,  2.3834,  ...,  0.7546,  0.2280, -1.4547],
        [ 4.2988,  5.7353,  4.5007,  ..., -2.6125, -3.2393, -2.7860]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 6, 8, 5, 0, 4, 3, 0, 2, 6, 2, 0, 3, 4, 7, 7, 2, 8, 2, 5, 1, 6, 5, 7,
        8, 1, 2, 4, 7, 1, 5, 6, 7, 5, 5, 2, 1, 6, 1, 8, 0, 3, 8, 1, 8, 0, 3, 4,
        8, 3, 2, 6, 8, 8, 0, 4, 2, 3, 5, 2, 1, 3, 0, 6, 5, 7, 2, 3, 8, 0, 2, 2,
        1, 6, 0, 3, 5, 3, 6, 5, 5, 5, 7, 2, 3, 7, 0, 3, 3, 6, 8, 6, 2, 0, 6, 3,
        3, 6, 5, 3, 3, 2, 2, 8, 3, 4, 7, 3, 2, 6, 6, 3, 3, 0, 1, 6, 7, 0, 4, 4,
        7, 5, 7, 2, 2, 7, 2, 7]) 
pred: tensor([[ -9.1214,  -0.8687,   1.6485,  ...,   1.1913,  -0.6121,  -2.8729],
        [-12.2044,  -7.9312,  -0.9799,  ...,   3.9693,   3.7294,   2.8048],
        [-19.7568, -22.2933,  -7.1704,  ...,  10.0166,  10.8529,  12.5201],
        ...,
        [-18.5959, -16.4417,  -4.2318,  ...,   7.8338,   7.2363,   7.6213],
        [ -1.5867,   2.7540,   4.2664,  ...,  -1.0826,  -1.8527,  -2.2475],
        [-10.7977,  -9.1208,  -2.7038,  ...,   4.7395,   4.2480,   3.8877]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 3, 7, 2, 3, 6, 2, 5, 6, 6, 5, 7, 6, 8, 4, 4, 0, 2, 6, 4, 8, 5, 0, 3,
        2, 3, 8, 1, 2, 7, 3, 3, 6, 0, 4, 5, 2, 4, 6, 3, 1, 3, 7, 2, 5, 1, 8, 8,
        3, 7, 2, 5, 0, 4, 6, 0, 8, 8, 1, 7, 5, 4, 7, 3, 6, 3, 4, 3, 7, 8, 8, 1,
        0, 3, 6, 3, 6, 1, 3, 8, 2, 0, 7, 7, 1, 6, 4, 7, 3, 5, 4, 2, 4, 4, 3, 3,
        5, 8, 6, 2, 8, 6, 0, 4, 7, 7, 2, 8, 3, 0, 7, 0, 6, 2, 1, 5, 7, 2, 5, 5,
        5, 7, 6, 2, 7, 0, 1, 7]) 
pred: tensor([[ -8.5464,  -2.9387,   1.5081,  ...,   1.9176,   1.1676,  -0.3034],
        [ -3.2566,   2.1748,   3.8709,  ...,  -0.8944,  -1.4867,  -2.3403],
        [-14.3252, -11.0109,  -2.7473,  ...,   5.8982,   5.2689,   4.2446],
        ...,
        [ 10.1958,   8.3910,   6.4917,  ...,  -4.3741,  -3.5440,  -2.0303],
        [  3.4681,   6.7704,   5.8692,  ...,  -3.0783,  -3.9777,  -3.6432],
        [-15.1564, -10.9102,  -1.9180,  ...,   5.3893,   4.7217,   4.2735]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 8, 7, 8, 5, 0, 2, 4, 6, 5, 6, 3, 4, 1, 2, 1, 0, 0, 1, 1, 8, 5, 3, 4,
        5, 0, 3, 0, 8, 0, 8, 7, 3, 3, 7, 0, 3, 1, 7, 6, 2, 4, 2, 0, 7, 5, 7, 8,
        2, 5, 8, 5, 6, 2, 4, 8, 2, 7, 8, 1, 5, 8, 7, 0, 0, 3, 4, 1, 5, 7, 2, 0,
        8, 6, 3, 3, 2, 3, 1, 0, 6, 3, 8, 1, 8, 0, 7, 0, 3, 4, 6, 1, 8, 0, 0, 7,
        6, 1, 0, 0, 2, 3, 8, 5, 4, 5, 0, 8, 8, 0, 0, 8, 1, 3, 5, 2, 6, 5, 0, 7,
        1, 1, 0, 7, 7, 7, 6, 7]) 
pred: tensor([[  8.6744,  10.0372,   7.2862,  ...,  -4.5003,  -4.5493,  -4.4139],
        [-16.1993, -14.7067,  -3.6899,  ...,   6.6782,   7.6023,   7.6289],
        [-18.0835, -13.9566,  -3.0232,  ...,   7.0928,   7.0521,   5.8291],
        ...,
        [-12.4842,  -8.9884,  -1.4762,  ...,   4.1541,   4.4237,   3.8125],
        [-12.1764,  -6.8059,   0.8589,  ...,   3.3541,   3.2792,   2.4092],
        [-14.8297, -10.5066,  -1.7178,  ...,   5.0161,   5.1702,   4.3153]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 5, 3, 4, 8, 7, 2, 6, 0, 7, 4, 1, 8, 2, 0, 0, 5, 0, 0, 0, 8, 5, 4, 5,
        7, 5, 0, 6, 6, 3, 6, 0, 1, 5, 6, 2, 4, 2, 5, 8, 1, 5, 7, 8, 5, 7, 3, 1,
        0, 0, 0, 2, 2, 0, 6, 0, 0, 0, 4, 0, 7, 3, 7, 2, 2, 2, 1, 2, 8, 6, 2, 7,
        8, 2, 0, 4, 6, 2, 1, 3, 8, 2, 3, 8, 0, 1, 1, 8, 4, 1, 0, 7, 5, 1, 7, 1,
        5, 1, 4, 4, 1, 5, 0, 4, 8, 4, 7, 2, 8, 6, 5, 4, 4, 4, 3, 8, 0, 6, 2, 3,
        5, 5, 2, 1, 6, 3, 2, 6]) 
pred: tensor([[  6.6858,   9.9628,   6.9899,  ...,  -4.1648,  -4.9423,  -5.4555],
        [-11.8520,  -4.0258,   1.1592,  ...,   2.3442,   1.4063,  -0.3938],
        [ -6.6447,   1.4848,   3.9671,  ...,   0.1043,  -1.4359,  -3.2466],
        ...,
        [ -4.6925,   3.0590,   4.4659,  ...,  -0.6756,  -2.2164,  -3.8853],
        [  4.2166,   5.3584,   4.7473,  ...,  -2.2774,  -2.2126,  -2.2452],
        [-18.0009, -10.1180,  -0.7995,  ...,   5.6664,   5.0170,   2.5696]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 5, 8, 8, 2, 1, 6, 0, 3, 6, 6, 6, 0, 8, 5, 7, 5, 4, 4, 5, 4, 5, 5, 6,
        5, 4, 5, 4, 8, 1, 4, 8, 2, 0, 2, 2, 0, 0, 0, 0, 3, 4, 2, 4, 5, 0, 6, 0,
        2, 3, 7, 8, 4, 2, 4, 5, 7, 0, 8, 6, 0, 8, 8, 7, 8, 2, 1, 4, 3, 8, 0, 3,
        3, 2, 3, 2, 2, 3, 8, 2, 0, 7, 3, 4, 4, 0, 6, 5, 0, 2, 0, 3, 1, 7, 6, 0,
        8, 4, 6, 2, 6, 7, 8, 1, 2, 5, 1, 2, 6, 7, 8, 0, 8, 5, 3, 7, 6, 2, 7, 5,
        6, 1, 0, 2, 8, 8, 8, 6]) 
pred: tensor([[ -5.5982,   2.7060,   3.5239,  ...,  -0.0597,  -2.2838,  -4.5926],
        [-14.0228,  -4.0764,   2.3296,  ...,   2.5556,   1.1984,  -0.8431],
        [-15.4075, -14.4451,  -3.7437,  ...,   5.8707,   7.4771,   8.3992],
        ...,
        [-20.2663, -19.1407,  -5.0292,  ...,   7.8083,   9.8638,  11.0433],
        [-15.2127, -14.1974,  -3.6849,  ...,   5.7684,   7.3305,   8.2152],
        [-13.1446,  -8.4134,  -1.5669,  ...,   4.0698,   3.9708,   3.0877]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 5, 7, 2, 8, 8, 1, 2, 5, 6, 5, 1, 5, 5, 2, 7, 2, 1, 7, 5, 6, 3, 8, 7,
        4, 2, 5, 1, 0, 5, 3, 8, 2, 7, 0, 0, 5, 6, 0, 7, 5, 5, 7, 5, 1, 6, 8, 7,
        3, 7, 2, 4, 0, 5, 7, 0, 3, 2, 1, 3, 5, 6, 5, 7, 0, 2, 2, 6, 0, 8, 0, 7,
        2, 8, 5, 8, 8, 8, 1, 0, 4, 5, 4, 0, 7, 0, 5, 2, 5, 3, 6, 4, 1, 3, 2, 7,
        4, 1, 7, 8, 2, 8, 4, 5, 4, 1, 1, 7, 6, 1, 6, 5, 2, 3, 0, 0, 6, 2, 5, 6,
        5, 2, 6, 8, 8, 2, 8, 5]) 
pred: tensor([[  1.6266,   4.6427,   4.6811,  ...,  -2.0673,  -2.6638,  -2.6426],
        [-14.4801,  -9.0716,  -1.3831,  ...,   3.8371,   3.5619,   3.5542],
        [-15.6785, -12.7958,  -3.6632,  ...,   5.6897,   5.9454,   6.3042],
        ...,
        [ -0.4043,   4.4665,   4.5918,  ...,  -1.6206,  -2.8155,  -3.6419],
        [-22.1365, -22.9359,  -7.1215,  ...,   8.9079,  11.4387,  14.1906],
        [-13.9423,  -7.6659,  -0.1067,  ...,   2.9001,   3.1056,   2.9298]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 8, 2, 0, 2, 3, 3, 7, 1, 1, 2, 4, 6, 5, 6, 1, 4, 5, 0, 4, 4, 0, 0, 5,
        0, 3, 0, 7, 5, 4, 2, 0, 4, 7, 0, 8, 7, 2, 7, 8, 2, 4, 6, 7, 1, 8, 4, 0,
        7, 6, 3, 0, 3, 3, 6, 0, 0, 1, 6, 2, 4, 2, 3, 6, 2, 0, 0, 4, 8, 5, 8, 0,
        1, 6, 1, 4, 6, 4, 3, 2, 7, 1, 0, 6, 0, 3, 3, 1, 4, 7, 7, 3, 7, 4, 3, 0,
        8, 5, 1, 0, 5, 4, 8, 8, 4, 3, 4, 0, 6, 4, 8, 0, 7, 8, 3, 3, 8, 7, 5, 1,
        5, 1, 0, 7, 6, 3, 1, 6]) 
pred: tensor([[-21.8566, -18.6895,  -6.2290,  ...,   8.5423,   9.0381,   9.3776],
        [-18.7337, -17.8973,  -5.9370,  ...,   7.3860,   8.9960,  10.4150],
        [  6.0990,   5.6706,   5.0406,  ...,  -2.5337,  -3.1880,  -2.1164],
        ...,
        [ -0.3073,   1.1605,   3.2110,  ...,  -0.8816,  -0.9854,  -0.1319],
        [  8.4980,   6.0101,   5.0522,  ...,  -3.0757,  -2.6850,  -1.2795],
        [-15.0607,  -9.2466,  -1.7233,  ...,   4.2857,   3.8448,   3.3459]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 2, 0, 2, 7, 8, 4, 0, 6, 2, 7, 6, 4, 0, 0, 5, 6, 6, 6, 6, 1, 5, 1, 0,
        4, 6, 7, 7, 5, 8, 1, 0, 7, 3, 2, 0, 0, 3, 0, 3, 6, 7, 4, 0, 2, 0, 3, 0,
        0, 2, 1, 1, 8, 1, 4, 3, 0, 2, 5, 7, 8, 4, 6, 6, 4, 4, 1, 0, 6, 5, 1, 6,
        0, 0, 4, 6, 5, 2, 7, 8, 5, 7, 4, 0, 8, 7, 1, 4, 7, 0, 4, 8, 3, 8, 5, 4,
        8, 1, 2, 3, 0, 1, 8, 8, 0, 1, 5, 7, 2, 1, 2, 5, 0, 2, 3, 2, 4, 3, 1, 6,
        5, 8, 2, 8, 1, 8, 1, 3]) 
pred: tensor([[ 13.0969,   8.8119,   6.4449,  ...,  -4.2290,  -4.3037,  -2.1559],
        [ -1.2899,   3.5828,   4.9064,  ...,  -0.8031,  -2.1503,  -3.3284],
        [ 12.7598,   9.1952,   6.4083,  ...,  -4.6451,  -4.7268,  -2.6347],
        ...,
        [-19.7118, -17.9772,  -6.4831,  ...,   8.0143,   9.5744,   9.8524],
        [  1.4827,   5.5509,   4.6080,  ...,  -2.1136,  -3.5271,  -4.3025],
        [ -6.8062,   1.2130,   3.0448,  ...,   0.3309,  -1.2914,  -3.6362]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 2, 7, 6, 6, 2, 3, 0, 7, 0, 6, 6, 6, 3, 2, 5, 6, 8, 7, 2, 4, 7, 5, 1,
        4, 3, 5, 7, 1, 1, 4, 5, 1, 6, 8, 7, 6, 7, 0, 1, 2, 8, 1, 0, 7, 3, 5, 5,
        6, 8, 3, 5, 8, 8, 3, 8, 0, 8, 3, 1, 6, 5, 8, 6, 0, 4, 5, 0, 4, 5, 1, 0,
        4, 0, 8, 0, 1, 4, 8, 2, 4, 1, 1, 1, 7, 8, 8, 6, 6, 7, 6, 6, 2, 3, 0, 1,
        7, 7, 4, 7, 6, 7, 0, 4, 8, 4, 5, 5, 6, 4, 5, 5, 0, 1, 6, 4, 1, 6, 4, 1,
        4, 7, 0, 3, 3, 4, 5, 0]) 
pred: tensor([[  5.5694,   6.4598,   5.9243,  ...,  -2.8556,  -2.6739,  -2.7935],
        [ -2.6118,   1.2962,   2.8231,  ...,  -0.3129,  -0.9732,  -1.7319],
        [-14.4863, -10.8642,  -3.6676,  ...,   5.3227,   5.4565,   4.7868],
        ...,
        [-19.6402,  -3.2558,   3.5723,  ...,   3.1270,   0.4400,  -3.9308],
        [-18.7595,  -9.7696,  -2.5232,  ...,   5.6312,   4.2779,   1.5925],
        [ 10.8638,   8.7761,   5.5796,  ...,  -4.0989,  -4.8257,  -3.3464]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 4, 0, 0, 1, 5, 0, 4, 0, 6, 8, 4, 8, 6, 6, 0, 0, 8, 8, 7, 0, 2, 3, 2,
        2, 5, 1, 0, 8, 3, 3, 3, 6, 6, 5, 0, 3, 3, 2, 4, 5, 0, 0, 2, 6, 8, 6, 5,
        8, 0, 6, 4, 5, 1, 1, 0, 0, 7, 8, 0, 3, 8, 2, 0, 0, 2, 8, 5, 4, 7, 6, 4,
        0, 0, 2, 8, 8, 7, 5, 2, 2, 4, 4, 3, 0, 7, 5, 6, 8, 4, 5, 8, 7, 7, 8, 3,
        2, 5, 5, 8, 8, 7, 1, 7, 6, 0, 0, 3, 1, 5, 3, 6, 5, 2, 3, 3, 4, 8, 6, 3,
        0, 8, 1, 0, 5, 6, 6, 1]) 
pred: tensor([[-17.0432, -14.9617,  -5.7751,  ...,   6.9707,   7.6801,   7.8353],
        [-13.3022,  -8.2170,  -2.0514,  ...,   4.9321,   2.6620,   2.1971],
        [ 11.0523,   9.9915,   6.5759,  ...,  -4.6224,  -5.9340,  -4.6184],
        ...,
        [-20.3324, -11.4929,  -2.4784,  ...,   6.1828,   5.3660,   3.1454],
        [-15.0210,  -9.7977,  -2.6774,  ...,   5.1649,   4.2661,   3.4345],
        [  3.8687,   5.9756,   5.2714,  ...,  -2.2956,  -3.8516,  -3.6310]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 7, 6, 5, 8, 6, 7, 4, 6, 5, 6, 7, 7, 4, 8, 5, 4, 6, 1, 1, 2, 5, 3, 4,
        6, 4, 2, 6, 1, 1, 6, 7, 3, 0, 8, 8, 2, 1, 2, 8, 3, 7, 2, 7, 1, 2, 4, 2,
        1, 5, 6, 0, 8, 5, 4, 6, 5, 7, 3, 2, 3, 3, 5, 7, 5, 2, 0, 2, 4, 8, 6, 1,
        4, 8, 0, 1, 7, 7, 2, 4, 7, 2, 4, 8, 2, 1, 1, 1, 6, 5, 2, 5, 6, 5, 7, 8,
        4, 2, 2, 8, 0, 7, 7, 7, 7, 7, 6, 6, 0, 5, 3, 4, 5, 4, 4, 8, 2, 1, 6, 3,
        5, 0, 6, 2, 0, 6, 2, 6]) 
pred: tensor([[  4.3542,   7.0724,   6.2798,  ...,  -3.2074,  -4.9194,  -4.3871],
        [-21.7305, -17.9112,  -6.3866,  ...,   8.0070,   8.6732,   9.0902],
        [-16.1227, -11.8112,  -3.2781,  ...,   5.5567,   4.9185,   5.4519],
        ...,
        [-20.4399, -10.3141,  -1.3801,  ...,   5.7106,   3.8630,   2.3123],
        [ -2.3123,   2.7939,   4.2214,  ...,  -1.2079,  -2.0812,  -2.8437],
        [-19.5299, -12.1510,  -3.0542,  ...,   5.9303,   5.2980,   4.3886]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 0, 3, 2, 1, 6, 6, 1, 3, 6, 1, 3, 4, 7, 5, 3, 1, 7, 3, 6, 7, 3, 6, 1,
        7, 0, 0, 0, 0, 2, 1, 4, 6, 6, 6, 8, 7, 0, 2, 1, 8, 1, 8, 6, 2, 2, 3, 7,
        6, 7, 1, 2, 3, 2, 1, 1, 7, 1, 8, 6, 1, 4, 6, 7, 4, 8, 1, 4, 1, 3, 3, 5,
        4, 7, 6, 1, 7, 3, 0, 5, 7, 5, 3, 5, 5, 7, 2, 3, 5, 8, 1, 3, 3, 6, 3, 0,
        7, 7, 1, 7, 7, 3, 5, 7, 2, 6, 2, 1, 6, 8, 0, 7, 2, 0, 5, 0, 6, 6, 2, 0,
        7, 2, 2, 0, 1, 4, 0, 3]) 
pred: tensor([[ 15.0566,   9.7828,   6.8799,  ...,  -4.8508,  -5.1259,  -2.4020],
        [ 17.1050,  10.5682,   7.8247,  ...,  -5.6203,  -5.1806,  -1.9842],
        [ -6.2612,  -0.4070,   3.5228,  ...,   0.3979,  -0.3636,  -1.1502],
        ...,
        [-12.9738,  -7.2363,  -0.1898,  ...,   3.8846,   2.4227,   2.2017],
        [ 17.1050,  10.5682,   7.8247,  ...,  -5.6203,  -5.1806,  -1.9842],
        [ -6.6165,   0.6423,   4.1193,  ...,   0.2731,  -0.9128,  -2.2266]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 3, 1, 8, 5, 0, 4, 2, 1, 1, 1, 6, 1, 5, 7, 5, 5, 4, 5, 0, 3, 3, 0, 5,
        5, 8, 2, 3, 6, 2, 7, 8, 3, 5, 2, 1, 7, 2, 7, 0, 3, 1, 8, 5, 1, 3, 4, 3,
        0, 0, 2, 8, 1, 3, 5, 6, 4, 0, 5, 1, 6, 4, 1, 6, 2, 7, 8, 8, 3, 2, 7, 8,
        2, 7, 6, 6, 8, 1, 6, 8, 2, 8, 3, 8, 6, 2, 2, 1, 0, 1, 0, 5, 6, 2, 7, 7,
        7, 4, 2, 5, 4, 7, 4, 4, 5, 4, 2, 0, 1, 2, 3, 5, 0, 6, 1, 5, 3, 8, 2, 5,
        4, 2, 4, 2, 6, 3, 1, 4]) 
pred: tensor([[-16.7166, -10.3326,  -2.0761,  ...,   5.0250,   5.4427,   4.1839],
        [ -7.7516,   2.0244,   4.6556,  ...,   0.1963,  -1.7084,  -4.5457],
        [  0.6734,   7.7571,   7.4441,  ...,  -2.4601,  -5.1832,  -6.8924],
        ...,
        [ -6.2229,   2.5389,   5.2891,  ...,  -0.3080,  -1.7473,  -4.1041],
        [  2.6116,   8.3961,   6.9134,  ...,  -2.8647,  -5.2610,  -6.8938],
        [-13.8818,  -5.2321,   1.3246,  ...,   2.8896,   2.9356,   0.3124]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 0, 1, 4, 0, 6, 4, 6, 2, 7, 0, 4, 1, 1, 5, 0, 4, 8, 5, 2, 4, 4, 3, 5,
        2, 5, 1, 0, 6, 1, 0, 4, 6, 8, 7, 2, 3, 7, 3, 1, 7, 8, 8, 7, 0, 0, 5, 2,
        0, 0, 5, 6, 5, 1, 2, 7, 7, 6, 0, 0, 7, 5, 4, 6, 1, 8, 8, 7, 1, 2, 7, 1,
        2, 1, 2, 0, 2, 3, 5, 4, 1, 1, 7, 0, 0, 0, 2, 8, 6, 6, 2, 1, 4, 2, 7, 2,
        8, 5, 6, 5, 5, 7, 7, 0, 0, 0, 1, 2, 0, 8, 5, 6, 5, 6, 2, 8, 4, 5, 4, 7,
        0, 0, 2, 5, 2, 8, 7, 0]) 
pred: tensor([[ -9.4013,   0.8370,   4.6572,  ...,   1.3587,  -1.2228,  -4.1714],
        [ 17.5687,  11.5995,   8.4133,  ...,  -5.7524,  -4.8778,  -2.6610],
        [  6.7966,   9.8365,   8.2066,  ...,  -4.3403,  -5.5292,  -5.7352],
        ...,
        [-29.0629, -24.3274,  -7.0532,  ...,  11.0758,  14.2702,  13.7376],
        [-19.0902, -13.0274,  -2.6255,  ...,   6.2280,   7.6150,   6.1870],
        [ 16.9809,  11.7818,   8.4166,  ...,  -5.6336,  -4.6767,  -2.9447]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 8, 2, 5, 3, 2, 7, 3, 4, 0, 5, 6, 4, 0, 7, 0, 1, 5, 5, 0, 8, 3, 5, 7,
        0, 5, 4, 2, 5, 0, 6, 1, 4, 1, 5, 6, 7, 2, 1, 0, 1, 2, 0, 6, 6, 1, 6, 4,
        0, 4, 6, 0, 4, 8, 8, 1, 7, 3, 4, 0, 8, 2, 2, 1, 2, 5, 1, 0, 4, 0, 0, 6,
        0, 5, 8, 0, 8, 2, 2, 8, 2, 6, 8, 6, 3, 2, 0, 5, 2, 7, 4, 8, 2, 3, 0, 2,
        4, 4, 0, 2, 0, 6, 3, 2, 1, 1, 7, 5, 0, 7, 4, 4, 0, 3, 5, 6, 4, 0, 4, 4,
        5, 6, 4, 1, 6, 0, 6, 0]) 
pred: tensor([[ -0.7114,   7.8179,   8.4190,  ...,  -2.5892,  -4.8925,  -6.8403],
        [-21.8474, -17.7845,  -4.8923,  ...,   8.1575,   9.9585,   9.8550],
        [  2.6316,   6.9090,   7.5476,  ...,  -2.8163,  -4.7196,  -4.6768],
        ...,
        [ 16.4368,  12.0309,   8.7758,  ...,  -5.5882,  -5.7092,  -3.5895],
        [-21.1637, -12.6286,  -1.7132,  ...,   6.1761,   6.8180,   4.9432],
        [ 16.0221,  11.7517,   9.2856,  ...,  -5.8411,  -5.3331,  -3.2404]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 3, 2, 4, 5, 2, 5, 7, 8, 3, 6, 5, 6, 6, 5, 0, 6, 0, 1, 2, 5, 0, 0, 7,
        3, 7, 7, 1, 2, 3, 4, 5, 3, 6, 2, 6, 3, 0, 1, 2, 1, 7, 2, 0, 7, 3, 6, 0,
        1, 3, 6, 4, 5, 0, 5, 3, 6, 0, 7, 4, 2, 7, 7, 1, 1, 5, 5, 7, 8, 6, 7, 7,
        6, 8, 5, 7, 3, 6, 5, 8, 5, 6, 1, 1, 6, 5, 3, 7, 0, 8, 8, 6, 8, 5, 2, 8,
        7, 5, 3, 5, 3, 1, 6, 2, 7, 1, 0, 0, 3, 3, 1, 4, 7, 5, 1, 4, 6, 5, 5, 1,
        3, 6, 2, 1, 2, 7, 0, 3]) 
pred: tensor([[-20.7246, -14.9362,  -3.3925,  ...,   7.1892,   7.1623,   7.2547],
        [ -8.9581,   3.4293,   5.9591,  ...,   0.2022,  -3.2771,  -6.8523],
        [  7.1020,   8.1240,   8.0994,  ...,  -3.6474,  -4.7673,  -3.6940],
        ...,
        [-24.9646, -18.1682,  -4.4850,  ...,   8.7361,   8.7331,   8.6689],
        [ 18.5137,  12.6404,   8.5041,  ...,  -6.0700,  -5.5867,  -3.4164],
        [ -5.0936,   0.9764,   4.8930,  ...,   0.5499,  -0.5814,  -1.6613]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 5, 0, 0, 7, 2, 3, 8, 8, 8, 2, 2, 3, 8, 4, 0, 8, 7, 4, 0, 4, 6, 0, 2,
        3, 7, 2, 6, 1, 8, 8, 7, 1, 2, 5, 2, 2, 8, 1, 1, 1, 4, 5, 3, 0, 3, 1, 8,
        2, 0, 7, 5, 0, 2, 1, 6, 7, 8, 2, 0, 2, 6, 4, 8, 5, 3, 2, 6, 4, 6, 6, 4,
        2, 3, 4, 7, 3, 5, 1, 6, 0, 6, 1, 6, 3, 4, 0, 0, 1, 2, 4, 4, 4, 0, 0, 8,
        5, 6, 2, 2, 2, 6, 1, 2, 7, 0, 1, 0, 8, 8, 0, 3, 0, 4, 0, 1, 0, 2, 7, 6,
        8, 7, 1, 6, 8, 4, 7, 2]) 
pred: tensor([[ -9.0430,   0.1168,   3.8004,  ...,   0.9563,  -2.2596,  -3.4522],
        [-21.3439,  -8.9451,   0.1955,  ...,   5.7558,   2.9907,   0.3357],
        [ 13.6476,  12.0768,   8.2921,  ...,  -5.3920,  -6.6687,  -5.5886],
        ...,
        [ -7.9855,  -3.4714,   1.7011,  ...,   2.2973,   0.1354,   0.6507],
        [-25.6333, -21.6892,  -6.5670,  ...,  10.0823,  10.8754,  11.9793],
        [  1.7717,   6.6339,   6.2008,  ...,  -2.2908,  -5.0455,  -5.3671]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 6, 7, 1, 4, 3, 8, 1, 7, 1, 3, 6, 1, 6, 7, 5, 6, 2, 7, 1, 1, 5, 7, 8,
        3, 0, 3, 3, 0, 7, 0, 8, 2, 8, 5, 0, 7, 6, 1, 3, 0, 0, 1, 5, 4, 5, 6, 2,
        0, 1, 0, 4, 1, 7, 6, 3, 4, 6, 4, 6, 4, 6, 3, 5, 4, 0, 2, 1, 1, 2, 5, 6,
        0, 1, 6, 7, 4, 0, 3, 8, 8, 8, 8, 4, 7, 8, 1, 6, 7, 5, 1, 0, 2, 0, 6, 3,
        6, 5, 0, 8, 3, 1, 2, 3, 3, 7, 5, 3, 4, 3, 4, 2, 6, 1, 6, 5, 7, 1, 6, 4,
        8, 8, 7, 7, 5, 5, 5, 2]) 
pred: tensor([[ 17.3819,  12.1438,   8.0326,  ...,  -5.7732,  -6.2758,  -3.9231],
        [-21.5927, -15.8983,  -4.0102,  ...,   7.9621,   7.8719,   7.7325],
        [-26.0986, -19.3309,  -5.3631,  ...,   9.6571,   9.5687,   9.4461],
        ...,
        [-19.1084,  -7.4073,  -0.0977,  ...,   5.2926,   2.1544,  -0.5574],
        [-20.9619, -10.8204,  -0.5060,  ...,   6.5912,   4.3150,   3.0019],
        [  0.2272,   4.5537,   5.2493,  ...,  -1.7994,  -4.1178,  -3.9760]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 2, 0, 3, 3, 5, 8, 4, 2, 1, 1, 7, 0, 5, 3, 8, 6, 4, 3, 6, 2, 8, 2, 7,
        5, 8, 1, 4, 1, 7, 7, 5, 7, 0, 3, 8, 8, 1, 0, 1, 7, 4, 2, 0, 2, 6, 4, 2,
        7, 2, 5, 0, 4, 0, 7, 7, 7, 5, 2, 8, 8, 8, 4, 4, 0, 7, 0, 8, 5, 8, 0, 3,
        4, 8, 2, 6, 1, 8, 6, 4, 8, 0, 7, 4, 2, 6, 0, 7, 7, 1, 7, 7, 1, 3, 1, 3,
        5, 3, 0, 2, 2, 6, 0, 8, 0, 1, 6, 6, 5, 1, 3, 4, 8, 3, 6, 1, 3, 1, 0, 7,
        0, 7, 0, 2, 0, 1, 1, 2]) 
pred: tensor([[-12.9487,  -5.2876,   0.8638,  ...,   3.3813,   1.7298,   0.1511],
        [ -0.2635,   6.1141,   5.6986,  ...,  -1.9252,  -5.1729,  -6.0971],
        [ 17.9297,  13.1881,   7.8549,  ...,  -5.8481,  -6.3747,  -4.7439],
        ...,
        [ 10.0800,  11.1151,   8.0589,  ...,  -4.2732,  -5.6897,  -5.8893],
        [  4.0225,   8.2573,   6.8123,  ...,  -3.2664,  -6.3488,  -6.3758],
        [ -5.4754,   3.5630,   5.4101,  ...,  -0.3043,  -3.5572,  -5.7754]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 4, 6, 8, 0, 0, 8, 1, 7, 8, 3, 1, 2, 8, 5, 2, 0, 2, 6, 6, 1, 2, 6, 7,
        0, 6, 5, 8, 8, 1, 3, 8, 3, 6, 4, 0, 0, 4, 4, 8, 5, 1, 5, 8, 6, 0, 7, 5,
        2, 6, 6, 2, 2, 4, 4, 0, 1, 5, 4, 6, 8, 2, 3, 2, 0, 8, 2, 6, 2, 8, 3, 4,
        3, 0, 2, 5, 0, 7, 5, 7, 8, 2, 6, 8, 6, 2, 2, 7, 5, 4, 5, 6, 8, 6, 6, 1,
        4, 6, 8, 5, 6, 8, 0, 6, 1, 5, 3, 6, 5, 4, 2, 6, 6, 6, 5, 5, 8, 7, 0, 1,
        7, 3, 2, 6, 4, 6, 8, 8]) 
pred: tensor([[ 19.1812,  14.6379,   9.0285,  ...,  -6.6293,  -7.2381,  -5.5138],
        [-16.3004,  -2.0926,   3.1077,  ...,   3.4261,   0.0598,  -4.6591],
        [-22.6446, -12.2042,  -2.9675,  ...,   7.0087,   6.1331,   2.9659],
        ...,
        [-22.9721, -10.1693,  -0.6282,  ...,   6.6796,   4.8913,   1.2962],
        [-27.3223, -24.3162,  -8.6973,  ...,  11.1267,  14.2731,  14.3722],
        [-27.3223, -24.3162,  -8.6973,  ...,  11.1267,  14.2731,  14.3722]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 4, 1, 7, 7, 8, 8, 7, 6, 6, 7, 7, 0, 1, 2, 7, 4, 6, 1, 0, 5, 8, 4, 8,
        4, 8, 8, 4, 8, 2, 2, 7, 1, 4, 2, 1, 2, 0, 4, 3, 6, 6, 0, 7, 2, 0, 4, 1,
        4, 4, 4, 3, 3, 4, 0, 7, 8, 2, 0, 5, 5, 7, 2, 2, 1, 4, 2, 7, 1, 2, 5, 5,
        7, 8, 6, 5, 8, 2, 1, 8, 0, 2, 6, 3, 5, 1, 0, 0, 3, 6, 7, 0, 0, 4, 5, 7,
        0, 4, 6, 8, 7, 5, 7, 4, 1, 7, 8, 6, 5, 8, 3, 4, 5, 6, 8, 8, 5, 1, 4, 0,
        6, 0, 4, 4, 3, 0, 7, 7]) 
pred: tensor([[-20.7774,  -7.5880,   0.4944,  ...,   5.6356,   2.8452,  -0.7465],
        [-16.9275,  -5.4480,   1.4276,  ...,   4.0026,   1.1799,  -1.4201],
        [  2.9942,  10.2091,   9.1905,  ...,  -3.6592,  -6.7575,  -8.3222],
        ...,
        [ 16.5157,  14.3173,   9.6118,  ...,  -6.3659,  -7.8331,  -6.6625],
        [-27.6383, -21.4624,  -6.6290,  ...,   9.7729,  11.0988,  10.9930],
        [-28.5277, -23.0513,  -7.3742,  ...,  10.3246,  12.1759,  12.3392]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 6, 6, 8, 1, 0, 8, 6, 6, 8, 1, 3, 0, 0, 5, 1, 6, 7, 8, 8, 7, 0, 4, 4,
        4, 8, 3, 0, 2, 4, 6, 1, 8, 2, 5, 5, 3, 3, 6, 7, 8, 7, 0, 0, 3, 3, 6, 2,
        4, 2, 5, 3, 2, 4, 7, 6, 2, 0, 3, 8, 6, 5, 3, 3, 8, 2, 0, 0, 1, 7, 4, 5,
        2, 2, 7, 8, 1, 1, 4, 4, 5, 2, 1, 4, 6, 6, 7, 1, 0, 3, 8, 0, 0, 2, 3, 8,
        5, 4, 3, 3, 8, 5, 3, 8, 4, 6, 0, 1, 5, 6, 7, 6, 5, 3, 0, 8, 7, 7, 5, 6,
        5, 8, 4, 4, 1, 1, 8, 2]) 
pred: tensor([[-19.7461, -10.2856,  -1.6856,  ...,   5.5676,   3.9146,   2.4082],
        [-20.3083, -10.9280,  -1.9845,  ...,   6.2069,   4.2501,   2.7696],
        [-21.0148, -11.0921,  -1.8332,  ...,   6.1374,   4.1314,   2.9081],
        ...,
        [ 11.8037,  11.9290,   8.7676,  ...,  -5.1392,  -7.5274,  -6.3522],
        [-25.3193, -22.1563,  -8.0042,  ...,   9.6906,  11.1640,  12.9332],
        [ -2.9722,   6.5674,   7.7824,  ...,  -1.6341,  -5.1975,  -7.0643]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 7, 2, 2, 2, 0, 7, 4, 1, 4, 0, 3, 5, 3, 1, 8, 0, 8, 3, 4, 1, 1, 3, 0,
        6, 7, 6, 1, 5, 2, 0, 2, 1, 1, 3, 8, 6, 6, 2, 3, 8, 7, 7, 6, 5, 3, 1, 2,
        4, 6, 6, 7, 8, 1, 5, 0, 5, 1, 7, 6, 6, 0, 6, 3, 5, 7, 3, 0, 0, 8, 5, 6,
        6, 7, 8, 1, 8, 1, 2, 3, 5, 1, 4, 8, 5, 2, 5, 3, 0, 4, 3, 2, 7, 2, 8, 0,
        6, 3, 7, 6, 5, 4, 6, 5, 5, 4, 8, 6, 6, 6, 5, 5, 2, 0, 5, 0, 1, 3, 6, 7,
        6, 3, 6, 0, 8, 5, 1, 1]) 
pred: tensor([[-25.8907, -19.7407,  -6.5579,  ...,   9.2236,   9.4367,  10.0803],
        [-26.7884, -17.7491,  -4.7471,  ...,   9.0092,   7.8453,   7.6210],
        [  2.9299,   6.6734,   7.7812,  ...,  -2.4867,  -5.0457,  -4.8106],
        ...,
        [-19.3558,  -7.3629,   0.5193,  ...,   5.0196,   1.8915,  -0.4758],
        [  8.7379,  10.6431,   8.7017,  ...,  -4.0832,  -6.3586,  -6.3540],
        [ 10.9816,  11.3201,   8.0970,  ...,  -4.4407,  -6.1773,  -5.9786]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 7, 5, 0, 2, 6, 3, 3, 1, 3, 4, 1, 6, 2, 0, 8, 8, 3, 7, 7, 7, 4, 7, 5,
        0, 6, 6, 1, 6, 8, 1, 6, 4, 6, 6, 1, 3, 2, 8, 1, 0, 6, 6, 5, 1, 6, 8, 5,
        2, 0, 4, 0, 6, 5, 3, 2, 6, 5, 5, 6, 6, 2, 4, 1, 5, 5, 6, 4, 4, 1, 0, 8,
        6, 5, 1, 8, 5, 6, 8, 3, 4, 1, 2, 5, 3, 2, 3, 1, 2, 4, 0, 3, 0, 0, 4, 0,
        3, 6, 7, 2, 3, 5, 8, 2, 1, 7, 1, 0, 1, 1, 0, 6, 0, 1, 6, 6, 6, 7, 8, 2,
        5, 7, 7, 0, 0, 0, 1, 6]) 
pred: tensor([[-18.3965,  -4.9230,   2.4061,  ...,   3.9190,   0.8298,  -2.2376],
        [-25.4996, -17.0169,  -4.7829,  ...,   9.0098,   8.4582,   7.2859],
        [-22.2964, -10.4345,  -0.6645,  ...,   6.5552,   4.0185,   1.4901],
        ...,
        [ 19.5897,  14.4576,  10.6162,  ...,  -6.8998,  -7.7661,  -5.2934],
        [  5.9283,  10.3880,  10.1092,  ...,  -3.9392,  -6.8047,  -7.3233],
        [-22.7182, -14.4225,  -3.7585,  ...,   7.6075,   6.4278,   5.3920]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 7, 7, 1, 8, 0, 2, 2, 7, 7, 1, 0, 6, 4, 1, 2, 1, 1, 3, 8, 2, 2, 2, 2,
        4, 1, 8, 3, 3, 4, 0, 1, 4, 1, 3, 0, 2, 1, 2, 6, 8, 2, 8, 7, 2, 2, 5, 7,
        5, 7, 1, 4, 0, 3, 3, 1, 7, 0, 8, 3, 2, 7, 2, 4, 0, 8, 3, 3, 7, 0, 1, 5,
        6, 0, 1, 6, 0, 4, 2, 5, 6, 3, 7, 2, 4, 5, 3, 3, 1, 8, 1, 8, 0, 4, 6, 8,
        7, 2, 4, 8, 2, 0, 6, 7, 6, 4, 1, 6, 5, 5, 7, 4, 5, 1, 8, 5, 0, 8, 7, 4,
        4, 2, 8, 5, 2, 8, 6, 1]) 
pred: tensor([[ 19.1122,  15.2146,  10.8966,  ...,  -6.9447,  -7.7291,  -6.0702],
        [-29.4020, -18.2617,  -4.5940,  ...,  10.4037,   9.6759,   7.1542],
        [-28.4863, -17.8672,  -4.6611,  ...,  10.1307,   9.4654,   7.0987],
        ...,
        [-32.0115, -25.8144,  -8.7718,  ...,  12.3130,  14.5802,  14.4899],
        [-23.1829, -11.8793,  -1.6212,  ...,   7.4220,   5.6173,   2.6314],
        [  4.9945,  11.9532,  10.9315,  ...,  -4.1678,  -7.0664,  -9.1832]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 6, 3, 7, 4, 2, 6, 8, 0, 0, 3, 0, 7, 3, 4, 2, 3, 0, 0, 7, 8, 7, 8, 1,
        7, 5, 6, 2, 8, 7, 0, 2, 6, 0, 5, 5, 3, 7, 1, 0, 0, 4, 5, 3, 7, 2, 8, 5,
        8, 3, 5, 8, 0, 7, 1, 3, 6, 3, 3, 7, 8, 2, 5, 3, 2, 2, 8, 8, 5, 5, 3, 0,
        3, 7, 5, 4, 5, 4, 0, 7, 2, 8, 6, 5, 4, 8, 4, 2, 2, 1, 2, 5, 7, 6, 6, 4,
        6, 2, 7, 2, 1, 7, 0, 6, 4, 6, 2, 5, 3, 6, 4, 5, 7, 1, 2, 1, 3, 1, 1, 7,
        7, 5, 1, 8, 1, 1, 7, 0]) 
pred: tensor([[-24.4726, -11.3519,  -1.1929,  ...,   7.2877,   5.3543,   1.5020],
        [-26.9221, -14.0641,  -1.9098,  ...,   8.2336,   6.9738,   3.5350],
        [ -3.8094,   2.4956,   5.0417,  ...,   0.2759,  -2.3482,  -3.7384],
        ...,
        [ 12.6424,  13.0732,  10.1132,  ...,  -5.6009,  -6.7161,  -6.7397],
        [-26.1537, -19.0829,  -6.3847,  ...,   9.6891,  10.5077,   9.4454],
        [ 15.6739,  14.8174,  10.7283,  ...,  -6.0432,  -8.2904,  -7.6970]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 8, 5, 8, 0, 3, 7, 2, 2, 3, 3, 0, 5, 5, 5, 6, 3, 2, 0, 0, 2, 8, 2, 8,
        6, 2, 1, 7, 6, 8, 6, 5, 6, 5, 8, 2, 3, 8, 8, 7, 6, 2, 0, 2, 3, 3, 4, 8,
        6, 4, 5, 3, 7, 8, 1, 8, 5, 6, 6, 5, 6, 3, 2, 6, 0, 8, 6, 4, 1, 3, 3, 4,
        2, 8, 0, 6, 7, 6, 4, 6, 7, 8, 7, 0, 2, 8, 3, 6, 6, 2, 8, 5, 3, 3, 6, 0,
        1, 3, 6, 8, 0, 6, 1, 7, 5, 8, 7, 8, 7, 1, 1, 2, 4, 0, 6, 4, 3, 0, 5, 8,
        7, 2, 1, 7, 5, 1, 2, 8]) 
pred: tensor([[ -2.4185,   5.7771,   7.3748,  ...,  -1.0390,  -3.6490,  -6.1365],
        [-30.0068, -25.4663,  -9.6811,  ...,  11.5865,  15.1041,  15.5485],
        [-17.6284,  -7.4619,   0.2786,  ...,   5.0096,   3.2898,   0.5016],
        ...,
        [  4.8588,  11.0993,  10.0296,  ...,  -3.8234,  -7.0937,  -8.7006],
        [ -8.3996,   6.9834,  10.0539,  ...,  -0.6577,  -4.9956, -10.0681],
        [-37.5047, -32.9005, -12.8849,  ...,  14.6955,  19.6207,  20.6130]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 6, 0, 0, 0, 3, 5, 6, 0, 0, 4, 2, 2, 1, 3, 7, 2, 4, 3, 0, 3, 7, 0, 4,
        3, 5, 4, 4, 8, 2, 1, 6, 1, 6, 6, 8, 6, 1, 4, 1, 2, 3, 5, 4, 5, 6, 7, 6,
        6, 4, 8, 3, 7, 1, 2, 8, 6, 6, 6, 0, 2, 3, 4, 5, 8, 3, 4, 6, 5, 0, 2, 1,
        5, 2, 4, 8, 3, 0, 8, 8, 0, 2, 3, 7, 5, 1, 1, 0, 3, 7, 2, 5, 6, 0, 3, 8,
        0, 3, 6, 3, 1, 0, 7, 3, 2, 2, 7, 8, 2, 8, 3, 1, 0, 0, 0, 6, 5, 4, 8, 5,
        8, 6, 5, 8, 1, 1, 7, 6]) 
pred: tensor([[-30.2555, -26.6170, -10.9203,  ...,  11.6730,  14.9935,  16.8749],
        [-28.4044, -19.0726,  -6.0644,  ...,   9.0841,   9.0397,   8.9705],
        [ 19.8076,  15.7882,  11.8780,  ...,  -7.1011,  -8.0939,  -6.9258],
        ...,
        [ 10.6492,  10.9234,  10.4364,  ...,  -4.7097,  -5.9527,  -5.6814],
        [-32.3171, -26.6281, -10.0591,  ...,  12.1786,  14.4384,  15.4690],
        [-25.7818, -13.6787,  -3.2918,  ...,   7.6239,   6.5147,   4.1037]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 2, 0, 3, 3, 5, 2, 6, 4, 4, 8, 0, 0, 8, 7, 3, 2, 0, 4, 6, 1, 0, 0, 5,
        1, 3, 1, 3, 4, 1, 8, 8, 5, 0, 6, 2, 1, 1, 5, 2, 6, 2, 3, 5, 1, 8, 8, 8,
        8, 4, 1, 2, 0, 6, 2, 5, 8, 4, 4, 8, 0, 1, 1, 7, 6, 7, 1, 4, 0, 8, 8, 4,
        8, 6, 8, 0, 0, 3, 3, 1, 3, 6, 5, 6, 0, 0, 6, 1, 6, 7, 2, 1, 2, 6, 2, 2,
        2, 4, 4, 4, 1, 4, 2, 6, 0, 4, 1, 0, 0, 2, 8, 6, 4, 1, 6, 6, 4, 0, 0, 5,
        2, 4, 3, 6, 6, 8, 1, 7]) 
pred: tensor([[-25.3943, -13.6364,  -3.4542,  ...,   7.7302,   5.8488,   4.1621],
        [ -1.5560,   3.7397,   5.6101,  ...,  -0.7062,  -3.7254,  -4.2318],
        [ 16.6021,  16.2661,  11.8751,  ...,  -7.1024, -11.2216, -10.1199],
        ...,
        [-29.6713, -25.4895, -11.2094,  ...,  11.2372,  13.3229,  15.7333],
        [  6.0534,  11.7726,  10.6677,  ...,  -4.4008,  -8.0578,  -9.5370],
        [-25.3215, -16.1030,  -5.4856,  ...,   8.1719,   7.4935,   7.0711]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 7, 4, 0, 4, 3, 2, 6, 4, 1, 1, 3, 8, 6, 0, 4, 7, 4, 6, 1, 3, 1, 2, 4,
        7, 2, 1, 2, 5, 5, 6, 4, 5, 8, 8, 0, 1, 4, 6, 8, 3, 2, 5, 7, 2, 0, 6, 4,
        3, 4, 5, 4, 1, 4, 6, 5, 0, 1, 0, 1, 6, 3, 0, 0, 7, 8, 2, 2, 1, 4, 6, 4,
        7, 6, 6, 0, 3, 4, 8, 5, 0, 5, 6, 5, 8, 3, 4, 7, 0, 8, 7, 2, 2, 3, 0, 4,
        7, 6, 0, 2, 3, 7, 7, 0, 2, 0, 4, 5, 4, 6, 5, 7, 8, 4, 4, 4, 3, 5, 1, 2,
        5, 2, 5, 0, 5, 7, 3, 6]) 
pred: tensor([[-26.0994, -11.1908,  -2.1392,  ...,   7.5022,   3.5953,   1.1107],
        [-24.5357, -15.5880,  -6.1058,  ...,   8.4734,   6.9180,   6.3449],
        [-14.8370,  -4.1895,   2.6929,  ...,   3.1835,  -0.3187,  -1.5137],
        ...,
        [-35.5080, -24.3835, -10.3363,  ...,  12.8148,  11.2594,  11.0874],
        [ -3.3325,   3.2014,   4.8833,  ...,  -0.2635,  -2.9451,  -4.0372],
        [-25.1874, -12.4761,  -3.5643,  ...,   8.0221,   4.6892,   2.2643]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 8, 5, 8, 8, 0, 5, 7, 0, 6, 4, 7, 0, 7, 7, 0, 8, 7, 7, 6, 1, 6, 5, 4,
        8, 7, 8, 8, 6, 0, 8, 0, 8, 8, 4, 6, 7, 1, 3, 1, 6, 6, 4, 2, 3, 1, 8, 6,
        4, 2, 3, 0, 3, 5, 4, 0, 6, 6, 4, 3, 7, 0, 2, 1, 1, 4, 1, 7, 1, 3, 6, 2,
        6, 8, 4, 8, 0, 8, 1, 8, 0, 0, 2, 1, 3, 2, 7, 6, 1, 6, 1, 2, 8, 5, 0, 0,
        1, 8, 8, 6, 1, 1, 4, 7, 0, 4, 6, 8, 7, 1, 8, 8, 1, 6, 5, 7, 8, 5, 4, 1,
        3, 0, 0, 8, 6, 6, 8, 2]) 
pred: tensor([[-18.1524,   3.6885,   8.5893,  ...,   1.5504,  -4.1703, -11.1055],
        [-27.0587, -22.8205, -11.0083,  ...,  10.4985,  11.1499,  13.6713],
        [-24.7115, -10.4479,  -1.9477,  ...,   6.9469,   3.2066,   0.6728],
        ...,
        [-21.1294, -13.2259,  -4.2473,  ...,   7.1049,   5.0114,   5.0839],
        [-32.1729, -27.2566, -13.2102,  ...,  12.5800,  13.3821,  16.4012],
        [ -3.2064,   7.1613,   7.9882,  ...,  -0.9802,  -6.2435,  -9.0698]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 5, 1, 4, 6, 6, 8, 2, 6, 4, 0, 1, 8, 0, 4, 2, 7, 3, 7, 4, 7, 0, 1, 3,
        6, 8, 3, 8, 6, 6, 7, 6, 1, 1, 0, 5, 5, 5, 4, 3, 1, 1, 5, 8, 0, 0, 3, 2,
        4, 3, 0, 6, 4, 0, 0, 2, 3, 4, 6, 5, 6, 4, 3, 3, 0, 2, 7, 4, 4, 5, 6, 0,
        5, 8, 5, 2, 6, 2, 6, 6, 5, 5, 6, 2, 3, 0, 8, 0, 4, 6, 2, 6, 0, 7, 7, 4,
        0, 8, 2, 6, 6, 8, 7, 2, 0, 0, 3, 3, 2, 1, 4, 1, 4, 6, 0, 6, 1, 8, 4, 5,
        7, 3, 8, 2, 1, 2, 0, 3]) 
pred: tensor([[-21.6781, -12.4377,  -3.0921,  ...,   7.5004,   5.4521,   4.1256],
        [-19.6030,  -9.2230,  -1.8354,  ...,   6.3570,   2.6177,   1.2234],
        [  8.8410,  14.8281,  13.7406,  ...,  -6.1227, -10.0535, -11.5977],
        ...,
        [ -2.7359,   8.0221,   8.4395,  ...,  -1.4762,  -7.0284, -10.0952],
        [ 19.4046,  16.6615,  11.8754,  ...,  -6.8922,  -9.5993,  -9.0339],
        [-11.4874,   2.3751,   5.9894,  ...,   0.9570,  -4.1225,  -7.8018]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 6, 7, 1, 5, 2, 5, 0, 6, 1, 1, 0, 8, 6, 7, 7, 2, 1, 7, 1, 5, 3, 6, 1,
        3, 1, 1, 7, 3, 6, 4, 7, 7, 6, 5, 0, 8, 0, 7, 8, 2, 3, 6, 4, 8, 5, 5, 2,
        8, 5, 6, 6, 0, 6, 8, 0, 6, 5, 6, 4, 4, 0, 3, 2, 6, 2, 4, 8, 7, 1, 1, 8,
        8, 1, 1, 6, 0, 5, 5, 2, 0, 3, 3, 6, 3, 2, 0, 7, 0, 4, 4, 0, 3, 4, 8, 7,
        2, 4, 4, 4, 0, 4, 0, 4, 7, 4, 0, 0, 0, 4, 8, 0, 0, 6, 2, 8, 1, 0, 0, 4,
        4, 6, 0, 2, 8, 8, 1, 0]) 
pred: tensor([[-29.1367, -14.8506,  -3.6430,  ...,   9.0276,   7.5097,   4.4004],
        [-23.0885, -14.0568,  -3.7531,  ...,   7.7989,   7.1361,   6.3118],
        [-37.9751, -25.4649,  -9.7635,  ...,  13.0477,  13.5000,  12.3872],
        ...,
        [-35.8079, -29.5551, -13.4750,  ...,  13.8923,  16.9001,  18.3305],
        [  7.3919,  13.4898,  12.4973,  ...,  -4.2782,  -8.0776, -10.7045],
        [ 19.7232,  17.7791,  13.4458,  ...,  -7.2464,  -9.6337,  -9.8656]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 2, 7, 2, 4, 2, 1, 3, 8, 3, 5, 3, 4, 0, 2, 1, 1, 5, 2, 7, 0, 4, 1, 7,
        1, 8, 1, 8, 5, 8, 1, 4, 0, 5, 6, 5, 5, 6, 6, 2, 8, 7, 7, 5, 7, 3, 1, 8,
        6, 0, 2, 4, 7, 7, 7, 8, 2, 7, 2, 4, 5, 2, 7, 0, 2, 5, 5, 0, 7, 7, 6, 6,
        4, 0, 6, 3, 1, 2, 7, 8, 2, 7, 5, 8, 1, 5, 0, 6, 3, 0, 7, 8, 4, 0, 0, 0,
        2, 3, 8, 2, 5, 5, 4, 4, 3, 4, 6, 8, 5, 5, 1, 5, 1, 1, 4, 4, 3, 0, 8, 5,
        0, 2, 7, 2, 8, 0, 1, 0]) 
pred: tensor([[ 20.1632,  17.2895,  13.4279,  ...,  -7.5973,  -9.3735,  -8.8075],
        [ -2.7782,   7.7851,   9.3604,  ...,  -0.7881,  -6.0929, -10.3570],
        [-33.6022, -21.9872,  -8.1256,  ...,  11.7570,  12.4752,  10.7511],
        ...,
        [ 21.3795,  18.5582,  14.2427,  ...,  -7.8281, -10.1537,  -9.8998],
        [  8.6192,  13.9133,  13.4840,  ...,  -5.3165,  -8.6205, -10.6050],
        [ 20.2967,  18.3470,  15.3284,  ...,  -8.5203, -10.8275,  -9.9946]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 2, 2, 6, 7, 4, 0, 5, 6, 1, 2, 6, 4, 1, 1, 7, 7, 7, 3, 8, 5, 5, 2, 8,
        1, 3, 0, 7, 5, 2, 5, 2, 7, 2, 4, 4, 1, 2, 3, 1, 4, 7, 4, 3, 3, 3, 2, 3,
        5, 1, 2, 7, 6, 2, 2, 6, 3, 4, 6, 4, 1, 1, 8, 2, 7, 4, 3, 7, 3, 2, 5, 7,
        1, 4, 8, 6, 0, 4, 6, 6, 0, 6, 5, 6, 7, 6, 6, 0, 5, 0, 0, 8, 4, 4, 6, 2,
        5, 1, 4, 8, 5, 8, 2, 1, 8, 3, 8, 4, 7, 3, 6, 4, 0, 8, 1, 7, 8, 6, 0, 6,
        7, 3, 5, 5, 5, 8, 2, 6]) 
pred: tensor([[  0.5034,   8.8234,  10.9470,  ...,  -3.5826,  -5.6578,  -7.5579],
        [ -3.4846,   5.8660,   9.5255,  ...,  -1.2929,  -5.1266,  -7.2668],
        [ -2.5397,   8.4646,  11.8420,  ...,  -2.6417,  -6.9136,  -9.3680],
        ...,
        [-35.7911, -28.7268, -12.8358,  ...,  13.2558,  16.9655,  17.7133],
        [ -2.0670,   8.0658,  10.1425,  ...,  -1.8551,  -6.7349,  -9.6267],
        [-30.6366, -16.8284,  -5.5074,  ...,   9.5470,   8.7861,   5.5735]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 0, 4, 2, 2, 3, 6, 7, 0, 1, 1, 4, 8, 5, 6, 5, 5, 3, 1, 1, 6, 5, 6, 1,
        4, 2, 2, 0, 6, 8, 2, 5, 1, 3, 4, 4, 7, 0, 1, 6, 5, 6, 3, 2, 1, 2, 6, 8,
        1, 1, 0, 6, 4, 3, 2, 0, 2, 0, 2, 0, 2, 6, 8, 8, 2, 8, 0, 7, 6, 0, 0, 6,
        0, 3, 3, 7, 5, 6, 2, 0, 6, 0, 2, 8, 2, 1, 1, 2, 1, 2, 3, 6, 8, 6, 5, 1,
        0, 3, 3, 6, 8, 7, 4, 2, 2, 5, 7, 6, 5, 0, 3, 5, 0, 3, 3, 5, 7, 8, 1, 5,
        1, 0, 7, 1, 2, 6, 6, 2]) 
pred: tensor([[ -0.1874,   8.7135,  10.6941,  ...,  -2.2142,  -7.1640,  -9.6042],
        [ 23.0667,  19.1922,  14.2831,  ...,  -8.8099, -12.8287, -10.5635],
        [-19.6926,  -1.2908,   5.6882,  ...,   1.9663,  -2.5859,  -6.7311],
        ...,
        [-23.4419, -13.5238,  -2.8405,  ...,   6.8952,   6.4135,   5.4457],
        [-29.0063, -14.7533,  -3.6776,  ...,   9.0374,   7.3778,   3.6675],
        [  4.8174,  10.2940,  11.5891,  ...,  -3.9894,  -7.5535,  -8.4348]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 5, 1, 1, 8, 3, 3, 7, 5, 2, 2, 6, 1, 6, 7, 8, 1, 0, 8, 1, 2, 8, 4, 5,
        7, 4, 1, 6, 1, 0, 4, 3, 6, 0, 1, 0, 5, 1, 2, 3, 1, 1, 4, 4, 8, 1, 2, 1,
        4, 4, 8, 5, 5, 3, 6, 4, 1, 3, 3, 6, 8, 7, 7, 2, 5, 7, 4, 3, 0, 1, 3, 3,
        1, 3, 2, 5, 7, 7, 6, 5, 1, 8, 2, 1, 5, 0, 8, 5, 3, 7, 1, 8, 4, 7, 0, 8,
        0, 8, 1, 2, 6, 3, 2, 1, 1, 4, 8, 5, 5, 2, 6, 3, 1, 5, 4, 7, 3, 7, 7, 7,
        2, 2, 7, 0, 8, 6, 8, 6]) 
pred: tensor([[-21.2840,  -7.5447,   0.6439,  ...,   5.6842,   2.2500,  -0.9452],
        [-25.2708,  -9.1861,   0.6196,  ...,   6.6201,   2.2209,  -1.0081],
        [ 10.7073,  14.4802,  12.9832,  ...,  -5.9400, -10.2288, -10.4496],
        ...,
        [-26.6175, -14.2594,  -4.1769,  ...,   7.7673,   6.3070,   4.1298],
        [-36.1469, -28.8629, -13.1241,  ...,  13.1762,  16.1133,  17.3590],
        [-31.9442, -16.9432,  -4.6618,  ...,   9.2449,   7.5715,   4.7918]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 0, 8, 0, 7, 0, 4, 5, 1, 4, 6, 6, 0, 1, 6, 3, 2, 5, 5, 7, 7, 4, 3, 5,
        0, 0, 1, 1, 6, 7, 8, 6, 1, 3, 0, 7, 2, 3, 1, 0, 1, 4, 7, 6, 3, 7, 5, 0,
        3, 7, 4, 5, 5, 1, 4, 2, 7, 0, 6, 0, 0, 0, 4, 3, 1, 1, 0, 1, 7, 4, 4, 1,
        4, 5, 5, 1, 6, 5, 3, 7, 7, 8, 2, 5, 5, 4, 0, 2, 0, 5, 6, 8, 1, 2, 6, 4,
        5, 7, 7, 0, 3, 4, 3, 6, 4, 7, 8, 6, 5, 6, 4, 4, 5, 6, 2, 1, 0, 8, 4, 6,
        8, 6, 5, 5, 1, 6, 2, 3]) 
pred: tensor([[-40.9732, -29.1765, -12.2505,  ...,  14.1004,  16.1693,  15.0641],
        [ 24.7237,  20.3924,  14.3936,  ...,  -9.4821, -12.4218, -10.2887],
        [-37.5062, -30.0087, -13.8326,  ...,  13.9135,  17.2919,  17.8570],
        ...,
        [-33.1705, -20.5613,  -7.3182,  ...,  11.8132,  10.6448,   7.4211],
        [  1.9298,   7.2773,   7.8651,  ...,  -2.3115,  -7.2700,  -7.4797],
        [-11.6100,   4.3612,   8.5137,  ...,  -0.3471,  -5.9396,  -9.9887]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 3, 5, 2, 7, 5, 3, 1, 0, 5, 4, 7, 6, 7, 0, 3, 8, 3, 1, 0, 7, 8, 5, 6,
        4, 2, 6, 0, 5, 4, 1, 6, 4, 3, 5, 6, 3, 2, 7, 7, 3, 4, 8, 2, 7, 0, 3, 0,
        3, 7, 3, 5, 7, 4, 6, 6, 8, 1, 5, 7, 0, 7, 2, 2, 4, 7, 2, 6, 6, 0, 8, 1,
        0, 1, 4, 2, 4, 3, 5, 6, 2, 8, 5, 4, 3, 1, 6, 4, 0, 1, 4, 7, 1, 8, 2, 7,
        4, 7, 4, 7, 0, 6, 6, 1, 0, 6, 6, 2, 1, 4, 6, 0, 2, 3, 6, 4, 6, 4, 4, 2,
        7, 7, 7, 3, 8, 6, 1, 7]) 
pred: tensor([[-26.6087,  -7.7970,   0.6469,  ...,   6.9521,   2.4948,  -3.5606],
        [ -9.9059,   3.0981,   6.2980,  ...,   0.4859,  -5.2683,  -8.1409],
        [-31.0924, -12.8833,  -2.0745,  ...,   8.4314,   5.2126,   0.2288],
        ...,
        [-38.8516, -19.7243,  -5.9192,  ...,  12.0726,   9.3952,   4.2117],
        [ 11.4362,  15.4978,  11.9578,  ...,  -5.7843, -10.5809, -11.6179],
        [-37.4262, -27.3892, -11.9407,  ...,  14.0649,  15.7180,  13.8625]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 0, 8, 5, 0, 5, 7, 3, 2, 8, 6, 2, 2, 1, 2, 8, 8, 3, 0, 8, 4, 6, 1, 4,
        2, 3, 7, 6, 2, 4, 8, 5, 5, 0, 6, 5, 8, 2, 3, 0, 5, 5, 8, 8, 3, 2, 2, 5,
        0, 7, 7, 8, 1, 7, 3, 2, 7, 8, 2, 4, 6, 1, 7, 2, 6, 6, 8, 8, 6, 8, 0, 2,
        3, 8, 3, 8, 8, 5, 8, 6, 8, 2, 5, 0, 1, 0, 5, 8, 1, 3, 2, 3, 2, 1, 5, 2,
        1, 1, 2, 7, 3, 0, 1, 6, 5, 3, 1, 2, 5, 8, 0, 6, 7, 4, 4, 7, 0, 6, 3, 7,
        8, 3, 1, 6, 4, 8, 8, 0]) 
pred: tensor([[-30.1985, -17.5690,  -5.6569,  ...,  10.0475,   9.6433,   6.0579],
        [ 22.2155,  20.6159,  14.0251,  ...,  -8.0577, -12.4517, -12.2964],
        [-39.8375, -34.1406, -16.0966,  ...,  15.8288,  21.1057,  21.5150],
        ...,
        [-43.7587, -35.9043, -16.2043,  ...,  16.7210,  21.8142,  21.7720],
        [-39.9719, -33.5439, -15.6133,  ...,  15.7601,  20.8051,  20.7260],
        [ 24.7351,  20.8216,  13.6090,  ...,  -8.9709, -12.2557, -10.9622]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 0, 6, 6, 3, 6, 2, 2, 3, 1, 7, 3, 7, 1, 7, 7, 1, 8, 7, 7, 2, 4, 6, 0,
        7, 2, 6, 8, 5, 0, 0, 5, 4, 2, 1, 7, 5, 3, 8, 3, 3, 7, 8, 3, 1, 3, 6, 3,
        6, 0, 1, 8, 2, 5, 6, 5, 0, 3, 5, 4, 4, 5, 4, 7, 0, 8, 3, 5, 6, 6, 3, 7,
        5, 8, 1, 8, 2, 6, 6, 3, 6, 0, 5, 5, 0, 8, 7, 7, 0, 4, 8, 3, 6, 6, 4, 6,
        5, 0, 4, 7, 6, 4, 1, 8, 5, 2, 0, 3, 4, 6, 8, 8, 3, 4, 4, 6, 3, 0, 7, 6,
        1, 8, 3, 4, 2, 5, 4, 0]) 
pred: tensor([[-33.1021, -20.4378,  -7.3848,  ...,  10.7565,  10.4574,   7.9679],
        [ 23.8367,  21.1523,  14.1074,  ...,  -8.8773, -12.2640, -11.8094],
        [-28.6233, -19.7368,  -6.6378,  ...,  10.1618,  11.7033,  10.3860],
        ...,
        [-33.5743, -14.3218,  -1.8105,  ...,   9.3961,   5.9996,   1.0127],
        [-12.8348,  -1.9342,   4.4867,  ...,   3.0515,   0.5300,  -2.4891],
        [ 23.6109,  22.2539,  15.4921,  ...,  -8.6923, -12.8404, -13.3755]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 8, 4, 6, 8, 7, 7, 7, 0, 8, 6, 4, 7, 6, 3, 2, 1, 4, 0, 0, 2, 8, 4, 7,
        3, 2, 5, 7, 0, 2, 7, 4, 2, 6, 6, 8, 0, 5, 4, 8, 2, 3, 3, 8, 1, 0, 0, 4,
        1, 4, 7, 7, 3, 3, 6, 4, 3, 4, 5, 7, 6, 0, 3, 3, 0, 3, 8, 5, 1, 0, 0, 7,
        8, 5, 7, 3, 8, 2, 7, 1, 1, 0, 0, 6, 5, 6, 5, 7, 5, 3, 3, 7, 7, 6, 8, 7,
        7, 2, 6, 1, 2, 5, 2, 2, 3, 2, 8, 0, 8, 7, 5, 8, 7, 4, 1, 5, 3, 5, 0, 4,
        3, 5, 5, 6, 5, 3, 1, 3]) 
pred: tensor([[-2.4008e+01, -1.5018e+01, -3.2709e+00,  ...,  7.7622e+00,
          6.6010e+00,  6.2849e+00],
        [-3.9648e+01, -3.3951e+01, -1.5251e+01,  ...,  1.5087e+01,
          1.9227e+01,  2.1621e+01],
        [-2.2446e+01, -5.0657e+00,  2.4341e+00,  ...,  4.8332e+00,
          6.3896e-02, -4.5250e+00],
        ...,
        [-9.2585e+00,  6.1708e+00,  9.8213e+00,  ...,  6.6473e-01,
         -6.4409e+00, -1.1928e+01],
        [ 1.1835e+01,  1.8557e+01,  1.5867e+01,  ..., -6.9773e+00,
         -1.3126e+01, -1.5050e+01],
        [-4.0887e+00,  3.3894e+00,  6.2038e+00,  ..., -1.8469e-02,
         -5.2707e+00, -6.2575e+00]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 1, 1, 8, 8, 4, 7, 8, 6, 4, 6, 6, 3, 2, 4, 1, 6, 4, 3, 4, 4, 0, 7, 6,
        1, 7, 0, 5, 0, 1, 2, 1, 3, 0, 4, 7, 1, 4, 6, 2, 7, 3, 6, 0, 5, 7, 0, 3,
        2, 0, 1, 2, 4, 8, 5, 5, 3, 8, 5, 5, 0, 7, 8, 6, 3, 2, 5, 8, 2, 3, 7, 5,
        0, 7, 5, 4, 0, 3, 3, 6, 8, 7, 2, 0, 1, 0, 8, 4, 5, 7, 1, 6, 0, 0, 0, 0,
        8, 2, 6, 8, 2, 6, 1, 1, 6, 7, 1, 7, 2, 2, 6, 8, 5, 0, 8, 1, 7, 2, 8, 0,
        4, 0, 3, 6, 0, 1, 3, 0]) 
pred: tensor([[-34.8702, -16.3145,  -2.6427,  ...,  10.3163,   6.9438,   2.3112],
        [ 16.8139,  19.8337,  16.5016,  ...,  -7.6463, -13.3168, -14.4653],
        [ 14.6169,  19.6653,  16.0322,  ...,  -7.6646, -11.4448, -13.8216],
        ...,
        [ 14.5582,  19.8278,  15.8560,  ...,  -7.5845, -12.6402, -14.7879],
        [-12.1127,   5.6795,  10.3010,  ...,   0.5543,  -6.1773, -12.1812],
        [ 25.3840,  23.8457,  16.9029,  ..., -10.1112, -13.0638, -13.6338]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 3, 4, 4, 3, 7, 3, 5, 3, 6, 8, 4, 7, 2, 6, 3, 4, 1, 0, 5, 5, 7, 5, 1,
        2, 4, 1, 4, 2, 6, 2, 0, 0, 4, 2, 0, 0, 8, 3, 6, 6, 0, 3, 5, 7, 6, 4, 2,
        7, 8, 6, 7, 0, 8, 7, 8, 6, 3, 2, 4, 7, 7, 6, 5, 5, 7, 5, 5, 3, 0, 5, 6,
        2, 2, 8, 8, 3, 7, 7, 3, 0, 3, 0, 2, 1, 4, 2, 2, 4, 1, 3, 5, 5, 5, 4, 6,
        5, 3, 1, 4, 8, 6, 8, 0, 6, 1, 3, 2, 0, 6, 0, 4, 8, 5, 2, 0, 3, 6, 5, 8,
        2, 6, 1, 4, 5, 8, 5, 1]) 
pred: tensor([[-47.0882, -37.6562, -17.0121,  ...,  16.7036,  21.4820,  23.0570],
        [-11.3570,   5.6200,  10.5198,  ...,   0.7156,  -5.8174, -11.8207],
        [-19.5076,   0.1424,   6.7388,  ...,   4.1930,  -2.5662, -10.4223],
        ...,
        [-41.1962, -32.7305, -14.6906,  ...,  14.6128,  18.6718,  19.9805],
        [-27.1032, -13.2714,  -2.0505,  ...,   7.5157,   5.5129,   2.8961],
        [ 13.7325,  16.4779,  14.2566,  ...,  -6.4650, -10.2714, -11.5520]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 6, 6, 5, 6, 0, 0, 3, 6, 8, 4, 1, 0, 1, 6, 0, 7, 4, 1, 4, 0, 2, 8, 3,
        0, 3, 8, 4, 2, 0, 4, 3, 0, 2, 4, 2, 6, 4, 1, 8, 6, 0, 0, 7, 5, 5, 4, 0,
        8, 5, 7, 2, 4, 5, 3, 4, 1, 3, 2, 8, 0, 8, 8, 0, 7, 1, 8, 0, 7, 2, 0, 7,
        8, 5, 1, 2, 8, 7, 2, 2, 8, 2, 5, 8, 0, 7, 1, 5, 4, 5, 5, 2, 4, 8, 5, 1,
        1, 7, 4, 0, 6, 0, 7, 3, 0, 1, 2, 6, 4, 0, 5, 3, 4, 8, 5, 4, 7, 1, 3, 2,
        1, 7, 6, 7, 8, 7, 4, 2]) 
pred: tensor([[-17.9170,   4.9310,  12.0126,  ...,   0.9743,  -5.6302, -12.9463],
        [-39.4191, -21.4722,  -5.9933,  ...,  12.1861,  11.0436,   6.8423],
        [-34.3588, -17.9459,  -4.3862,  ...,  10.1970,   8.5737,   5.4278],
        ...,
        [-41.2152, -28.9532, -11.5111,  ...,  14.1245,  15.8382,  15.0188],
        [-23.6160,  -3.1644,   5.7406,  ...,   3.4596,  -1.2414,  -6.4594],
        [ -2.1270,  10.1396,  12.0204,  ...,  -3.0991,  -7.7707, -11.5121]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 2, 5, 4, 3, 2, 6, 0, 0, 8, 2, 3, 5, 3, 6, 8, 4, 7, 2, 1, 3, 3, 6, 5,
        8, 7, 2, 8, 8, 1, 5, 8, 6, 2, 7, 1, 8, 6, 0, 4, 0, 5, 8, 2, 8, 5, 1, 4,
        1, 6, 7, 4, 2, 6, 7, 1, 3, 2, 4, 4, 8, 3, 7, 2, 8, 8, 1, 5, 4, 8, 4, 8,
        5, 7, 6, 0, 4, 0, 3, 5, 3, 7, 7, 6, 1, 6, 6, 5, 7, 6, 5, 0, 1, 3, 4, 4,
        5, 5, 5, 6, 8, 6, 3, 3, 7, 1, 8, 3, 7, 6, 3, 7, 1, 0, 1, 3, 8, 3, 8, 1,
        0, 8, 4, 6, 0, 8, 2, 8]) 
pred: tensor([[-33.4370,  -9.8269,   1.9379,  ...,   7.5472,   2.6741,  -3.1811],
        [  1.2099,   9.2094,  11.3890,  ...,  -2.3222,  -7.3377,  -9.8355],
        [-28.5464, -11.5057,  -1.4891,  ...,   8.0202,   4.2100,  -0.5385],
        ...,
        [-44.1026, -36.8180, -18.0299,  ...,  16.2304,  21.0264,  24.1561],
        [  0.7723,   9.6124,  12.1182,  ...,  -2.8047,  -7.6270, -10.3847],
        [-50.6672, -43.1177, -21.6228,  ...,  18.7141,  24.5929,  28.7269]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 0, 4, 8, 0, 5, 5, 0, 0, 8, 0, 2, 6, 1, 6, 6, 5, 5, 0, 5, 4, 3, 1, 8,
        6, 7, 3, 2, 5, 7, 7, 7, 1, 5, 8, 0, 2, 1, 2, 3, 2, 7, 7, 0, 4, 0, 8, 6,
        7, 2, 2, 2, 3, 7, 5, 1, 4, 8, 0, 1, 7, 4, 1, 4, 3, 7, 3, 3, 2, 8, 4, 7,
        5, 7, 3, 5, 2, 2, 1, 0, 4, 0, 7, 0, 8, 8, 3, 6, 1, 3, 5, 3, 8, 3, 2, 5,
        1, 7, 1, 8, 0, 0, 4, 7, 3, 2, 3, 4, 1, 0, 5, 8, 8, 0, 6, 6, 0, 5, 0, 0,
        1, 4, 2, 3, 6, 8, 4, 3]) 
pred: tensor([[ 14.7763,  16.3849,  14.8758,  ...,  -6.0530, -10.3944, -11.8068],
        [ 26.4935,  23.8938,  19.6607,  ..., -10.3245, -15.7199, -15.5627],
        [-16.5841,  -2.9247,   3.8176,  ...,   3.8323,  -0.7927,  -4.6778],
        ...,
        [-51.9960, -42.3086, -21.5569,  ...,  18.8909,  24.2254,  27.2036],
        [-27.2967,  -9.2704,   0.8284,  ...,   7.5546,   2.4838,  -2.2632],
        [-17.9904,   2.8733,   9.7080,  ...,   2.7405,  -5.5142, -13.1775]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 7, 5, 3, 7, 7, 2, 0, 2, 3, 1, 1, 3, 5, 2, 3, 1, 8, 5, 6, 2, 8, 8, 1,
        0, 7, 2, 1, 0, 1, 4, 4, 5, 8, 6, 7, 4, 8, 0, 4, 3, 7, 8, 8, 8, 4, 6, 2,
        5, 0, 4, 3, 3, 7, 1, 1, 6, 1, 0, 4, 1, 8, 7, 3, 5, 6, 6, 7, 7, 0, 2, 4,
        0, 2, 2, 4, 5, 8, 5, 0, 0, 1, 5, 5, 3, 0, 4, 2, 8, 1, 0, 3, 6, 7, 2, 6,
        6, 8, 1, 7, 0, 8, 4, 5, 7, 8, 2, 5, 6, 0, 6, 4, 5, 0, 1, 1, 6, 3, 6, 5,
        7, 6, 1, 8, 6, 0, 8, 4]) 
pred: tensor([[-49.6345, -33.9979, -15.4561,  ...,  17.1382,  19.3515,  17.6827],
        [-39.5051, -26.4780, -11.7632,  ...,  13.7252,  14.6827,  13.1434],
        [-35.7069, -13.2722,  -1.6356,  ...,   9.3812,   5.3573,  -0.8732],
        ...,
        [ 29.4584,  25.0293,  18.9830,  ..., -10.6206, -15.2460, -15.3994],
        [-51.4980, -38.8346, -19.4004,  ...,  18.0939,  22.7089,  23.3338],
        [-27.0154,  -4.7245,   4.5093,  ...,   5.1488,   0.1218,  -6.5823]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 1, 6, 6, 5, 7, 1, 4, 8, 7, 2, 6, 2, 6, 4, 6, 2, 3, 0, 4, 6, 2, 5, 3,
        3, 5, 3, 8, 0, 6, 5, 5, 8, 7, 4, 3, 7, 4, 7, 4, 7, 6, 2, 2, 7, 6, 5, 2,
        3, 4, 7, 6, 4, 7, 2, 8, 4, 1, 6, 5, 3, 8, 1, 7, 1, 4, 8, 1, 3, 6, 3, 8,
        8, 1, 1, 4, 4, 7, 4, 1, 7, 6, 6, 7, 6, 5, 8, 7, 1, 2, 3, 7, 4, 2, 6, 0,
        7, 5, 0, 7, 6, 5, 2, 1, 4, 1, 6, 1, 2, 0, 8, 0, 0, 4, 0, 6, 3, 2, 1, 1,
        5, 2, 1, 4, 2, 3, 2, 3]) 
pred: tensor([[  2.4132,  12.1277,  12.3090,  ...,  -3.2976, -10.4157, -14.1416],
        [ 14.2796,  18.9422,  17.3780,  ...,  -6.4708, -11.5690, -15.1570],
        [-37.9938, -18.9210,  -7.3032,  ...,  11.2907,   9.0955,   4.5539],
        ...,
        [-19.2657,   3.4244,   9.9180,  ...,   2.8784,  -4.6989, -13.8814],
        [ -3.4022,  10.7405,  12.1909,  ...,  -2.2555,  -9.4339, -15.0231],
        [ -8.1263,   1.9430,   6.4958,  ...,   0.8296,  -3.7385,  -5.7465]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 3, 2, 8, 1, 0, 3, 2, 4, 1, 7, 7, 0, 8, 0, 5, 6, 8, 7, 7, 3, 4, 5, 7,
        2, 4, 5, 4, 1, 2, 4, 8, 4, 6, 7, 8, 0, 0, 7, 3, 4, 8, 8, 2, 5, 2, 1, 6,
        7, 8, 6, 7, 5, 1, 1, 1, 5, 3, 3, 5, 3, 0, 7, 4, 5, 4, 2, 1, 8, 1, 5, 0,
        5, 4, 5, 1, 0, 6, 5, 5, 2, 6, 6, 8, 5, 2, 3, 7, 8, 5, 1, 5, 0, 1, 6, 5,
        0, 7, 5, 7, 4, 3, 4, 8, 4, 0, 0, 5, 6, 0, 3, 8, 4, 1, 3, 4, 5, 8, 1, 7,
        8, 3, 3, 3, 0, 5, 2, 4]) 
pred: tensor([[-14.9010,   3.5622,   9.2668,  ...,   1.8240,  -4.9651, -11.0824],
        [-11.4426,   4.0674,   9.0023,  ...,   0.6488,  -5.2726, -10.3851],
        [ -0.6675,  10.9712,  12.3173,  ...,  -1.9848,  -9.9153, -15.0673],
        ...,
        [-32.8519, -14.8148,  -3.0678,  ...,  10.0267,   6.4275,   1.6174],
        [ -5.1043,  11.0794,  12.8998,  ...,  -2.1328, -10.3292, -16.3072],
        [-26.4547,  -7.3681,   0.9476,  ...,   6.9712,   1.3036,  -4.8053]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 0, 6, 8, 6, 2, 8, 1, 5, 7, 4, 8, 2, 5, 0, 2, 0, 5, 6, 6, 8, 0, 1, 8,
        0, 8, 4, 8, 3, 7, 5, 6, 3, 0, 2, 8, 5, 1, 0, 2, 5, 2, 3, 3, 7, 3, 6, 6,
        1, 0, 7, 8, 3, 0, 1, 8, 4, 4, 5, 6, 1, 2, 5, 3, 2, 6, 5, 8, 1, 1, 6, 3,
        6, 4, 5, 1, 1, 1, 3, 3, 8, 1, 2, 8, 6, 2, 2, 4, 4, 8, 8, 6, 5, 5, 8, 1,
        2, 2, 7, 1, 0, 6, 1, 6, 8, 2, 6, 8, 3, 8, 1, 8, 0, 2, 8, 5, 7, 4, 3, 8,
        2, 0, 8, 1, 1, 0, 2, 6]) 
pred: tensor([[-47.4736, -24.7593,  -8.3556,  ...,  13.8559,  11.5677,   7.3955],
        [ 32.4242,  27.1945,  20.7986,  ..., -12.0420, -16.7712, -16.4273],
        [-33.9627, -19.7664,  -8.0664,  ...,  10.5510,   9.1947,   7.4314],
        ...,
        [ 27.5729,  25.3617,  19.9796,  ..., -10.5526, -15.9615, -16.7703],
        [ -0.7944,  12.2149,  14.1335,  ...,  -3.2420,  -8.9819, -13.9391],
        [-42.9618, -19.7915,  -5.3003,  ...,  11.5405,   9.6634,   4.5061]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 1, 2, 7, 6, 2, 7, 4, 0, 6, 4, 3, 6, 8, 0, 8, 5, 7, 4, 0, 4, 2, 1, 8,
        8, 8, 1, 1, 3, 0, 2, 0, 0, 3, 0, 7, 2, 4, 8, 8, 2, 7, 2, 0, 3, 5, 4, 2,
        4, 1, 0, 3, 2, 0, 2, 2, 4, 0, 5, 0, 0, 1, 5, 3, 4, 1, 1, 2, 6, 4, 5, 4,
        7, 8, 2, 0, 1, 6, 7, 4, 8, 6, 6, 8, 6, 3, 3, 7, 8, 4, 3, 2, 1, 0, 3, 6,
        0, 1, 7, 4, 8, 0, 3, 1, 2, 0, 7, 1, 4, 8, 0, 0, 3, 7, 4, 4, 4, 1, 3, 7,
        2, 8, 0, 4, 4, 6, 7, 7]) 
pred: tensor([[-48.6745, -34.7015, -15.9338,  ...,  16.2779,  19.6912,  19.5039],
        [ 15.9974,  19.6928,  17.5169,  ...,  -7.8272, -11.7408, -14.1788],
        [ -6.1744,  11.2992,  15.5006,  ...,  -1.9903,  -9.2010, -15.8908],
        ...,
        [-42.1616, -19.4234,  -5.1574,  ...,  11.1283,   9.4923,   4.4912],
        [-47.6497, -32.9515, -14.6682,  ...,  15.6162,  18.4121,  17.8093],
        [-48.1430, -31.1649, -13.5711,  ...,  15.0819,  17.4196,  15.8823]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 0, 3, 8, 2, 2, 5, 5, 2, 1, 2, 3, 5, 6, 7, 8, 8, 3, 8, 3, 3, 2, 2, 5,
        3, 7, 2, 7, 8, 8, 0, 6, 8, 7, 0, 0, 3, 1, 7, 5, 1, 6, 3, 6, 6, 7, 1, 5,
        5, 6, 3, 7, 6, 0, 0, 3, 7, 6, 3, 5, 1, 8, 4, 0, 5, 4, 3, 2, 0, 7, 3, 0,
        0, 2, 1, 6, 7, 3, 6, 7, 3, 4, 4, 2, 8, 2, 0, 1, 5, 2, 2, 4, 1, 4, 3, 3,
        8, 2, 1, 7, 2, 8, 1, 4, 3, 6, 8, 1, 7, 7, 1, 7, 6, 6, 1, 6, 8, 6, 5, 3,
        1, 4, 7, 4, 2, 7, 1, 4]) 
pred: tensor([[-42.0029, -23.1134,  -7.7979,  ...,  11.7854,  11.3076,   8.6748],
        [ 27.6587,  27.8379,  21.6896,  ..., -11.3879, -16.8660, -19.2431],
        [-23.2667,   2.7307,  11.0775,  ...,   1.5149,  -5.8164, -13.1804],
        ...,
        [-48.9687, -34.3266, -15.3325,  ...,  16.4661,  18.9530,  18.2978],
        [ 23.0293,  24.1663,  19.0929,  ...,  -9.9079, -14.1043, -16.5476],
        [-22.8087,  -1.7261,   5.1438,  ...,   4.6260,  -2.0924,  -9.7556]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 1, 3, 1, 5, 2, 7, 1, 3, 5, 0, 5, 4, 1, 5, 6, 2, 1, 3, 2, 6, 7, 6, 6,
        0, 1, 4, 5, 0, 2, 0, 5, 8, 4, 8, 7, 4, 7, 3, 0, 2, 5, 2, 8, 0, 1, 8, 1,
        5, 7, 4, 2, 2, 5, 8, 5, 6, 2, 5, 8, 7, 2, 0, 0, 3, 3, 8, 8, 1, 4, 6, 3,
        0, 4, 1, 8, 5, 3, 6, 7, 6, 7, 4, 7, 0, 1, 1, 5, 0, 7, 2, 4, 2, 6, 8, 2,
        6, 3, 3, 6, 4, 3, 5, 3, 2, 6, 3, 3, 8, 1, 5, 0, 0, 3, 7, 4, 8, 0, 5, 1,
        4, 8, 1, 7, 3, 0, 0, 3]) 
pred: tensor([[ -7.1099,  10.6013,  14.2969,  ...,  -1.7470,  -9.2570, -15.8769],
        [ 10.7586,  22.3137,  22.4465,  ...,  -7.7008, -15.5896, -20.5935],
        [ -8.7517,   3.4261,   9.2255,  ...,   0.8261,  -3.7983,  -8.1492],
        ...,
        [ 34.0698,  31.7999,  23.8667,  ..., -13.3192, -17.7611, -20.0963],
        [ 33.2310,  29.1058,  21.6324,  ..., -12.3338, -16.2760, -17.3876],
        [-19.3680,   2.4525,   9.8124,  ...,   3.1010,  -5.5830, -13.8148]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 3, 8, 5, 7, 6, 7, 4, 0, 1, 2, 8, 2, 0, 4, 5, 8, 6, 1, 8, 0, 8, 5, 7,
        2, 0, 3, 1, 8, 7, 0, 0, 2, 6, 2, 0, 2, 6, 4, 6, 3, 3, 0, 2, 5, 4, 7, 1,
        1, 7, 7, 6, 5, 0, 6, 0, 6, 5, 1, 5, 7, 5, 1, 1, 1, 1, 0, 7, 2, 2, 0, 5,
        5, 8, 1, 8, 3, 1, 7, 5, 5, 8, 8, 2, 3, 4, 4, 7, 0, 1, 0, 3, 2, 6, 0, 7,
        0, 1, 5, 4, 6, 4, 2, 0, 6, 6, 3, 5, 6, 0, 5, 6, 4, 5, 0, 1, 0, 0, 6, 8,
        2, 1, 0, 5, 4, 4, 7, 6]) 
pred: tensor([[-47.6616, -36.9591, -18.4445,  ...,  17.4200,  22.4657,  22.6698],
        [ -4.2855,   7.3895,  10.7166,  ...,  -0.9567,  -5.5621, -10.3024],
        [-49.9345, -38.3106, -18.9745,  ...,  18.1221,  23.2486,  23.2350],
        ...,
        [-16.9185,  -1.9839,   5.6808,  ...,   3.2691,   0.5043,  -4.3226],
        [-45.8860, -28.4084, -11.0145,  ...,  15.1529,  16.0150,  12.7599],
        [-41.2612, -19.0602,  -5.0990,  ...,  11.9898,   9.8956,   3.2064]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 4, 8, 6, 2, 7, 3, 5, 2, 0, 4, 1, 2, 5, 2, 1, 0, 2, 2, 8, 6, 8, 2, 3,
        0, 3, 1, 0, 3, 3, 5, 7, 0, 1, 0, 1, 0, 5, 8, 3, 7, 3, 8, 8, 8, 7, 3, 1,
        8, 2, 6, 3, 3, 3, 2, 2, 5, 7, 8, 2, 4, 0, 2, 4, 0, 6, 2, 7, 4, 2, 5, 8,
        7, 6, 4, 1, 3, 1, 7, 2, 3, 4, 3, 0, 6, 4, 0, 6, 6, 7, 8, 3, 7, 7, 4, 3,
        4, 4, 6, 3, 3, 7, 5, 5, 5, 6, 4, 4, 5, 6, 0, 0, 7, 5, 3, 3, 6, 7, 0, 3,
        0, 1, 0, 0, 5, 3, 0, 0]) 
pred: tensor([[-47.6790, -38.3230, -19.8271,  ...,  18.1258,  22.9089,  24.0920],
        [-19.7025,  -4.1715,   3.2446,  ...,   4.3750,   1.0379,  -3.9493],
        [-56.3190, -45.5355, -23.6125,  ...,  21.1768,  27.3303,  29.0468],
        ...,
        [-14.5799,   5.5968,  10.8145,  ...,   1.7639,  -6.9913, -15.2904],
        [ 34.2316,  31.3540,  23.6319,  ..., -13.2662, -18.3621, -19.8873],
        [ 33.5669,  29.9655,  22.2772,  ..., -12.9913, -16.2687, -17.5079]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 0, 0, 0, 8, 3, 1, 3, 8, 1, 6, 7, 8, 0, 3, 8, 4, 8, 5, 0, 8, 3, 5, 0,
        2, 0, 5, 1, 3, 6, 0, 2, 0, 8, 6, 1, 7, 6, 4, 4, 6, 7, 2, 4, 4, 4, 5, 4,
        7, 4, 6, 5, 1, 1, 0, 8, 3, 1, 8, 8, 2, 8, 8, 1, 6, 6, 8, 1, 6, 7, 5, 6,
        1, 8, 5, 7, 8, 8, 8, 5, 5, 2, 4, 2, 8, 7, 5, 1, 2, 1, 6, 1, 0, 2, 4, 6,
        7, 1, 6, 7, 5, 0, 2, 5, 6, 4, 8, 0, 8, 2, 2, 0, 6, 1, 8, 2, 7, 2, 0, 4,
        7, 2, 6, 3, 2, 7, 5, 6]) 
pred: tensor([[-41.7192, -23.7593,  -9.5764,  ...,  13.7408,  12.0102,   8.1917],
        [ 32.5833,  30.0595,  22.6774,  ..., -12.4281, -18.9495, -20.1935],
        [ 37.6273,  30.5674,  20.7670,  ..., -13.0491, -17.4876, -18.0247],
        ...,
        [-48.4242, -31.1587, -14.3275,  ...,  16.1929,  17.1772,  15.1136],
        [-40.7372, -15.6581,  -1.9199,  ...,  10.8315,   6.0900,  -0.6706],
        [-40.4733, -21.5547,  -8.3683,  ...,  12.9729,  10.7627,   6.3749]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 1, 2, 3, 2, 8, 0, 2, 1, 1, 3, 7, 1, 2, 6, 5, 6, 5, 8, 5, 1, 6, 8, 0,
        2, 4, 5, 3, 2, 2, 7, 2, 4, 8, 2, 8, 7, 8, 1, 0, 2, 5, 2, 2, 3, 6, 3, 5,
        8, 7, 4, 2, 5, 8, 4, 6, 1, 6, 5, 5, 6, 6, 8, 1, 3, 0, 4, 4, 4, 2, 3, 5,
        8, 0, 5, 5, 2, 6, 0, 4, 1, 8, 1, 2, 7, 5, 2, 1, 3, 4, 2, 5, 5, 8, 8, 7,
        6, 6, 8, 6, 0, 7, 1, 6, 7, 1, 6, 3, 2, 1, 0, 5, 4, 0, 8, 1, 6, 2, 2, 0,
        8, 6, 7, 1, 6, 8, 4, 0]) 
pred: tensor([[-18.7537,  -3.9534,   3.8003,  ...,   4.5795,  -0.1740,  -4.6789],
        [ 15.4585,  23.0527,  21.0460,  ...,  -7.9942, -14.5868, -19.9467],
        [ -2.1424,  12.4385,  14.8852,  ...,  -1.1032, -10.4329, -17.9626],
        ...,
        [-60.7037, -48.9912, -26.8126,  ...,  21.9660,  27.9511,  31.4703],
        [-24.1247,  -7.2602,   1.7756,  ...,   5.9254,   0.8027,  -3.2488],
        [ 33.0854,  29.9417,  22.6909,  ..., -12.6363, -19.2240, -20.0846]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 1, 4, 6, 3, 1, 0, 8, 7, 8, 1, 0, 8, 2, 7, 4, 8, 0, 6, 4, 3, 0, 5, 4,
        0, 3, 1, 8, 3, 2, 0, 0, 2, 6, 6, 0, 1, 4, 0, 6, 6, 4, 0, 7, 4, 0, 7, 8,
        3, 4, 7, 0, 1, 8, 5, 1, 3, 0, 8, 7, 7, 7, 8, 5, 2, 3, 1, 2, 4, 7, 0, 7,
        3, 4, 2, 1, 3, 6, 0, 2, 8, 6, 4, 6, 7, 1, 5, 4, 1, 2, 2, 0, 0, 8, 7, 2,
        6, 1, 3, 3, 2, 2, 8, 7, 0, 1, 4, 1, 7, 7, 1, 6, 5, 0, 4, 6, 4, 6, 7, 7,
        8, 5, 4, 6, 2, 2, 5, 7]) 
pred: tensor([[-23.6766,  -9.3296,   0.4273,  ...,   6.2344,   3.6015,   0.1067],
        [ 15.9260,  22.3724,  21.2415,  ...,  -8.3563, -16.0944, -19.6188],
        [-33.0857,  -6.1432,   4.1937,  ...,   7.0891,  -0.6173,  -9.3505],
        ...,
        [ 11.0783,  16.9526,  16.2907,  ...,  -6.0243, -12.9012, -15.6360],
        [-36.8019, -13.0505,  -0.5558,  ...,   9.1709,   4.5187,  -2.3095],
        [-56.7620, -37.3440, -18.1718,  ...,  18.1608,  20.2067,  18.8081]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 6, 5, 8, 6, 5, 6, 4, 3, 1, 5, 8, 6, 6, 5, 3, 8, 8, 7, 6, 0, 0, 3, 2,
        4, 7, 4, 0, 2, 8, 7, 6, 3, 4, 1, 1, 6, 4, 5, 0, 2, 8, 2, 7, 4, 5, 2, 7,
        1, 3, 4, 0, 2, 6, 2, 8, 3, 8, 0, 0, 4, 3, 0, 7, 7, 7, 7, 8, 0, 2, 5, 2,
        7, 8, 6, 4, 7, 0, 4, 3, 1, 7, 1, 4, 6, 2, 2, 3, 1, 0, 2, 2, 5, 7, 7, 1,
        8, 7, 6, 5, 3, 1, 0, 5, 3, 0, 4, 3, 8, 1, 1, 3, 5, 1, 2, 7, 7, 1, 7, 2,
        4, 7, 5, 2, 1, 0, 0, 5]) 
pred: tensor([[-18.4861,   1.3188,   8.2348,  ...,   1.7677,  -3.4977, -10.0820],
        [-48.0416, -21.0380,  -5.6776,  ...,  12.4560,   9.6163,   3.2020],
        [-33.1384, -10.8762,   0.1269,  ...,   9.2964,   2.8833,  -5.1232],
        ...,
        [ 33.9457,  31.1396,  25.4196,  ..., -13.7191, -18.3684, -19.7582],
        [ 38.1828,  33.5739,  27.3398,  ..., -15.2291, -21.5653, -21.8185],
        [-45.3676, -17.0444,  -2.7376,  ...,  11.1265,   6.9796,  -1.1275]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 8, 3, 2, 4, 7, 1, 2, 3, 4, 3, 0, 3, 4, 5, 4, 5, 0, 3, 4, 1, 2, 7, 0,
        2, 7, 7, 6, 3, 6, 5, 8, 4, 1, 2, 0, 7, 7, 5, 2, 6, 2, 1, 6, 5, 8, 8, 3,
        6, 4, 4, 5, 2, 6, 6, 5, 5, 4, 0, 1, 3, 3, 0, 8, 8, 5, 6, 8, 7, 1, 5, 5,
        2, 1, 6, 5, 5, 6, 7, 4, 3, 8, 0, 7, 8, 5, 2, 4, 7, 5, 8, 5, 3, 8, 0, 7,
        8, 6, 2, 5, 3, 2, 7, 2, 4, 5, 4, 3, 6, 8, 8, 5, 2, 8, 5, 6, 7, 2, 8, 2,
        7, 1, 7, 8, 5, 0, 3, 2]) 
pred: tensor([[-3.7282e+01, -7.2447e+00,  5.3076e+00,  ...,  7.0698e+00,
          1.4080e-03, -9.5039e+00],
        [-5.5933e+01, -4.2735e+01, -2.3771e+01,  ...,  1.9500e+01,
          2.5750e+01,  2.6498e+01],
        [-8.2045e+00,  8.4517e+00,  1.3631e+01,  ..., -2.0440e-01,
         -6.7883e+00, -1.4791e+01],
        ...,
        [ 3.3877e+01,  3.0310e+01,  2.4255e+01,  ..., -1.3556e+01,
         -1.6572e+01, -1.8116e+01],
        [-1.4629e+01,  7.0500e+00,  1.3463e+01,  ...,  2.6796e-01,
         -8.1025e+00, -1.6433e+01],
        [ 1.0843e+01,  1.6730e+01,  1.6459e+01,  ..., -6.1986e+00,
         -1.0793e+01, -1.4406e+01]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 7, 8, 1, 0, 5, 6, 4, 4, 2, 6, 5, 4, 7, 1, 7, 1, 7, 1, 7, 1, 6, 6, 7,
        4, 3, 7, 2, 7, 7, 1, 0, 0, 8, 5, 7, 2, 7, 7, 7, 0, 8, 0, 6, 1, 0, 1, 8,
        1, 7, 6, 7, 6, 3, 5, 0, 2, 7, 6, 2, 3, 3, 2, 1, 8, 6, 7, 6, 6, 5, 3, 4,
        0, 7, 4, 2, 5, 7, 0, 8, 1, 8, 7, 8, 5, 1, 3, 6, 6, 8, 4, 7, 1, 1, 6, 3,
        4, 0, 8, 4, 1, 6, 6, 0, 2, 0, 5, 6, 1, 1, 2, 3, 3, 5, 5, 5, 8, 0, 1, 4,
        2, 7, 3, 0, 6, 5, 5, 2]) 
pred: tensor([[ -2.0422,  13.8538,  16.5843,  ...,  -4.1540, -10.2651, -16.4246],
        [-54.0274, -35.0882, -17.5954,  ...,  17.6767,  19.5153,  17.1739],
        [-66.6605, -52.5159, -30.4026,  ...,  23.4579,  30.6357,  33.7167],
        ...,
        [-41.4803, -19.1036,  -5.7114,  ...,  11.4982,   8.3273,   2.8807],
        [-39.6977, -15.9386,  -2.7803,  ...,  10.7302,   5.9377,  -0.5889],
        [  2.0568,  16.1358,  18.6405,  ...,  -3.6156, -12.0235, -19.9886]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 2, 2, 6, 4, 4, 6, 7, 2, 8, 0, 6, 6, 2, 7, 6, 5, 0, 8, 8, 5, 0, 1, 1,
        6, 5, 3, 8, 5, 0, 8, 8, 7, 1, 4, 3, 6, 6, 1, 8, 3, 4, 5, 4, 0, 0, 8, 7,
        3, 2, 5, 1, 2, 4, 6, 8, 1, 4, 1, 8, 6, 3, 4, 6, 0, 8, 0, 1, 3, 5, 5, 8,
        5, 7, 1, 8, 8, 3, 2, 7, 5, 5, 0, 7, 7, 8, 2, 0, 3, 0, 0, 1, 6, 0, 0, 8,
        8, 3, 2, 7, 0, 0, 7, 2, 1, 0, 4, 6, 6, 7, 3, 2, 2, 6, 1, 8, 2, 4, 7, 4,
        2, 1, 2, 1, 4, 2, 6, 7]) 
pred: tensor([[-64.7025, -42.0190, -22.2623,  ...,  21.2800,  21.9366,  20.6126],
        [ -3.0282,  13.8555,  18.3754,  ...,  -3.7795, -11.7237, -18.8281],
        [ -1.0277,  13.6044,  16.7423,  ...,  -3.4830,  -9.6761, -16.4855],
        ...,
        [  0.7316,  14.6129,  16.8078,  ...,  -3.5933, -11.4022, -18.3106],
        [-55.0838, -30.4446, -13.1488,  ...,  17.1985,  14.8175,  10.0194],
        [-51.1233, -36.2641, -20.5358,  ...,  18.5103,  19.7270,  19.2563]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 7, 2, 4, 6, 0, 6, 7, 4, 1, 4, 2, 6, 8, 8, 6, 3, 8, 5, 3, 3, 1, 2, 1,
        3, 3, 6, 0, 4, 3, 4, 3, 5, 8, 7, 7, 2, 8, 8, 7, 3, 8, 3, 8, 0, 7, 8, 1,
        3, 4, 8, 3, 0, 1, 3, 2, 5, 4, 8, 5, 0, 6, 8, 8, 2, 7, 7, 5, 0, 5, 7, 1,
        8, 8, 6, 2, 5, 0, 6, 5, 0, 2, 6, 1, 7, 4, 1, 3, 6, 6, 0, 7, 5, 1, 0, 8,
        3, 5, 1, 5, 0, 1, 0, 6, 6, 6, 0, 5, 0, 3, 7, 7, 4, 0, 7, 8, 7, 8, 3, 7,
        2, 4, 2, 4, 3, 1, 5, 3]) 
pred: tensor([[-46.6976, -27.0605, -13.2014,  ...,  16.1422,  13.3428,   8.6426],
        [-54.1257, -37.6900, -20.1333,  ...,  19.4952,  20.3914,  19.3527],
        [  2.1039,  14.0600,  15.1455,  ...,  -4.0596, -10.8860, -16.6802],
        ...,
        [ 17.8571,  25.0838,  22.5597,  ...,  -9.9951, -16.9489, -21.7921],
        [-46.4006, -17.9574,  -3.3474,  ...,  12.7147,   6.2885,  -1.2898],
        [-16.3999,   7.2582,  13.7366,  ...,   1.0320,  -7.8245, -17.7729]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 4, 1, 2, 8, 0, 0, 7, 4, 0, 6, 6, 3, 8, 4, 2, 3, 2, 6, 1, 5, 5, 8, 8,
        4, 7, 8, 3, 5, 4, 4, 4, 6, 0, 5, 7, 3, 1, 0, 7, 2, 8, 5, 1, 6, 3, 3, 4,
        3, 0, 8, 6, 4, 7, 5, 3, 6, 0, 4, 4, 0, 1, 2, 1, 3, 1, 2, 0, 5, 5, 8, 2,
        1, 8, 4, 4, 1, 2, 8, 8, 5, 4, 3, 0, 0, 1, 8, 3, 5, 2, 8, 5, 6, 6, 3, 8,
        0, 4, 7, 8, 4, 3, 1, 3, 5, 4, 2, 0, 6, 4, 6, 7, 6, 6, 2, 0, 7, 8, 2, 2,
        8, 5, 5, 5, 2, 0, 1, 2]) 
pred: tensor([[-55.6484, -35.9047, -19.0857,  ...,  18.7670,  19.9052,  17.4506],
        [-31.3942,  -6.2182,   4.1945,  ...,   7.7690,   0.5980,  -9.3211],
        [ 23.1112,  27.3608,  23.4588,  ..., -10.1964, -18.0646, -23.5597],
        ...,
        [ 42.2831,  37.0129,  28.0083,  ..., -16.5759, -20.9681, -23.8264],
        [ 21.6124,  24.9329,  21.1185,  ...,  -9.9936, -15.4960, -19.2796],
        [ -5.3418,  14.2633,  16.6074,  ...,  -2.1803, -12.2539, -21.9168]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 3, 5, 2, 4, 7, 7, 0, 5, 6, 8, 7, 7, 2, 8, 4, 3, 4, 3, 0, 7, 8, 7, 7,
        1, 8, 0, 3, 4, 1, 6, 2, 8, 3, 3, 1, 3, 6, 6, 8, 8, 0, 3, 6, 4, 6, 5, 6,
        4, 3, 4, 6, 4, 5, 2, 6, 5, 3, 0, 5, 6, 5, 8, 3, 5, 6, 6, 6, 8, 5, 6, 2,
        3, 8, 2, 6, 5, 7, 5, 0, 1, 6, 2, 3, 2, 1, 6, 2, 7, 5, 8, 8, 7, 3, 6, 7,
        7, 4, 4, 7, 7, 0, 2, 3, 3, 2, 8, 5, 4, 1, 0, 0, 1, 0, 1, 2, 0, 0, 8, 0,
        0, 8, 0, 3, 5, 2, 0, 6]) 
pred: tensor([[-44.1108, -23.1804,  -9.2686,  ...,  13.9164,  11.8100,   6.6372],
        [-14.3438,   8.4506,  14.1818,  ...,   0.6822,  -8.7547, -18.4958],
        [-38.0659, -11.9143,  -0.7946,  ...,  10.8466,   4.1644,  -5.9028],
        ...,
        [  7.6122,  20.1004,  20.4868,  ...,  -5.9193, -15.0210, -22.9902],
        [ 39.7233,  35.3162,  26.8440,  ..., -15.3068, -20.2467, -22.9642],
        [-43.4627, -19.8691,  -5.7642,  ...,  11.6434,   9.3891,   3.9590]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 1, 3, 6, 8, 4, 3, 0, 3, 7, 4, 6, 6, 1, 8, 8, 2, 2, 0, 5, 7, 6, 1, 0,
        5, 3, 7, 8, 7, 2, 7, 4, 1, 5, 6, 6, 4, 7, 3, 2, 8, 1, 2, 2, 1, 0, 4, 2,
        1, 2, 2, 6, 2, 3, 2, 5, 7, 4, 5, 6, 4, 1, 7, 5, 7, 6, 2, 4, 5, 7, 3, 2,
        2, 6, 6, 7, 1, 3, 3, 2, 5, 4, 3, 5, 0, 8, 6, 2, 0, 2, 5, 6, 8, 1, 8, 3,
        1, 8, 0, 6, 4, 0, 4, 6, 6, 4, 0, 0, 1, 6, 8, 8, 6, 6, 8, 1, 1, 7, 4, 4,
        0, 3, 6, 3, 5, 8, 2, 0]) 
pred: tensor([[-31.9980, -11.4182,  -1.0601,  ...,   7.8898,   3.7758,  -2.0258],
        [ 18.4901,  26.7445,  24.2291,  ...,  -9.5794, -17.1010, -24.0761],
        [-14.9814,   7.9001,  13.8985,  ...,   0.8313,  -8.4226, -18.4793],
        ...,
        [-56.6060, -45.5436, -27.0176,  ...,  20.6768,  26.8364,  29.8169],
        [  7.5693,  20.0160,  20.8615,  ...,  -6.0576, -15.3598, -22.9579],
        [ 47.9205,  37.9243,  27.4894,  ..., -17.9058, -20.4862, -20.8427]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 5, 7, 7, 6, 4, 0, 1, 7, 6, 5, 7, 6, 1, 6, 2, 7, 6, 1, 3, 4, 5, 2, 8,
        3, 0, 1, 3, 1, 6, 0, 4, 2, 8, 2, 1, 4, 2, 2, 7, 3, 6, 5, 7, 6, 7, 8, 8,
        4, 1, 5, 4, 7, 1, 5, 1, 7, 2, 8, 6, 0, 7, 0, 3, 5, 8, 6, 1, 2, 0, 8, 5,
        1, 4, 0, 6, 6, 3, 4, 3, 3, 1, 3, 7, 5, 2, 2, 2, 0, 4, 8, 0, 2, 3, 1, 1,
        7, 1, 1, 5, 3, 0, 0, 1, 3, 0, 6, 5, 0, 3, 8, 6, 6, 1, 0, 5, 8, 0, 3, 1,
        3, 0, 3, 0, 6, 1, 2, 0]) 
pred: tensor([[-34.9890, -14.6780,  -2.6820,  ...,   9.7837,   5.5337,  -0.3176],
        [-44.7820, -16.1779,  -3.3560,  ...,  11.8186,   5.3779,  -2.7187],
        [-64.6202, -43.7071, -23.2973,  ...,  22.2305,  23.5656,  22.6494],
        ...,
        [ 20.0597,  25.2676,  22.6371,  ..., -10.2205, -15.3068, -19.7472],
        [ -1.8599,  17.3601,  19.9397,  ...,  -3.6495, -14.2683, -24.1260],
        [ 46.4852,  37.7675,  28.1444,  ..., -17.8946, -20.6883, -21.2590]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 3, 0, 4, 6, 2, 0, 4, 0, 1, 2, 4, 1, 3, 5, 7, 2, 8, 6, 5, 5, 7, 3, 3,
        4, 3, 8, 2, 2, 7, 2, 5, 3, 5, 2, 6, 2, 6, 6, 1, 6, 7, 3, 4, 0, 2, 8, 1,
        0, 1, 1, 4, 8, 8, 5, 4, 3, 6, 2, 3, 6, 0, 8, 0, 5, 5, 8, 0, 5, 8, 6, 3,
        1, 0, 1, 2, 6, 4, 8, 0, 4, 8, 6, 5, 6, 5, 4, 3, 7, 6, 0, 5, 8, 5, 5, 6,
        8, 7, 6, 3, 0, 4, 5, 5, 4, 6, 4, 8, 8, 2, 3, 4, 7, 4, 2, 8, 7, 7, 6, 1,
        2, 1, 0, 1, 1, 4, 2, 7]) 
pred: tensor([[-50.1770, -27.5314, -11.6971,  ...,  16.8788,  14.1895,   8.0942],
        [-13.1563,   6.1725,  11.8872,  ...,   1.8870,  -6.9247, -16.1978],
        [ 38.9174,  37.8134,  31.4088,  ..., -16.4027, -23.9569, -27.4654],
        ...,
        [-39.3324,  -7.2765,   5.2230,  ...,   8.4564,  -0.3651, -10.9492],
        [ -5.9537,  13.8307,  17.7060,  ...,  -2.0690, -11.8669, -21.4065],
        [-56.3343, -36.7013, -18.9279,  ...,  19.1909,  19.7869,  17.2826]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 5, 6, 1, 1, 2, 5, 6, 6, 1, 2, 6, 4, 3, 1, 3, 0, 5, 3, 0, 5, 0, 8, 7,
        0, 7, 5, 1, 2, 0, 1, 1, 6, 0, 7, 4, 6, 4, 1, 6, 7, 8, 6, 4, 4, 1, 4, 6,
        1, 0, 3, 3, 7, 2, 6, 1, 0, 5, 7, 3, 0, 6, 4, 0, 5, 3, 6, 3, 4, 7, 8, 2,
        0, 1, 1, 0, 8, 0, 2, 6, 7, 2, 4, 6, 0, 3, 4, 2, 2, 3, 8, 6, 0, 6, 8, 3,
        4, 0, 7, 8, 2, 4, 3, 2, 1, 0, 0, 8, 1, 2, 7, 4, 2, 4, 4, 4, 6, 8, 3, 8,
        2, 0, 4, 6, 5, 2, 4, 0]) 
pred: tensor([[ -7.2856,  16.7279,  21.7736,  ...,  -3.7762, -13.4800, -23.9914],
        [-48.9101, -17.5201,  -1.8894,  ...,  12.3544,   6.5199,  -2.3016],
        [-58.6075, -32.1159, -14.4325,  ...,  19.5491,  16.8570,   9.1144],
        ...,
        [ -5.0506,  17.0746,  21.2663,  ...,  -3.7366, -14.5450, -24.5077],
        [-38.6421,  -5.8374,   5.6266,  ...,   8.1065,  -1.3412, -12.8774],
        [ 37.6243,  38.3175,  32.2593,  ..., -16.6239, -24.4926, -28.5118]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 7, 2, 7, 4, 3, 3, 4, 0, 2, 1, 8, 2, 3, 0, 1, 3, 5, 3, 5, 7, 7, 3, 6,
        1, 3, 1, 8, 1, 7, 3, 8, 1, 7, 6, 4, 1, 2, 2, 8, 0, 3, 0, 4, 3, 2, 4, 3,
        3, 2, 7, 0, 6, 4, 1, 7, 6, 2, 4, 8, 3, 8, 7, 3, 6, 8, 1, 8, 1, 1, 2, 4,
        1, 7, 1, 6, 4, 2, 3, 4, 1, 6, 4, 8, 0, 5, 0, 6, 2, 8, 0, 0, 7, 6, 2, 2,
        0, 3, 2, 3, 2, 1, 6, 2, 7, 1, 0, 8, 8, 1, 2, 8, 5, 8, 8, 6, 3, 0, 0, 7,
        3, 8, 0, 2, 7, 6, 7, 2]) 
pred: tensor([[-11.1350,   4.3288,   8.4687,  ...,   0.1409,  -5.2702, -10.3247],
        [-67.2870, -42.8927, -23.1920,  ...,  22.6179,  23.0551,  19.7754],
        [  8.2775,  18.3866,  20.1417,  ...,  -5.4475, -13.7820, -20.1702],
        ...,
        [-56.8090, -28.2501, -10.6691,  ...,  16.1821,  12.7992,   6.9733],
        [-59.1981, -38.4714, -21.1243,  ...,  20.4476,  20.4500,  17.4940],
        [  9.4808,  18.9971,  20.9170,  ...,  -6.0862, -14.5031, -20.1932]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 0, 0, 6, 3, 6, 7, 3, 0, 4, 5, 4, 0, 2, 3, 8, 6, 8, 4, 8, 3, 7, 7, 0,
        7, 0, 0, 8, 0, 6, 5, 5, 8, 7, 0, 7, 4, 1, 2, 7, 8, 4, 3, 7, 0, 8, 2, 1,
        5, 7, 6, 6, 7, 0, 1, 8, 8, 0, 0, 1, 1, 8, 7, 0, 1, 6, 0, 8, 6, 8, 7, 0,
        1, 2, 5, 6, 2, 5, 0, 5, 0, 8, 7, 7, 2, 3, 1, 3, 7, 5, 8, 5, 7, 4, 1, 4,
        3, 2, 1, 8, 8, 2, 7, 7, 0, 8, 6, 3, 2, 3, 3, 8, 0, 4, 0, 1, 4, 8, 2, 7,
        6, 5, 8, 4, 1, 3, 3, 8]) 
pred: tensor([[ 42.6583,  39.6853,  32.1032,  ..., -17.4776, -25.0517, -28.0844],
        [ 46.5429,  41.1122,  33.4659,  ..., -18.5312, -26.6066, -28.3766],
        [ 45.2541,  40.1112,  31.7355,  ..., -17.3205, -24.7111, -27.3760],
        ...,
        [ -2.4285,  12.5145,  16.8086,  ...,  -3.5198,  -9.9404, -15.8386],
        [-10.3009,   8.5727,  13.3179,  ...,  -1.3754,  -6.9869, -13.8937],
        [-64.6944, -50.5555, -30.6494,  ...,  23.2933,  29.6200,  32.2387]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 7, 0, 0, 3, 2, 1, 3, 3, 3, 5, 0, 4, 7, 4, 4, 2, 1, 8, 8, 7, 8, 4, 8,
        1, 7, 0, 1, 6, 2, 4, 4, 0, 6, 4, 5, 8, 2, 8, 3, 5, 0, 2, 1, 1, 6, 1, 6,
        0, 5, 6, 7, 1, 4, 1, 4, 8, 0, 6, 7, 2, 8, 3, 1, 8, 6, 4, 8, 5, 0, 5, 2,
        2, 8, 7, 6, 0, 5, 0, 4, 0, 2, 3, 6, 7, 1, 8, 0, 0, 1, 2, 0, 5, 4, 2, 4,
        6, 7, 7, 0, 8, 4, 7, 6, 5, 0, 5, 2, 3, 0, 2, 4, 0, 0, 0, 3, 6, 4, 2, 5,
        6, 6, 8, 7, 2, 5, 0, 2]) 
pred: tensor([[ 26.3029,  31.3723,  28.1617,  ..., -12.5099, -21.5276, -26.9902],
        [-65.2508, -44.0134, -24.5051,  ...,  21.3106,  25.6557,  23.9463],
        [ 44.5842,  39.5276,  31.8112,  ..., -16.6735, -24.5662, -27.5038],
        ...,
        [-38.0491, -15.3294,  -3.1618,  ...,  11.0593,   6.3699,  -1.4085],
        [ 43.5733,  39.7729,  31.8515,  ..., -17.3860, -24.9116, -28.0260],
        [  2.6682,  19.9653,  22.9375,  ...,  -5.9162, -14.2100, -22.9419]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 3, 0, 1, 4, 4, 1, 2, 4, 3, 2, 0, 5, 0, 5, 3, 7, 0, 2, 3, 3, 7, 6, 1,
        5, 8, 2, 2, 8, 0, 2, 3, 3, 8, 3, 3, 1, 1, 8, 1, 5, 0, 6, 1, 0, 0, 2, 6,
        0, 3, 6, 2, 2, 2, 2, 1, 6, 5, 8, 1, 6, 7, 2, 1, 2, 7, 3, 7, 0, 1, 0, 1,
        3, 0, 1, 1, 4, 8, 1, 4, 2, 5, 5, 5, 3, 5, 6, 6, 7, 3, 1, 3, 4, 8, 5, 7,
        2, 4, 3, 8, 2, 1, 4, 4, 6, 3, 8, 1, 4, 6, 1, 6, 7, 6, 3, 4, 6, 8, 5, 6,
        4, 5, 3, 0, 5, 8, 8, 3]) 
pred: tensor([[ 49.3754,  42.2100,  34.4076,  ..., -19.1544, -27.0963, -28.6311],
        [-16.3835,   5.9976,  13.5899,  ...,   1.5207,  -6.9545, -16.7660],
        [ 43.3160,  37.7500,  29.3492,  ..., -17.1180, -22.2346, -24.1401],
        ...,
        [-70.3184, -54.2056, -32.4302,  ...,  24.0711,  33.9659,  36.2080],
        [-73.3826, -57.7113, -35.1202,  ...,  25.4001,  36.2810,  39.2876],
        [ -3.7462,   7.2391,  12.8441,  ...,  -1.2537,  -6.4228, -10.7865]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 7, 5, 3, 8, 3, 6, 1, 3, 3, 8, 6, 1, 5, 4, 4, 7, 4, 3, 2, 7, 5, 6, 0,
        3, 3, 1, 8, 4, 5, 0, 1, 1, 2, 0, 6, 4, 1, 1, 7, 4, 8, 2, 0, 4, 8, 3, 4,
        7, 2, 6, 6, 8, 1, 1, 0, 8, 5, 1, 4, 7, 2, 1, 1, 7, 2, 5, 1, 8, 3, 0, 3,
        1, 8, 4, 8, 4, 2, 0, 8, 0, 8, 1, 0, 8, 4, 5, 0, 2, 0, 6, 0, 3, 0, 0, 7,
        7, 8, 8, 1, 0, 1, 5, 2, 8, 4, 0, 8, 8, 8, 8, 7, 6, 7, 8, 2, 0, 4, 7, 2,
        2, 2, 5, 0, 6, 3, 3, 5]) 
pred: tensor([[ 45.6739,  40.0303,  31.0202,  ..., -18.1281, -23.1156, -25.6821],
        [-72.0652, -46.3556, -25.1024,  ...,  23.1141,  26.4899,  23.5797],
        [-47.9951, -15.2313,  -0.8453,  ...,  10.4088,   5.0902,  -3.9168],
        ...,
        [-20.0694,   2.4161,  11.4043,  ...,   2.9286,  -5.4301, -14.2349],
        [-21.6919,   4.4172,  12.8199,  ...,   4.1790,  -7.2124, -19.9706],
        [-40.8992, -21.7840,  -6.6736,  ...,  12.7671,  10.7022,   6.1128]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 5, 1, 4, 0, 8, 4, 8, 1, 6, 4, 0, 2, 5, 6, 4, 0, 2, 0, 2, 7, 7, 3, 3,
        5, 7, 5, 6, 1, 8, 7, 0, 2, 4, 8, 4, 0, 1, 4, 4, 4, 8, 8, 7, 0, 6, 2, 4,
        1, 5, 0, 3, 0, 1, 6, 7, 6, 6, 8, 2, 8, 3, 5, 7, 8, 5, 0, 5, 1, 6, 1, 6,
        6, 8, 6, 7, 7, 3, 4, 6, 5, 7, 0, 1, 3, 6, 8, 4, 7, 6, 1, 7, 3, 6, 3, 4,
        4, 7, 3, 0, 7, 4, 4, 2, 0, 3, 7, 8, 2, 3, 6, 0, 5, 8, 5, 1, 2, 5, 7, 1,
        6, 2, 3, 2, 0, 5, 1, 3]) 
pred: tensor([[-78.0416, -59.6672, -37.4236,  ...,  27.4862,  34.8062,  37.8176],
        [-47.8751, -17.9167,  -3.8167,  ...,  13.2129,   6.1031,  -3.4005],
        [ 23.3352,  32.5891,  30.7332,  ..., -12.0659, -23.4182, -31.2273],
        ...,
        [-56.9467, -21.2681,  -5.5946,  ...,  13.7639,   8.4774,  -0.8557],
        [ 23.8575,  30.4763,  29.0759,  ..., -11.6743, -20.6916, -27.1477],
        [-14.1281,   7.3287,  14.7050,  ...,   1.0515,  -8.7331, -18.4019]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 5, 0, 6, 8, 6, 0, 4, 0, 6, 3, 2, 0, 8, 6, 4, 0, 8, 4, 4, 6, 8, 5, 1,
        6, 1, 5, 6, 2, 8, 2, 2, 2, 7, 7, 3, 3, 6, 2, 6, 8, 0, 1, 7, 4, 8, 0, 1,
        3, 5, 3, 1, 6, 0, 3, 7, 8, 2, 2, 2, 5, 5, 1, 5, 2, 4, 6, 2, 5, 0, 3, 5,
        6, 2, 3, 2, 7, 4, 1, 4, 6, 5, 8, 2, 2, 2, 1, 2, 3, 6, 1, 3, 5, 7, 8, 5,
        3, 4, 4, 2, 6, 1, 1, 2, 1, 1, 5, 7, 4, 5, 4, 2, 2, 4, 4, 5, 7, 5, 4, 6,
        5, 3, 0, 7, 0, 6, 5, 7]) 
pred: tensor([[-61.3416, -30.6975, -13.2279,  ...,  17.4059,  14.1121,   8.2921],
        [-51.1320, -18.6025,  -3.4469,  ...,  12.9169,   5.6964,  -2.9464],
        [ 44.1618,  42.9245,  35.4144,  ..., -18.6206, -25.8340, -31.2741],
        ...,
        [-57.9636, -34.4400, -16.5816,  ...,  18.8156,  16.8663,  13.4157],
        [-46.5075, -23.2974,  -8.1935,  ...,  14.1878,  10.3809,   5.2118],
        [-67.2513, -46.9372, -27.4903,  ...,  23.7625,  25.1118,  24.7459]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 2, 4, 2, 2, 4, 6, 5, 5, 7, 5, 5, 7, 3, 8, 1, 6, 8, 3, 8, 4, 6, 7, 5,
        8, 8, 4, 6, 7, 0, 4, 6, 0, 1, 6, 0, 0, 8, 7, 0, 5, 5, 1, 2, 2, 6, 4, 7,
        0, 7, 5, 3, 3, 6, 8, 1, 0, 5, 8, 7, 2, 7, 8, 1, 0, 0, 8, 4, 0, 8, 1, 4,
        3, 0, 8, 0, 3, 4, 4, 7, 6, 4, 5, 4, 2, 0, 1, 5, 0, 2, 8, 0, 1, 8, 4, 4,
        8, 6, 8, 8, 0, 1, 1, 0, 4, 0, 4, 8, 2, 8, 5, 7, 5, 7, 3, 2, 2, 8, 8, 4,
        5, 8, 6, 5, 2, 0, 4, 4]) 
pred: tensor([[ 22.6574,  28.7352,  27.6739,  ..., -10.3954, -18.7269, -24.9668],
        [  5.9817,  22.5507,  25.0633,  ...,  -7.8637, -15.2847, -23.7449],
        [-35.3330,  -5.4963,   6.0122,  ...,   6.4980,  -1.7077, -11.2584],
        ...,
        [ 44.7330,  43.2172,  36.4476,  ..., -18.8305, -26.3380, -31.7012],
        [-34.9759, -10.9829,   1.1300,  ...,   8.5439,   3.3143,  -3.5213],
        [-43.8920,  -5.9961,   8.6688,  ...,   8.6541,  -1.7537, -14.2089]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 6, 8, 2, 0, 3, 7, 3, 4, 5, 2, 5, 3, 7, 3, 5, 4, 6, 8, 5, 4, 0, 6, 0,
        2, 5, 5, 6, 2, 2, 6, 4, 0, 3, 8, 2, 4, 1, 8, 8, 6, 2, 0, 6, 8, 1, 4, 2,
        7, 8, 0, 3, 6, 8, 2, 3, 7, 0, 2, 6, 5, 0, 1, 5, 0, 3, 6, 7, 7, 4, 1, 8,
        1, 5, 8, 7, 0, 1, 8, 4, 1, 8, 5, 0, 1, 0, 2, 6, 6, 1, 0, 3, 0, 2, 6, 6,
        2, 3, 4, 4, 0, 4, 3, 5, 2, 2, 4, 4, 2, 7, 6, 1, 8, 8, 6, 4, 1, 0, 8, 6,
        6, 0, 0, 6, 8, 6, 8, 3]) 
pred: tensor([[ 15.6867,  24.0505,  24.5274,  ...,  -8.1576, -17.0478, -24.0589],
        [-67.7644, -34.0888, -15.0136,  ...,  18.6711,  16.8691,  10.4610],
        [-78.2763, -59.2076, -36.2952,  ...,  27.2266,  34.9686,  37.7356],
        ...,
        [-63.8681, -33.8581, -15.2505,  ...,  18.6346,  17.1120,  11.2465],
        [-85.3257, -64.3991, -39.4131,  ...,  29.1632,  38.1174,  41.3650],
        [ -5.4499,   8.8571,  13.6457,  ...,  -1.1983,  -7.8863, -14.5215]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 8, 4, 2, 3, 5, 0, 6, 6, 8, 3, 5, 2, 2, 6, 8, 2, 5, 7, 5, 1, 1, 7, 5,
        1, 7, 2, 2, 1, 8, 3, 8, 3, 6, 6, 1, 3, 6, 8, 6, 6, 1, 1, 1, 4, 6, 7, 6,
        8, 8, 0, 0, 7, 0, 4, 2, 6, 0, 7, 8, 7, 6, 4, 5, 1, 5, 3, 4, 5, 8, 0, 1,
        0, 0, 5, 5, 1, 3, 2, 2, 8, 8, 5, 7, 0, 0, 4, 7, 7, 4, 0, 5, 1, 2, 6, 0,
        7, 1, 5, 8, 3, 4, 5, 7, 3, 6, 5, 8, 5, 7, 8, 8, 2, 1, 0, 3, 4, 0, 4, 7,
        7, 2, 0, 0, 2, 1, 4, 0]) 
pred: tensor([[ -2.9689,  18.4392,  23.7473,  ...,  -5.7834, -15.0684, -23.0343],
        [-75.0115, -57.9840, -36.0005,  ...,  26.4753,  34.0838,  37.6649],
        [-32.6042, -10.2873,   1.5995,  ...,   8.4649,   2.8931,  -4.3626],
        ...,
        [ 21.6273,  30.6816,  30.2648,  ..., -11.9186, -21.1840, -28.3162],
        [-39.9317,  -6.4283,   6.5419,  ...,   9.0918,  -2.2158, -14.5095],
        [ 50.9796,  43.5688,  34.5081,  ..., -19.2870, -24.7329, -28.5403]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 8, 0, 0, 2, 0, 4, 4, 7, 6, 5, 7, 5, 0, 2, 6, 1, 5, 1, 6, 0, 0, 8, 5,
        0, 2, 1, 0, 1, 1, 8, 6, 1, 1, 5, 5, 0, 7, 5, 8, 3, 5, 0, 8, 4, 3, 2, 8,
        1, 6, 5, 0, 4, 8, 5, 8, 5, 2, 4, 8, 2, 7, 2, 6, 1, 5, 3, 0, 1, 4, 7, 0,
        2, 6, 4, 6, 8, 2, 3, 7, 4, 3, 1, 5, 7, 6, 1, 7, 5, 8, 8, 1, 3, 8, 0, 0,
        0, 1, 3, 1, 2, 6, 1, 8, 5, 2, 4, 2, 6, 4, 4, 1, 2, 0, 1, 8, 4, 0, 2, 3,
        0, 3, 8, 3, 1, 5, 2, 3]) 
pred: tensor([[ 49.3949,  43.4375,  34.7491,  ..., -19.4229, -26.6643, -29.3814],
        [-87.6574, -65.7915, -40.1723,  ...,  30.3553,  38.5811,  41.3548],
        [ 52.2130,  45.9717,  36.7881,  ..., -20.3543, -27.8952, -31.5229],
        ...,
        [-55.5909, -18.7218,  -1.8948,  ...,  12.6655,   6.2763,  -3.5846],
        [ 15.7869,  22.1931,  20.6389,  ...,  -8.3256, -15.3094, -20.1354],
        [-18.4207,   9.5548,  16.7823,  ...,   3.2080, -12.0081, -26.9840]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 1, 6, 1, 1, 3, 2, 0, 0, 0, 5, 1, 4, 0, 6, 1, 4, 7, 0, 0, 4, 0, 8, 7,
        0, 4, 6, 5, 4, 1, 1, 1, 6, 6, 4, 5, 0, 6, 2, 3, 4, 0, 5, 5, 0, 1, 1, 3,
        5, 6, 1, 8, 6, 4, 4, 7, 6, 2, 7, 2, 8, 0, 6, 6, 1, 0, 5, 2, 7, 3, 7, 0,
        6, 0, 0, 6, 4, 0, 7, 7, 5, 0, 4, 8, 1, 4, 7, 8, 0, 4, 6, 2, 6, 0, 2, 0,
        7, 0, 0, 3, 4, 2, 7, 8, 7, 6, 5, 1, 3, 7, 2, 4, 7, 6, 8, 7, 4, 7, 5, 3,
        4, 8, 7, 1, 5, 3, 4, 5]) 
pred: tensor([[-34.4404,  -2.9817,   8.1221,  ...,   8.3012,  -3.6422, -17.3260],
        [ 23.3020,  31.4530,  29.9736,  ..., -12.2366, -22.0712, -28.7894],
        [-69.1671, -34.1766, -14.1027,  ...,  19.4171,  17.2550,   9.2706],
        ...,
        [-21.1996,   6.3256,  14.8912,  ...,   1.2469,  -8.4823, -19.3715],
        [-34.1357,  -2.9772,   8.0983,  ...,   8.1845,  -3.6758, -17.0380],
        [-53.1049, -23.8947,  -7.1235,  ...,  16.1436,  10.1805,   1.2805]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 6, 8, 7, 3, 1, 0, 6, 0, 5, 4, 3, 1, 8, 0, 6, 1, 1, 1, 1, 4, 0, 1, 2,
        3, 3, 2, 5, 6, 7, 3, 6, 4, 5, 4, 3, 2, 6, 7, 5, 6, 8, 3, 3, 1, 2, 6, 1,
        0, 3, 3, 8, 2, 0, 0, 0, 8, 8, 4, 8, 3, 6, 5, 1, 7, 1, 2, 2, 7, 0, 6, 1,
        8, 1, 0, 6, 4, 3, 1, 0, 0, 2, 4, 0, 0, 6, 6, 0, 8, 2, 8, 1, 4, 0, 0, 3,
        7, 0, 3, 3, 0, 8, 1, 4, 2, 7, 6, 6, 8, 3, 0, 8, 5, 0, 7, 6, 8, 5, 0, 0,
        1, 4, 5, 3, 8, 6, 3, 2]) 
pred: tensor([[ -3.1560,  21.5762,  25.3714,  ...,  -4.4061, -18.9158, -31.2903],
        [-63.5144, -33.2357, -15.3648,  ...,  19.0961,  16.1791,   9.2695],
        [-85.4272, -64.7550, -39.8224,  ...,  30.3073,  37.9125,  40.1294],
        ...,
        [-61.7066, -33.4366, -15.5962,  ...,  19.6911,  16.1351,   9.0371],
        [-15.4413,   9.2329,  15.7376,  ...,   0.3791, -10.5543, -21.2217],
        [  5.5561,  24.3364,  25.3674,  ...,  -5.6668, -20.6440, -32.0701]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 0, 4, 7, 8, 5, 5, 5, 7, 2, 4, 1, 1, 2, 0, 0, 7, 8, 6, 8, 2, 5, 8, 0,
        0, 4, 5, 4, 2, 6, 0, 7, 7, 0, 4, 7, 6, 4, 0, 2, 4, 8, 5, 8, 5, 1, 1, 5,
        8, 2, 8, 4, 7, 3, 8, 2, 0, 0, 6, 3, 7, 0, 7, 3, 4, 3, 6, 6, 5, 3, 1, 3,
        4, 8, 6, 6, 6, 5, 0, 8, 7, 0, 2, 5, 4, 5, 3, 7, 7, 1, 4, 8, 3, 2, 1, 3,
        4, 0, 4, 2, 3, 0, 0, 1, 4, 2, 2, 1, 2, 2, 5, 4, 0, 0, 3, 1, 0, 7, 6, 6,
        6, 0, 0, 1, 3, 7, 5, 5]) 
pred: tensor([[-41.7928,  -8.8857,   4.7633,  ...,   9.5400,  -0.1736, -11.1833],
        [ 54.1815,  48.9681,  37.3563,  ..., -21.1745, -30.2591, -35.1162],
        [-30.0642,  -4.9998,   6.0620,  ...,   6.7919,  -2.0980, -11.3762],
        ...,
        [-77.1998, -53.8418, -30.4756,  ...,  27.1840,  29.0514,  28.1122],
        [-54.8617, -22.0169,  -5.1440,  ...,  15.6914,   8.4426,  -1.8345],
        [-36.3299, -15.8341,  -2.8773,  ...,  10.7158,   6.7250,   0.5989]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 3, 3, 2, 4, 1, 5, 1, 6, 0, 6, 1, 3, 0, 4, 6, 2, 1, 6, 8, 7, 4, 1, 2,
        4, 7, 8, 3, 6, 2, 0, 4, 0, 2, 5, 0, 0, 5, 7, 0, 6, 1, 8, 1, 7, 8, 4, 3,
        5, 0, 6, 0, 1, 1, 3, 6, 1, 1, 8, 0, 8, 5, 7, 2, 2, 8, 8, 7, 4, 5, 0, 1,
        0, 2, 7, 3, 7, 7, 0, 4, 8, 1, 7, 7, 2, 5, 7, 1, 7, 5, 0, 3, 0, 1, 0, 8,
        8, 2, 3, 3, 8, 1, 7, 4, 4, 5, 1, 0, 6, 7, 6, 8, 2, 1, 4, 5, 4, 2, 5, 1,
        0, 8, 7, 6, 8, 8, 1, 5]) 
pred: tensor([[-6.1212e+01, -2.8168e+01, -8.4642e+00,  ...,  1.7639e+01,
          1.2905e+01,  3.9026e+00],
        [-2.0043e+01,  7.3265e+00,  1.6279e+01,  ...,  7.7361e-02,
         -8.2839e+00, -1.7823e+01],
        [-1.9288e+01,  6.0783e+00,  1.4484e+01,  ...,  1.4005e+00,
         -8.3317e+00, -1.8800e+01],
        ...,
        [-8.3273e+01, -6.3690e+01, -3.8442e+01,  ...,  2.9317e+01,
          3.7367e+01,  4.0267e+01],
        [ 2.4130e+01,  3.5608e+01,  3.3695e+01,  ..., -1.2964e+01,
         -2.4099e+01, -3.3899e+01],
        [-6.1202e+01, -2.7769e+01, -8.2426e+00,  ...,  1.7661e+01,
          1.2051e+01,  2.6106e+00]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 3, 6, 0, 0, 8, 0, 2, 2, 5, 8, 1, 0, 1, 5, 3, 8, 6, 8, 7, 0, 0, 0, 7,
        0, 6, 0, 7, 5, 4, 3, 1, 7, 1, 5, 7, 4, 0, 4, 3, 2, 7, 0, 8, 0, 1, 3, 5,
        7, 0, 0, 0, 1, 0, 1, 3, 1, 0, 2, 1, 5, 2, 7, 6, 7, 7, 8, 8, 1, 2, 6, 0,
        7, 4, 4, 0, 7, 2, 5, 1, 0, 0, 5, 7, 5, 3, 1, 4, 4, 5, 5, 8, 2, 4, 0, 0,
        1, 2, 5, 1, 7, 1, 3, 4, 6, 8, 2, 7, 5, 2, 3, 8, 0, 5, 0, 1, 1, 6, 5, 6,
        3, 2, 2, 8, 8, 6, 2, 0]) 
pred: tensor([[ 24.7326,  36.7066,  34.3893,  ..., -14.2748, -24.6689, -33.5392],
        [-14.1915,  12.9121,  19.9714,  ...,   0.5099, -13.2853, -27.4071],
        [-61.5970, -32.7989, -13.1024,  ...,  17.9131,  17.1639,  10.9351],
        ...,
        [-74.1136, -37.8581, -14.7021,  ...,  21.0672,  18.5310,  10.3005],
        [ -5.1534,  22.6588,  28.4044,  ...,  -5.0494, -18.5921, -32.0667],
        [ 52.7108,  50.2549,  40.5775,  ..., -21.2681, -31.2058, -37.2664]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 0, 6, 6, 1, 5, 2, 7, 1, 1, 7, 2, 3, 4, 4, 3, 6, 2, 2, 1, 6, 1, 0, 2,
        8, 3, 8, 3, 3, 8, 8, 3, 0, 4, 8, 4, 8, 2, 7, 0, 0, 5, 0, 5, 8, 0, 2, 6,
        4, 5, 0, 1, 5, 6, 7, 3, 3, 4, 0, 6, 4, 1, 2, 4, 6, 4, 6, 3, 5, 6, 4, 7,
        0, 7, 2, 8, 6, 1, 6, 5, 2, 7, 3, 3, 4, 2, 7, 2, 2, 5, 5, 5, 8, 5, 8, 8,
        6, 1, 8, 4, 5, 8, 5, 6, 8, 8, 0, 1, 3, 1, 1, 8, 6, 2, 0, 4, 5, 6, 4, 2,
        2, 0, 6, 5, 6, 8, 8, 2]) 
pred: tensor([[-24.6853,  -0.1708,  10.3603,  ...,   4.0798,  -3.1239, -13.6519],
        [ 52.0321,  49.5316,  40.3199,  ..., -21.3914, -29.9220, -35.5415],
        [-72.1240, -35.7930, -12.7540,  ...,  19.0256,  18.5209,  10.9192],
        ...,
        [-82.9806, -62.5708, -36.3171,  ...,  27.6802,  37.9734,  40.4588],
        [-92.2926, -67.5989, -38.3104,  ...,  29.9816,  40.6411,  42.6078],
        [  6.2195,  25.1957,  27.6028,  ...,  -8.0309, -17.6853, -28.4444]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 0, 5, 7, 5, 2, 7, 0, 7, 2, 6, 0, 0, 5, 5, 0, 0, 5, 0, 3, 1, 5, 5, 2,
        5, 1, 2, 4, 8, 0, 5, 2, 0, 0, 3, 4, 8, 6, 2, 3, 0, 2, 2, 1, 8, 1, 2, 6,
        1, 2, 8, 8, 4, 2, 0, 6, 6, 5, 6, 1, 8, 6, 1, 8, 8, 3, 0, 5, 4, 8, 4, 2,
        3, 2, 4, 2, 2, 0, 2, 4, 4, 6, 3, 7, 5, 0, 5, 7, 5, 4, 0, 1, 8, 7, 5, 3,
        0, 7, 5, 7, 3, 1, 1, 1, 0, 5, 8, 0, 6, 2, 5, 3, 3, 2, 7, 0, 1, 1, 8, 6,
        3, 3, 8, 8, 0, 1, 4, 8]) 
pred: tensor([[ 36.8719,  41.2120,  36.0401,  ..., -16.4414, -27.1400, -34.6358],
        [ 53.4739,  50.7633,  40.0612,  ..., -21.9162, -32.4183, -37.9136],
        [-43.5071, -17.2892,  -1.1026,  ...,  12.4513,   6.7128,  -1.8524],
        ...,
        [ 33.2100,  36.6829,  31.5717,  ..., -14.9391, -24.9129, -30.5914],
        [-37.4877,  -4.5020,   8.4381,  ...,   8.0802,  -2.3257, -15.4202],
        [-84.8650, -64.9550, -38.0121,  ...,  29.2474,  38.0429,  41.9652]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 5, 7, 3, 6, 6, 5, 7, 3, 7, 8, 0, 8, 3, 6, 8, 1, 4, 4, 0, 2, 6, 2, 3,
        3, 0, 3, 1, 8, 0, 8, 3, 1, 5, 5, 6, 6, 8, 5, 2, 6, 7, 7, 8, 8, 2, 3, 0,
        8, 2, 4, 0, 6, 0, 7, 8, 4, 4, 2, 0, 5, 6, 4, 3, 5, 2, 8, 6, 8, 7, 6, 7,
        7, 4, 2, 5, 6, 7, 5, 5, 2, 8, 5, 3, 8, 5, 8, 5, 8, 3, 3, 6, 5, 6, 2, 6,
        8, 0, 0, 7, 1, 4, 8, 5, 3, 2, 5, 5, 2, 1, 6, 2, 4, 5, 3, 2, 3, 7, 8, 1,
        6, 4, 2, 2, 5, 0, 5, 3]) 
pred: tensor([[  4.9065,  24.3370,  25.6367,  ...,  -6.7638, -17.5475, -29.1747],
        [-45.1752, -17.3881,  -3.6098,  ...,  14.0951,   5.1724,  -4.6935],
        [-81.7309, -52.0284, -26.6246,  ...,  26.5677,  27.5659,  25.5121],
        ...,
        [ 52.5322,  50.7618,  40.0030,  ..., -21.5680, -31.2043, -38.4984],
        [-55.5871, -24.8599,  -6.5459,  ...,  16.2964,   8.2989,   0.2754],
        [-20.2194,   6.3777,  14.6765,  ...,   2.1708,  -8.0559, -19.8209]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 2, 0, 2, 3, 2, 4, 0, 5, 8, 4, 6, 2, 5, 1, 6, 6, 4, 6, 6, 6, 5, 7, 5,
        3, 5, 3, 2, 7, 8, 2, 5, 5, 0, 6, 6, 4, 2, 3, 3, 6, 5, 1, 1, 4, 3, 7, 0,
        1, 1, 4, 0, 4, 1, 8, 4, 2, 4, 4, 3, 7, 5, 1, 7, 0, 0, 6, 1, 1, 8, 0, 1,
        1, 3, 8, 6, 0, 0, 0, 1, 8, 6, 0, 6, 2, 4, 4, 1, 5, 4, 3, 0, 2, 0, 7, 8,
        2, 0, 2, 8, 8, 6, 8, 2, 3, 7, 5, 8, 5, 1, 2, 8, 1, 7, 1, 7, 6, 0, 0, 6,
        2, 4, 5, 4, 2, 4, 2, 2]) 
pred: tensor([[-76.2952, -44.1772, -20.8879,  ...,  25.9809,  23.3246,  15.3689],
        [ -1.3864,  25.0452,  28.5817,  ...,  -6.4740, -19.4943, -33.4698],
        [ 53.6859,  50.5062,  39.9617,  ..., -21.4130, -30.0038, -36.9104],
        ...,
        [-49.6862,  -9.8236,   5.4764,  ...,  11.2218,  -0.2134, -14.7819],
        [  1.1425,  23.3841,  26.8827,  ...,  -5.2591, -19.1317, -32.3824],
        [  6.5357,  26.1734,  27.6433,  ...,  -7.9816, -19.9589, -31.4964]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 1, 1, 6, 3, 5, 6, 8, 7, 5, 8, 2, 1, 7, 3, 1, 1, 0, 0, 3, 4, 4, 8, 3,
        7, 2, 6, 3, 1, 0, 5, 8, 6, 0, 8, 8, 8, 7, 8, 1, 0, 6, 1, 4, 3, 4, 8, 2,
        2, 4, 8, 7, 1, 2, 4, 6, 5, 6, 1, 6, 0, 4, 4, 3, 8, 4, 1, 1, 4, 3, 5, 1,
        3, 7, 2, 5, 5, 7, 2, 1, 5, 7, 1, 3, 0, 1, 7, 2, 2, 0, 6, 2, 0, 1, 6, 8,
        7, 8, 2, 0, 6, 5, 8, 8, 6, 7, 1, 8, 8, 7, 1, 0, 7, 3, 7, 5, 5, 4, 8, 6,
        5, 7, 1, 2, 1, 7, 7, 7]) 
pred: tensor([[-19.7186,  10.4445,  19.8878,  ...,   2.4885, -12.1232, -28.4022],
        [ 28.6239,  39.6523,  36.2189,  ..., -14.5840, -25.6839, -36.8626],
        [ 29.0174,  40.0808,  36.8663,  ..., -15.3481, -26.1805, -36.4943],
        ...,
        [-87.0672, -53.5931, -27.7479,  ...,  28.5327,  29.4519,  24.7348],
        [-85.7836, -53.3117, -29.3013,  ...,  28.7171,  29.0772,  24.3591],
        [-85.6379, -53.7299, -28.4970,  ...,  27.9638,  28.9134,  25.2712]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 0, 1, 0, 8, 7, 3, 4, 5, 4, 8, 1, 7, 8, 1, 8, 7, 7, 4, 0, 7, 1, 5, 0,
        8, 2, 8, 8, 7, 0, 2, 0, 4, 8, 0, 4, 4, 5, 2, 0, 7, 3, 6, 8, 8, 6, 8, 5,
        5, 8, 8, 5, 1, 6, 7, 7, 7, 2, 3, 1, 3, 0, 8, 5, 6, 1, 5, 5, 8, 1, 8, 2,
        8, 4, 6, 2, 6, 0, 5, 4, 8, 5, 4, 2, 4, 7, 1, 1, 4, 6, 7, 3, 2, 2, 3, 4,
        5, 2, 1, 4, 3, 2, 2, 6, 7, 0, 2, 2, 4, 2, 4, 0, 7, 2, 5, 6, 5, 3, 0, 0,
        3, 1, 4, 0, 4, 7, 1, 4]) 
pred: tensor([[-82.7313, -54.3313, -29.9238,  ...,  27.2924,  30.7344,  28.1204],
        [ 58.3335,  51.4446,  41.4220,  ..., -24.2377, -30.8482, -34.6368],
        [ 23.8442,  36.9167,  35.4263,  ..., -13.1594, -25.1735, -37.0309],
        ...,
        [-89.8768, -55.9957, -29.0033,  ...,  28.2926,  31.6072,  27.8391],
        [ 30.6428,  40.4541,  38.6288,  ..., -15.4075, -27.8770, -38.3566],
        [-53.1276,  -9.4725,   8.9609,  ...,  12.0455,  -0.8370, -17.2479]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 8, 4, 4, 6, 5, 1, 2, 0, 0, 7, 7, 8, 7, 3, 0, 7, 6, 8, 7, 7, 1, 3, 1,
        3, 5, 0, 7, 2, 7, 2, 1, 5, 3, 1, 0, 0, 8, 2, 6, 5, 4, 1, 1, 4, 3, 5, 3,
        6, 8, 0, 7, 6, 5, 4, 7, 4, 0, 1, 2, 2, 8, 2, 2, 0, 3, 0, 4, 6, 2, 3, 7,
        8, 6, 8, 5, 6, 8, 4, 2, 7, 4, 7, 8, 0, 7, 3, 2, 2, 8, 3, 0, 3, 3, 6, 4,
        1, 0, 8, 2, 8, 6, 8, 5, 3, 0, 3, 2, 4, 4, 0, 3, 0, 3, 1, 4, 8, 3, 7, 7,
        8, 7, 2, 6, 5, 0, 4, 1]) 
pred: tensor([[ -66.2009,  -36.4898,  -14.2648,  ...,   20.4485,   17.9928,
           11.4036],
        [-101.5709,  -74.8120,  -44.6248,  ...,   32.4425,   43.6310,
           48.5318],
        [ -26.0038,   -5.9704,    7.6091,  ...,    4.9134,   -0.1191,
           -6.6670],
        ...,
        [  56.3057,   52.8890,   44.9411,  ...,  -23.3186,  -33.7268,
          -40.2480],
        [ -36.9951,   -3.5635,   10.6067,  ...,    5.3834,   -3.1991,
          -13.5762],
        [  31.5276,   41.1092,   38.7602,  ...,  -17.4407,  -27.7725,
          -36.4821]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 3, 4, 3, 1, 5, 0, 2, 8, 7, 2, 5, 6, 7, 5, 0, 7, 6, 3, 2, 0, 0, 5, 3,
        1, 6, 0, 5, 4, 5, 4, 4, 6, 3, 0, 6, 2, 6, 2, 7, 1, 4, 5, 8, 5, 5, 7, 0,
        2, 0, 6, 8, 0, 2, 7, 1, 6, 4, 6, 7, 8, 5, 3, 5, 0, 3, 2, 3, 5, 0, 4, 5,
        3, 4, 1, 1, 4, 8, 5, 6, 7, 4, 5, 3, 3, 7, 2, 1, 8, 6, 4, 5, 7, 6, 5, 3,
        6, 2, 3, 2, 4, 6, 1, 6, 6, 0, 5, 6, 1, 0, 0, 3, 2, 6, 0, 5, 8, 4, 3, 7,
        1, 3, 8, 6, 2, 1, 4, 7]) 
pred: tensor([[ -18.7275,    7.9208,   18.5900,  ...,   -0.6265,   -9.9204,
          -20.1343],
        [ -16.7354,    9.0488,   18.9388,  ...,   -1.0077,  -10.7464,
          -20.9241],
        [ -52.4055,   -9.0724,    8.4026,  ...,   10.2307,   -1.2379,
          -16.2215],
        ...,
        [  29.5204,   38.0490,   36.8116,  ...,  -15.5505,  -24.7628,
          -33.2444],
        [ -43.7232,   -5.9267,    9.5878,  ...,    6.5062,   -2.7159,
          -14.1724],
        [-101.4450,  -61.2899,  -32.1526,  ...,   29.5820,   33.6722,
           30.2664]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 1, 1, 4, 1, 0, 8, 3, 7, 0, 0, 8, 6, 0, 5, 7, 8, 1, 1, 5, 4, 0, 5, 5,
        7, 2, 6, 1, 0, 0, 2, 5, 1, 3, 7, 5, 2, 6, 6, 6, 3, 4, 7, 5, 4, 1, 8, 8,
        7, 8, 0, 8, 2, 4, 0, 2, 7, 0, 7, 7, 2, 4, 0, 4, 7, 4, 5, 2, 2, 6, 3, 4,
        7, 7, 0, 2, 7, 0, 6, 7, 4, 0, 0, 7, 0, 5, 0, 0, 4, 4, 5, 7, 4, 4, 4, 8,
        1, 3, 4, 4, 1, 8, 6, 6, 1, 5, 4, 4, 5, 0, 7, 2, 3, 1, 2, 3, 8, 4, 3, 2,
        6, 0, 3, 4, 7, 6, 5, 1]) 
pred: tensor([[-45.4417,  -8.3227,   7.5437,  ...,  11.4032,  -1.1995, -16.7017],
        [ 34.0049,  42.1703,  39.0623,  ..., -16.0674, -29.2239, -40.5571],
        [ 26.3909,  36.8738,  35.5080,  ..., -13.9320, -23.7680, -33.9222],
        ...,
        [-63.2309, -35.8759, -15.2761,  ...,  20.0255,  18.5278,  13.0481],
        [-62.8331, -26.3155,  -5.2588,  ...,  17.1335,  11.6050,   0.9145],
        [ 32.4520,  39.5520,  37.1157,  ..., -15.5876, -26.8479, -36.7567]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 7, 1, 1, 2, 1, 4, 0, 3, 8, 4, 8, 0, 5, 8, 1, 5, 6, 5, 4, 2, 0, 2, 2,
        2, 8, 7, 3, 2, 2, 0, 6, 1, 0, 3, 2, 2, 4, 1, 7, 8, 3, 5, 0, 4, 7, 8, 8,
        4, 0, 4, 2, 1, 5, 3, 2, 6, 6, 3, 1, 4, 5, 1, 3, 5, 2, 3, 8, 2, 2, 6, 7,
        6, 0, 7, 3, 1, 4, 8, 0, 8, 4, 7, 0, 0, 3, 1, 3, 5, 1, 6, 3, 2, 6, 8, 8,
        8, 8, 2, 7, 7, 3, 2, 4, 6, 5, 4, 1, 0, 5, 6, 6, 7, 0, 8, 0, 6, 7, 3, 6,
        2, 0, 2, 3, 7, 5, 2, 7]) 
pred: tensor([[-65.2315, -25.2920,  -6.3805,  ...,  20.2454,   9.8999,  -4.4171],
        [-86.7789, -56.8179, -32.4683,  ...,  30.7013,  31.0268,  27.5795],
        [ 31.7533,  41.8300,  37.0106,  ..., -15.8884, -28.0628, -38.9900],
        ...,
        [-57.2696, -24.7900,  -6.9499,  ...,  16.5861,  10.4935,   1.4600],
        [  2.6872,  27.8797,  31.9814,  ...,  -6.3853, -23.5897, -39.6932],
        [-82.8207, -55.1964, -31.8080,  ...,  29.8801,  31.5213,  27.4424]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 3, 6, 8, 1, 5, 5, 2, 8, 2, 7, 0, 0, 6, 4, 5, 2, 5, 4, 1, 0, 1, 5, 7,
        6, 1, 5, 2, 1, 8, 8, 6, 1, 8, 3, 8, 4, 2, 4, 3, 1, 7, 7, 3, 6, 1, 1, 1,
        0, 7, 5, 3, 0, 3, 7, 5, 2, 3, 0, 6, 6, 0, 3, 6, 0, 6, 2, 3, 1, 5, 0, 6,
        6, 4, 0, 2, 8, 0, 3, 6, 0, 4, 3, 5, 1, 2, 5, 1, 4, 3, 8, 3, 2, 4, 6, 3,
        7, 3, 0, 5, 6, 3, 8, 4, 6, 8, 6, 2, 8, 3, 8, 0, 0, 6, 7, 8, 3, 6, 8, 1,
        1, 6, 5, 0, 1, 5, 6, 7]) 
pred: tensor([[-92.7085, -62.2063, -34.9658,  ...,  33.1254,  35.0220,  32.1426],
        [-18.9680,   8.8150,  18.0069,  ...,   0.2299,  -8.8229, -20.2798],
        [-77.5912, -40.8640, -18.2254,  ...,  25.7322,  19.6170,   9.9879],
        ...,
        [-67.9520, -31.3923, -10.9236,  ...,  20.7797,  13.7327,   3.4181],
        [-77.4288, -39.1065, -16.8080,  ...,  23.8117,  19.3720,   9.9589],
        [-88.4056, -60.6449, -35.0322,  ...,  32.1540,  34.1335,  31.8992]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 3, 6, 1, 0, 5, 3, 7, 1, 6, 8, 5, 8, 8, 8, 1, 4, 6, 8, 4, 7, 5, 0, 8,
        7, 4, 8, 2, 6, 6, 2, 8, 0, 0, 1, 2, 0, 0, 0, 8, 5, 2, 1, 4, 1, 7, 3, 8,
        1, 4, 5, 7, 1, 0, 0, 7, 7, 5, 0, 3, 2, 5, 8, 7, 5, 8, 4, 6, 8, 8, 6, 1,
        6, 1, 7, 7, 4, 4, 4, 0, 1, 3, 4, 5, 3, 2, 6, 6, 4, 7, 6, 2, 4, 7, 0, 4,
        0, 1, 4, 2, 2, 4, 6, 4, 5, 1, 3, 1, 2, 7, 8, 5, 0, 4, 5, 5, 7, 2, 3, 7,
        8, 5, 8, 6, 0, 8, 3, 6]) 
pred: tensor([[-7.6677e+01, -3.9669e+01, -1.7426e+01,  ...,  2.4436e+01,
          1.8555e+01,  9.0734e+00],
        [-2.2441e+01,  9.3247e+00,  1.9452e+01,  ...,  2.3036e+00,
         -1.1037e+01, -2.5483e+01],
        [-6.4795e+01, -3.6161e+01, -1.6792e+01,  ...,  2.0467e+01,
          1.8745e+01,  1.2541e+01],
        ...,
        [-1.0350e+02, -7.7406e+01, -4.7796e+01,  ...,  3.6709e+01,
          4.5378e+01,  4.8912e+01],
        [-1.5972e+01,  1.0473e+01,  1.9149e+01,  ..., -8.5989e-02,
         -1.0316e+01, -2.2497e+01],
        [-8.0131e+01, -4.3395e+01, -2.0105e+01,  ...,  2.5337e+01,
          2.1169e+01,  1.3256e+01]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 6, 6, 4, 6, 2, 5, 8, 0, 8, 0, 2, 7, 2, 8, 3, 6, 0, 1, 4, 0, 1, 7, 8,
        3, 6, 0, 1, 7, 6, 3, 8, 6, 0, 5, 4, 5, 0, 3, 8, 1, 1, 4, 4, 7, 5, 1, 5,
        1, 5, 7, 5, 6, 0, 1, 5, 8, 7, 2, 7, 0, 5, 3, 3, 5, 2, 7, 6, 1, 2, 6, 5,
        2, 2, 0, 4, 4, 7, 8, 8, 0, 4, 5, 7, 4, 4, 8, 5, 4, 1, 2, 4, 2, 0, 4, 3,
        6, 5, 0, 8, 0, 3, 5, 7, 0, 0, 4, 5, 2, 3, 7, 5, 3, 3, 7, 2, 5, 6, 3, 4,
        0, 6, 4, 7, 8, 3, 3, 0]) 
pred: tensor([[-75.8717, -43.2063, -19.0484,  ...,  22.7843,  22.1573,  16.6073],
        [-70.8952, -39.2960, -17.3010,  ...,  22.4702,  19.4749,  12.1849],
        [-74.1373, -37.4245, -15.6102,  ...,  22.0381,  17.4196,   8.5944],
        ...,
        [-15.8589,  10.9483,  20.4436,  ...,  -0.5231, -12.5871, -24.5114],
        [-14.7257,  15.6100,  24.1329,  ...,   1.0580, -16.5186, -34.8216],
        [ 60.0078,  55.3593,  45.4592,  ..., -25.8670, -33.5752, -38.9561]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 3, 4, 1, 5, 3, 2, 7, 2, 7, 6, 8, 5, 6, 7, 0, 4, 3, 7, 5, 8, 5, 3, 7,
        5, 0, 8, 1, 7, 4, 0, 7, 3, 5, 3, 0, 1, 7, 8, 7, 4, 4, 0, 0, 5, 2, 8, 2,
        5, 1, 4, 0, 2, 5, 0, 8, 2, 1, 6, 2, 6, 5, 2, 1, 1, 3, 8, 1, 8, 6, 8, 0,
        5, 6, 2, 6, 5, 4, 5, 8, 0, 3, 4, 5, 8, 4, 7, 3, 3, 8, 0, 8, 4, 0, 5, 2,
        4, 2, 2, 8, 2, 8, 1, 2, 3, 2, 1, 6, 1, 7, 7, 7, 4, 2, 1, 1, 1, 6, 8, 7,
        7, 3, 0, 7, 7, 7, 3, 1]) 
pred: tensor([[-116.2692,  -84.2624,  -51.0722,  ...,   37.3858,   51.1385,
           53.9037],
        [ -30.8129,    8.3156,   21.8970,  ...,    2.4940,  -12.4934,
          -29.3676],
        [ -39.0983,   -5.2791,   10.0023,  ...,    8.7746,   -2.0224,
          -16.8889],
        ...,
        [ -91.0058,  -57.3862,  -31.4911,  ...,   28.1689,   32.7729,
           28.8667],
        [ -26.6515,    5.7026,   17.0771,  ...,    1.2274,   -7.0749,
          -19.7087],
        [  33.0754,   39.9224,   37.8218,  ...,  -16.8710,  -25.3388,
          -34.0569]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 5, 0, 3, 5, 3, 5, 6, 3, 0, 2, 1, 2, 0, 5, 6, 4, 2, 7, 6, 1, 7, 5, 5,
        7, 4, 7, 7, 5, 3, 2, 7, 4, 6, 1, 8, 3, 7, 3, 3, 6, 3, 2, 3, 8, 5, 4, 1,
        8, 2, 1, 7, 6, 0, 1, 1, 6, 5, 6, 3, 4, 5, 7, 2, 8, 0, 5, 5, 1, 0, 7, 7,
        6, 4, 6, 8, 0, 5, 1, 0, 2, 2, 1, 2, 3, 4, 4, 8, 0, 3, 1, 5, 1, 8, 4, 5,
        2, 0, 5, 5, 2, 8, 0, 6, 1, 3, 7, 1, 1, 5, 1, 3, 3, 3, 4, 5, 0, 4, 0, 7,
        7, 0, 1, 4, 8, 3, 7, 6]) 
pred: tensor([[-83.8631, -43.6413, -18.9444,  ...,  24.1093,  23.5743,  14.0078],
        [-63.9589, -23.0790,  -3.0183,  ...,  15.9429,   9.2094,  -4.4202],
        [ 64.9706,  61.4358,  51.9954,  ..., -27.6595, -39.0921, -47.2339],
        ...,
        [-18.0919,  15.3117,  25.0196,  ...,  -1.0981, -15.8080, -32.4526],
        [-91.9169, -59.6542, -32.9499,  ...,  28.8198,  34.5158,  31.2201],
        [-72.8291, -34.4092, -12.4599,  ...,  20.4749,  17.1857,   6.7001]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 0, 4, 5, 6, 3, 8, 8, 2, 3, 1, 0, 4, 4, 1, 5, 5, 3, 5, 4, 6, 0, 5, 1,
        1, 0, 6, 3, 6, 3, 4, 0, 4, 6, 5, 7, 6, 1, 4, 3, 1, 4, 0, 0, 8, 0, 1, 4,
        6, 2, 7, 4, 0, 6, 7, 3, 4, 5, 4, 2, 5, 0, 2, 3, 0, 1, 6, 6, 5, 1, 1, 4,
        0, 5, 8, 6, 1, 3, 7, 8, 8, 0, 7, 8, 0, 2, 3, 6, 0, 3, 2, 6, 4, 2, 8, 4,
        3, 6, 0, 6, 6, 3, 3, 4, 6, 5, 3, 3, 4, 7, 3, 4, 6, 1, 4, 8, 0, 8, 0, 0,
        1, 7, 0, 0, 5, 8, 5, 2]) 
pred: tensor([[   6.0496,   25.6877,   30.4351,  ...,   -8.8112,  -19.0293,
          -30.0098],
        [  66.4929,   61.5384,   49.0789,  ...,  -27.2368,  -38.7982,
          -46.7867],
        [ -43.1361,   -4.5367,   10.8396,  ...,    8.6829,   -5.1930,
          -20.6810],
        ...,
        [-105.0058,  -79.0531,  -50.1571,  ...,   36.5855,   46.7209,
           50.5440],
        [ -58.6465,  -24.7583,   -6.8784,  ...,   18.0780,    9.7122,
           -2.6986],
        [   2.0606,   25.0903,   28.2659,  ...,   -7.1888,  -20.3602,
          -32.7083]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 4, 5, 1, 0, 7, 4, 0, 3, 6, 3, 7, 5, 2, 2, 3, 5, 2, 3, 1, 2, 1, 8, 0,
        0, 5, 7, 3, 7, 3, 3, 0, 0, 5, 2, 1, 2, 2, 1, 5, 3, 4, 0, 6, 8, 3, 7, 5,
        8, 8, 4, 2, 6, 0, 0, 7, 0, 0, 7, 5, 0, 2, 0, 1, 0, 2, 2, 2, 1, 5, 3, 5,
        8, 7, 6, 5, 1, 7, 7, 7, 4, 5, 4, 7, 2, 4, 6, 4, 0, 8, 7, 8, 1, 8, 8, 2,
        6, 7, 6, 0, 4, 6, 6, 0, 1, 8, 5, 4, 3, 1, 5, 8, 1, 3, 7, 7, 8, 5, 5, 4,
        8, 5, 3, 0, 1, 5, 6, 5]) 
pred: tensor([[-81.2557, -44.4786, -21.5729,  ...,  26.8158,  19.9172,  11.9559],
        [-33.5830,  -8.3016,   3.8180,  ...,   6.4263,  -0.2208,  -6.1137],
        [-53.3318, -17.7617,  -1.8124,  ...,  15.4473,   3.8275,  -9.0047],
        ...,
        [-62.1693, -24.5595,  -5.9158,  ...,  16.7381,   7.7485,  -2.2914],
        [-84.9720, -43.6774, -20.2688,  ...,  25.1990,  19.7581,  12.0669],
        [-57.6494, -24.5018,  -7.7698,  ...,  16.5016,   7.4837,  -0.4798]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 5, 4, 5, 4, 2, 5, 1, 5, 6, 7, 2, 2, 2, 4, 7, 5, 1, 2, 3, 6, 6, 7, 6,
        2, 4, 4, 2, 4, 8, 0, 8, 5, 1, 7, 5, 0, 5, 8, 0, 8, 3, 8, 0, 1, 4, 8, 5,
        6, 0, 2, 0, 2, 0, 8, 0, 1, 5, 3, 3, 6, 0, 6, 0, 0, 0, 4, 8, 8, 5, 8, 8,
        3, 0, 8, 8, 2, 1, 3, 6, 1, 4, 8, 6, 2, 6, 4, 3, 0, 3, 1, 4, 0, 8, 5, 1,
        7, 1, 2, 2, 3, 4, 8, 0, 7, 6, 2, 6, 8, 5, 8, 7, 1, 8, 0, 7, 2, 2, 5, 0,
        2, 4, 5, 6, 3, 0, 5, 5]) 
pred: tensor([[-1.7122e+01,  1.4418e+01,  2.3108e+01,  ...,  2.3259e+00,
         -1.5576e+01, -3.4728e+01],
        [-7.0121e+01, -2.6389e+01, -5.7464e+00,  ...,  2.0853e+01,
          9.1762e+00, -6.8542e+00],
        [-3.8694e+01, -7.8478e+00,  6.0800e+00,  ...,  1.0222e+01,
         -3.4022e-02, -1.3244e+01],
        ...,
        [ 6.7388e+01,  6.1261e+01,  4.8909e+01,  ..., -2.6394e+01,
         -3.9442e+01, -4.7818e+01],
        [-6.3771e+01, -2.1825e+01, -2.9623e+00,  ...,  1.7558e+01,
          6.5351e+00, -7.5412e+00],
        [-5.4944e+01, -2.6153e+01, -8.0234e+00,  ...,  1.6814e+01,
          1.1753e+01,  3.5321e+00]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 1, 7, 7, 3, 7, 4, 5, 2, 2, 0, 0, 6, 2, 6, 2, 0, 5, 2, 4, 4, 7, 5, 1,
        2, 6, 2, 4, 8, 3, 5, 0, 8, 6, 3, 4, 4, 0, 6, 8, 2, 5, 1, 1, 5, 2, 3, 7,
        8, 6, 2, 2, 1, 8, 8, 6, 6, 5, 6, 7, 2, 7, 1, 1, 1, 0, 4, 0, 1, 1, 1, 5,
        8, 3, 0, 8, 8, 1, 1, 3, 7, 8, 2, 3, 7, 8, 1, 6, 2, 7, 6, 3, 7, 4, 8, 4,
        7, 8, 2, 5, 0, 8, 7, 7, 8, 2, 4, 8, 7, 2, 7, 6, 7, 0, 3, 4, 4, 8, 6, 4,
        2, 1, 0, 7, 2, 8, 4, 8]) 
pred: tensor([[  17.5501,   30.4115,   31.6339,  ...,  -11.4701,  -22.0082,
          -32.4401],
        [  43.0673,   51.5881,   47.6883,  ...,  -19.5241,  -33.9734,
          -48.8838],
        [ -90.3274,  -61.2397,  -35.6522,  ...,   31.7251,   36.7984,
           32.7923],
        ...,
        [-111.5899,  -84.7417,  -54.2591,  ...,   39.6222,   53.5137,
           56.4862],
        [ -37.3890,   -4.9649,    8.4356,  ...,   10.2507,   -1.5493,
          -18.2728],
        [-117.5160,  -87.8173,  -55.3125,  ...,   41.0619,   55.3241,
           57.8355]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 8, 6, 1, 3, 0, 4, 1, 5, 1, 5, 8, 2, 4, 6, 1, 8, 7, 5, 8, 5, 7, 6, 4,
        8, 7, 7, 0, 8, 5, 6, 0, 2, 0, 5, 4, 0, 4, 8, 3, 6, 0, 7, 2, 0, 3, 6, 1,
        1, 6, 6, 8, 6, 4, 0, 2, 0, 0, 7, 0, 5, 4, 0, 6, 0, 7, 0, 5, 1, 4, 8, 1,
        0, 4, 8, 2, 6, 0, 6, 6, 5, 4, 1, 8, 3, 0, 3, 6, 5, 6, 1, 5, 2, 0, 3, 5,
        2, 5, 1, 2, 7, 5, 2, 6, 3, 4, 2, 5, 6, 8, 3, 2, 2, 8, 2, 4, 2, 7, 3, 7,
        8, 8, 2, 3, 6, 4, 7, 8]) 
pred: tensor([[ -75.6554,  -39.7395,  -17.8156,  ...,   23.6085,   20.6062,
           10.7459],
        [-107.2409,  -82.1357,  -52.5146,  ...,   37.7523,   51.5904,
           55.5915],
        [ -77.7102,  -42.0677,  -19.6555,  ...,   24.5228,   21.9763,
           13.0900],
        ...,
        [ -36.0602,  -12.1572,    2.1783,  ...,    9.3284,    2.8063,
           -5.5805],
        [ -98.4694,  -63.7371,  -36.4125,  ...,   32.1223,   38.0074,
           34.1780],
        [-113.5848,  -85.4546,  -53.8879,  ...,   38.8606,   53.1423,
           57.2606]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 7, 2, 2, 4, 8, 6, 7, 7, 0, 4, 3, 7, 5, 7, 6, 4, 5, 1, 1, 5, 4, 6, 4,
        0, 8, 1, 6, 6, 3, 2, 2, 0, 3, 4, 6, 6, 7, 1, 0, 0, 7, 1, 8, 7, 1, 3, 8,
        8, 2, 4, 1, 5, 3, 8, 6, 6, 0, 4, 8, 5, 5, 3, 4, 8, 7, 7, 1, 0, 7, 5, 5,
        5, 2, 6, 0, 1, 6, 2, 5, 6, 8, 5, 5, 6, 0, 1, 7, 0, 1, 5, 8, 8, 3, 6, 4,
        0, 2, 5, 4, 1, 5, 7, 1, 5, 1, 2, 0, 7, 2, 4, 1, 3, 3, 4, 8, 8, 7, 6, 5,
        8, 5, 3, 6, 0, 2, 5, 7]) 
pred: tensor([[-89.7755, -60.4697, -35.3600,  ...,  29.9549,  33.3170,  32.5621],
        [-88.6848, -60.2675, -35.9701,  ...,  30.2559,  32.0819,  31.5929],
        [ 14.5350,  32.2678,  35.8253,  ..., -11.9042, -25.2331, -36.7379],
        ...,
        [  5.6929,  25.3112,  30.2952,  ..., -10.0749, -21.1728, -30.4468],
        [-62.1635, -21.9214,  -2.4287,  ...,  14.6332,   6.1930,  -4.1941],
        [-98.3301, -64.2883, -37.7884,  ...,  31.9557,  34.6491,  33.1888]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 6, 6, 0, 1, 6, 8, 2, 3, 2, 1, 4, 8, 0, 8, 3, 1, 4, 7, 2, 8, 5, 1, 8,
        8, 2, 1, 1, 8, 7, 1, 8, 0, 6, 8, 5, 8, 0, 3, 0, 3, 0, 0, 5, 4, 8, 8, 4,
        2, 0, 7, 4, 1, 1, 0, 3, 7, 8, 7, 7, 0, 1, 0, 3, 7, 7, 7, 5, 0, 1, 0, 4,
        7, 0, 8, 8, 2, 8, 3, 1, 8, 6, 5, 2, 3, 8, 1, 6, 4, 8, 1, 3, 4, 2, 8, 6,
        1, 6, 0, 1, 3, 4, 7, 0, 6, 8, 0, 0, 6, 3, 0, 2, 5, 5, 1, 3, 2, 4, 8, 3,
        2, 5, 7, 8, 8, 0, 4, 6]) 
pred: tensor([[ 21.7380,  33.3293,  33.8248,  ..., -12.4288, -27.1056, -37.2876],
        [-92.6082, -48.3195, -23.5316,  ...,  27.6036,  22.1033,  13.8423],
        [-90.7112, -47.0948, -22.2479,  ...,  26.8705,  22.0419,  13.4611],
        ...,
        [ 74.3531,  66.4292,  55.9651,  ..., -30.9864, -44.4382, -51.4911],
        [-49.4249,  -8.2983,   8.5131,  ...,  11.1625,  -4.6461, -20.5233],
        [-84.5551, -46.7278, -23.7881,  ...,  26.8914,  21.9100,  14.7674]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 4, 2, 5, 0, 2, 8, 6, 0, 1, 1, 1, 6, 8, 4, 7, 7, 5, 6, 4, 7, 5, 6, 7,
        1, 2, 1, 7, 6, 0, 7, 8, 4, 5, 8, 6, 6, 1, 1, 0, 1, 7, 7, 0, 6, 0, 2, 3,
        8, 8, 5, 3, 3, 2, 6, 3, 8, 6, 3, 5, 6, 3, 1, 2, 6, 8, 8, 5, 4, 5, 6, 5,
        7, 4, 6, 2, 1, 3, 3, 4, 7, 5, 5, 6, 6, 8, 7, 4, 4, 2, 0, 2, 3, 2, 4, 3,
        7, 4, 0, 8, 5, 0, 3, 8, 7, 6, 8, 7, 8, 6, 4, 0, 0, 8, 1, 7, 0, 8, 1, 3,
        8, 6, 5, 1, 1, 8, 8, 4]) 
pred: tensor([[-101.8884,  -65.1579,  -39.1219,  ...,   34.1508,   35.9011,
           31.4425],
        [ -39.2963,   -7.3365,    4.3576,  ...,    9.2984,   -2.5342,
          -15.5330],
        [   2.6450,   29.9661,   35.0201,  ...,   -9.4667,  -24.7061,
          -40.5050],
        ...,
        [-116.6379,  -88.2904,  -58.9470,  ...,   41.8283,   52.0014,
           56.0603],
        [-112.1778,  -85.0291,  -56.6885,  ...,   40.4432,   50.1062,
           53.8724],
        [ -45.2259,  -17.1573,   -3.4221,  ...,   12.2609,    3.8347,
           -5.2526]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 3, 7, 8, 7, 5, 0, 6, 2, 6, 6, 8, 1, 6, 3, 6, 6, 8, 8, 1, 0, 4, 6, 5,
        7, 4, 5, 0, 2, 3, 4, 2, 2, 3, 3, 8, 5, 0, 5, 5, 1, 1, 8, 0, 1, 7, 7, 4,
        3, 1, 6, 1, 1, 7, 1, 7, 2, 1, 6, 5, 7, 1, 7, 3, 6, 5, 7, 4, 1, 5, 5, 0,
        5, 3, 8, 3, 4, 8, 3, 6, 1, 2, 8, 1, 0, 7, 7, 1, 6, 7, 2, 7, 0, 2, 4, 4,
        2, 6, 8, 3, 3, 4, 1, 6, 4, 3, 3, 6, 5, 0, 6, 2, 1, 3, 1, 2, 1, 8, 1, 3,
        7, 5, 5, 4, 1, 2, 8, 8]) 
pred: tensor([[ -28.0988,   11.7592,   23.4958,  ...,    3.1289,  -15.0865,
          -35.1996],
        [ -12.6296,    7.2303,   14.8053,  ...,    1.1017,   -7.5770,
          -18.5640],
        [-102.8236,  -66.6905,  -39.4679,  ...,   35.0377,   38.2473,
           33.3396],
        ...,
        [  12.9847,   29.6870,   30.7932,  ...,   -9.0738,  -23.0716,
          -36.5492],
        [-113.1200,  -86.6154,  -57.4109,  ...,   41.2379,   53.3096,
           56.0433],
        [-110.4941,  -83.2010,  -54.6239,  ...,   39.8667,   50.7378,
           52.6192]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 3, 0, 8, 2, 0, 7, 1, 8, 3, 4, 5, 8, 0, 5, 8, 0, 8, 7, 5, 8, 8, 2, 1,
        0, 3, 6, 2, 0, 1, 3, 4, 8, 2, 4, 4, 0, 7, 7, 0, 0, 1, 0, 2, 0, 3, 0, 1,
        6, 0, 3, 4, 4, 5, 0, 4, 0, 6, 7, 2, 2, 2, 7, 8, 1, 6, 6, 4, 7, 0, 3, 1,
        2, 7, 6, 7, 0, 5, 5, 3, 8, 1, 8, 3, 2, 2, 7, 8, 4, 5, 3, 2, 2, 0, 4, 3,
        2, 3, 3, 1, 0, 0, 1, 1, 8, 7, 7, 6, 2, 8, 3, 0, 0, 1, 5, 5, 4, 6, 1, 3,
        3, 2, 5, 2, 6, 2, 4, 6]) 
pred: tensor([[ 73.4518,  68.8345,  56.5679,  ..., -30.9969, -42.5990, -52.3461],
        [-16.0443,  12.2420,  20.8118,  ...,   1.1138, -12.9548, -29.3072],
        [ 69.6767,  66.9377,  55.1006,  ..., -29.9941, -42.0889, -52.0270],
        ...,
        [ 11.7074,  34.9497,  36.9015,  ...,  -9.8692, -27.8481, -45.2585],
        [-52.6908,  -6.3839,  11.2971,  ...,  10.6813,  -3.3096, -21.7367],
        [-81.7855, -45.5872, -23.3180,  ...,  26.7228,  23.2420,  13.3537]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 1, 1, 2, 4, 8, 6, 1, 4, 0, 8, 0, 7, 5, 0, 7, 5, 3, 1, 3, 5, 5, 1, 6,
        4, 5, 5, 4, 6, 0, 3, 0, 0, 1, 4, 4, 7, 6, 6, 5, 5, 3, 5, 4, 3, 7, 4, 3,
        8, 0, 6, 3, 7, 7, 0, 7, 1, 8, 1, 6, 7, 4, 8, 4, 5, 2, 4, 4, 5, 7, 0, 5,
        2, 0, 8, 4, 0, 7, 1, 4, 8, 3, 1, 3, 0, 0, 4, 6, 2, 6, 7, 2, 1, 0, 1, 7,
        0, 0, 1, 6, 8, 0, 0, 3, 5, 3, 2, 3, 5, 8, 8, 3, 4, 5, 3, 8, 2, 8, 3, 0,
        1, 7, 3, 3, 4, 8, 7, 0]) 
pred: tensor([[ -84.2223,  -42.0979,  -18.1575,  ...,   24.3828,   21.0409,
           11.0474],
        [  46.8992,   54.2851,   50.2199,  ...,  -21.8719,  -36.9904,
          -49.1921],
        [  45.3528,   52.3081,   48.2112,  ...,  -21.8368,  -35.7488,
          -46.2288],
        ...,
        [-105.0501,  -81.2061,  -52.4368,  ...,   37.7390,   48.3671,
           53.0501],
        [ -96.4127,  -62.9063,  -37.6699,  ...,   32.2547,   35.6400,
           32.0706],
        [  74.0611,   66.1877,   54.7732,  ...,  -31.5350,  -41.2723,
          -46.8089]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 4, 2, 0, 7, 0, 7, 8, 0, 2, 1, 8, 8, 3, 4, 6, 3, 8, 1, 5, 2, 6, 4, 0,
        5, 4, 7, 1, 2, 2, 0, 3, 8, 7, 7, 6, 0, 7, 3, 2, 8, 4, 6, 3, 0, 5, 0, 1,
        1, 1, 0, 1, 2, 4, 4, 8, 6, 5, 1, 5, 0, 2, 2, 6, 1, 3, 7, 8, 0, 0, 7, 7,
        5, 5, 1, 1, 5, 4, 0, 3, 3, 0, 2, 5, 5, 5, 3, 3, 3, 0, 3, 2, 1, 5, 6, 8,
        7, 4, 2, 2, 8, 2, 8, 3, 1, 8, 8, 8, 8, 2, 6, 4, 5, 3, 4, 5, 4, 8, 0, 8,
        1, 0, 0, 7, 5, 3, 0, 2]) 
pred: tensor([[-38.1792,  -6.7900,   6.9446,  ...,   8.6556,  -0.8051, -13.8909],
        [-21.3488,  -2.0786,   8.5917,  ...,   4.6051,  -1.9545, -10.8326],
        [ 14.7946,  33.2396,  35.6594,  ..., -11.7056, -24.1589, -36.7262],
        ...,
        [ -6.4855,  16.9440,  24.2941,  ...,  -3.8059, -17.3474, -28.5706],
        [ 70.1734,  64.6578,  54.4573,  ..., -29.7680, -41.2515, -47.7182],
        [ 10.3206,  32.1767,  35.2968,  ..., -11.7648, -23.7502, -36.5899]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 4, 6, 0, 8, 6, 5, 8, 6, 1, 1, 8, 6, 3, 5, 6, 4, 3, 8, 6, 7, 8, 1, 4,
        7, 8, 3, 0, 3, 8, 7, 7, 6, 3, 7, 2, 5, 1, 5, 0, 6, 4, 8, 8, 0, 7, 8, 4,
        6, 8, 3, 8, 0, 6, 5, 1, 2, 6, 3, 6, 3, 8, 1, 2, 7, 2, 1, 2, 7, 4, 0, 2,
        1, 7, 2, 6, 5, 0, 0, 3, 5, 6, 5, 8, 4, 4, 2, 7, 1, 6, 6, 5, 2, 7, 8, 6,
        0, 3, 1, 3, 5, 3, 6, 1, 3, 1, 3, 4, 1, 8, 3, 2, 6, 2, 6, 4, 3, 3, 1, 3,
        5, 1, 1, 2, 4, 3, 0, 1]) 
pred: tensor([[ 11.3675,  32.8546,  35.8776,  ...,  -8.9606, -27.0741, -41.7165],
        [-36.2214,  -7.2445,   6.6269,  ...,  10.0951,  -2.9403, -16.0407],
        [-75.9926, -46.6761, -23.5731,  ...,  24.8648,  22.8777,  19.1686],
        ...,
        [-13.4906,  15.5785,  23.3055,  ...,  -2.8579, -15.2396, -28.7881],
        [ 76.9192,  70.8991,  60.0466,  ..., -32.2551, -47.2876, -55.2089],
        [ 44.9173,  52.1101,  47.0621,  ..., -22.7342, -33.6759, -43.1206]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 0, 6, 4, 8, 0, 8, 8, 1, 2, 7, 7, 1, 1, 6, 1, 4, 2, 6, 8, 3, 1, 0, 1,
        7, 4, 4, 7, 6, 7, 4, 7, 6, 5, 6, 3, 2, 5, 2, 1, 6, 1, 6, 6, 2, 2, 2, 7,
        6, 8, 8, 6, 6, 2, 5, 6, 3, 7, 2, 2, 1, 6, 7, 1, 8, 3, 8, 3, 5, 4, 5, 2,
        4, 3, 2, 6, 3, 6, 4, 0, 5, 4, 0, 7, 2, 5, 3, 7, 4, 3, 2, 8, 7, 5, 0, 8,
        0, 6, 2, 3, 8, 2, 3, 4, 2, 8, 0, 3, 0, 3, 2, 1, 1, 3, 3, 0, 4, 2, 4, 4,
        4, 6, 6, 1, 7, 8, 4, 7]) 
pred: tensor([[ 7.5316e+01,  7.1376e+01,  6.0646e+01,  ..., -3.1857e+01,
         -4.7739e+01, -5.6915e+01],
        [ 7.5028e+01,  6.7648e+01,  5.5941e+01,  ..., -3.1242e+01,
         -4.1800e+01, -4.8773e+01],
        [-9.0513e+01, -4.8416e+01, -2.4153e+01,  ...,  2.7404e+01,
          2.4494e+01,  1.4846e+01],
        ...,
        [-1.0943e+02, -8.4241e+01, -5.5480e+01,  ...,  3.9560e+01,
          5.1355e+01,  5.4438e+01],
        [-3.9527e+01,  9.5245e-02,  1.2088e+01,  ...,  1.0031e+01,
         -8.4812e+00, -2.9463e+01],
        [-1.0059e+02, -6.6934e+01, -4.0393e+01,  ...,  3.4124e+01,
          3.8947e+01,  3.4660e+01]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 5, 8, 2, 0, 5, 3, 3, 7, 1, 3, 2, 1, 5, 5, 1, 0, 2, 4, 8, 4, 5, 8, 6,
        3, 6, 0, 7, 6, 6, 0, 4, 7, 5, 0, 2, 8, 5, 1, 1, 6, 1, 0, 3, 7, 6, 8, 6,
        4, 0, 8, 4, 8, 8, 3, 6, 8, 1, 8, 5, 1, 3, 0, 1, 4, 3, 0, 3, 4, 6, 0, 6,
        4, 0, 4, 2, 7, 3, 7, 5, 1, 6, 2, 3, 0, 0, 1, 0, 8, 7, 7, 7, 2, 5, 0, 5,
        3, 3, 5, 1, 2, 5, 2, 0, 5, 6, 7, 1, 8, 3, 1, 7, 7, 5, 5, 1, 1, 0, 8, 0,
        6, 5, 2, 4, 7, 6, 6, 6]) 
pred: tensor([[-114.6081,  -87.0542,  -58.3758,  ...,   41.6174,   53.6829,
           55.0423],
        [ -73.2279,  -29.5162,   -9.8874,  ...,   21.5699,   11.9176,
           -3.7105],
        [-113.3388,  -85.8624,  -56.8137,  ...,   40.8426,   53.0197,
           54.4435],
        ...,
        [ -75.4147,  -41.7410,  -20.6886,  ...,   26.2912,   21.2556,
            9.8462],
        [ -88.2855,  -48.3360,  -25.5687,  ...,   28.6320,   25.4291,
           14.4073],
        [ -92.8378,  -48.3508,  -23.8698,  ...,   28.6835,   25.6291,
           12.9165]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 3, 8, 4, 0, 6, 1, 0, 1, 8, 8, 2, 8, 1, 8, 4, 1, 3, 3, 1, 4, 8, 0, 3,
        6, 6, 5, 2, 4, 6, 8, 2, 8, 7, 6, 3, 2, 2, 8, 5, 4, 4, 0, 6, 1, 8, 1, 7,
        2, 2, 8, 5, 6, 8, 8, 6, 1, 5, 2, 0, 7, 3, 1, 2, 7, 7, 0, 2, 3, 6, 3, 5,
        7, 8, 2, 3, 6, 6, 0, 2, 2, 6, 5, 5, 4, 6, 2, 5, 6, 2, 0, 8, 2, 0, 8, 3,
        6, 0, 8, 6, 7, 1, 8, 1, 5, 8, 1, 8, 3, 7, 5, 5, 0, 7, 0, 5, 0, 7, 1, 1,
        7, 1, 5, 3, 7, 6, 1, 5]) 
pred: tensor([[ -27.0338,   11.6110,   22.8773,  ...,    1.9445,  -15.9321,
          -33.6622],
        [  -7.6711,   11.8587,   19.8531,  ...,   -1.3580,  -12.7736,
          -23.6447],
        [-112.9944,  -86.7743,  -59.3948,  ...,   40.9797,   52.3852,
           55.5381],
        ...,
        [ -93.4718,  -49.2736,  -24.9654,  ...,   27.6186,   24.8108,
           15.0399],
        [  34.4157,   49.4643,   48.4483,  ...,  -18.5335,  -36.3861,
          -50.1528],
        [ -75.3674,  -28.0057,   -7.9630,  ...,   19.4090,   11.1340,
           -3.4668]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 7, 0, 8, 0, 8, 6, 1, 7, 8, 2, 4, 0, 3, 4, 2, 8, 8, 7, 6, 5, 2, 2, 7,
        2, 3, 6, 3, 2, 2, 2, 6, 5, 0, 8, 5, 1, 5, 0, 2, 0, 0, 2, 2, 6, 1, 4, 1,
        8, 1, 5, 2, 4, 7, 2, 6, 8, 3, 8, 8, 8, 2, 1, 0, 8, 5, 2, 8, 7, 1, 5, 7,
        6, 7, 3, 7, 0, 4, 3, 6, 0, 8, 4, 2, 2, 0, 3, 0, 0, 4, 0, 7, 3, 0, 8, 6,
        6, 4, 5, 0, 1, 4, 6, 7, 2, 6, 6, 8, 6, 5, 0, 2, 6, 1, 1, 6, 5, 6, 8, 4,
        6, 4, 3, 3, 7, 6, 4, 8]) 
pred: tensor([[  20.9817,   36.6380,   38.5122,  ...,  -12.7160,  -28.2065,
          -41.6717],
        [-105.9682,  -71.2524,  -44.7769,  ...,   36.1924,   38.8425,
           36.3040],
        [  71.5885,   68.5677,   60.5875,  ...,  -29.8447,  -46.3099,
          -55.8495],
        ...,
        [ -86.4741,  -49.3220,  -27.3350,  ...,   28.4523,   23.4076,
           14.7321],
        [ -58.4776,  -11.0451,    7.1528,  ...,   13.2386,   -3.4772,
          -21.2637],
        [-118.7836,  -91.7693,  -63.1533,  ...,   42.8208,   54.4433,
           59.6315]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 4, 8, 6, 8, 7, 2, 0, 2, 4, 8, 8, 0, 5, 3, 2, 1, 5, 3, 2, 5, 3, 5, 2,
        1, 6, 8, 7, 8, 6, 2, 3, 0, 7, 1, 5, 8, 1, 6, 5, 1, 7, 5, 6, 0, 7, 2, 5,
        0, 6, 4, 0, 4, 6, 8, 4, 1, 2, 2, 6, 7, 0, 3, 5, 6, 0, 6, 6, 8, 8, 8, 4,
        6, 3, 8, 3, 7, 4, 3, 2, 2, 2, 4, 5, 8, 2, 1, 2, 7, 3, 8, 3, 2, 6, 8, 8,
        7, 6, 2, 5, 1, 2, 0, 6, 5, 1, 3, 1, 5, 3, 1, 0, 2, 0, 0, 4, 2, 3, 4, 8,
        1, 6, 3, 2, 0, 1, 1, 6]) 
pred: tensor([[  80.3202,   70.3032,   59.8361,  ...,  -34.2487,  -44.9854,
          -49.1772],
        [ -45.7218,   -6.2923,    8.8973,  ...,   10.2475,   -6.2527,
          -22.5449],
        [-111.4688,  -85.6754,  -59.4124,  ...,   39.8275,   50.0774,
           55.3960],
        ...,
        [  42.9658,   50.5132,   48.2549,  ...,  -22.4673,  -35.1463,
          -44.3184],
        [  40.1977,   54.5421,   53.2681,  ...,  -19.4388,  -40.4097,
          -56.6907],
        [ -84.3572,  -44.0565,  -21.9767,  ...,   26.8644,   20.0536,
            9.3183]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 0, 0, 7, 7, 8, 1, 8, 1, 5, 5, 4, 6, 3, 8, 2, 5, 1, 8, 3, 7, 3, 4, 7,
        2, 8, 8, 0, 2, 7, 8, 6, 2, 4, 7, 6, 8, 8, 1, 8, 2, 3, 5, 8, 1, 4, 3, 3,
        1, 5, 8, 1, 8, 3, 3, 7, 5, 3, 0, 1, 2, 7, 2, 8, 5, 7, 8, 3, 3, 2, 1, 4,
        5, 1, 8, 6, 0, 3, 3, 2, 6, 7, 0, 0, 0, 0, 7, 6, 8, 5, 8, 1, 0, 0, 8, 4,
        6, 8, 4, 8, 0, 7, 0, 5, 1, 7, 3, 3, 8, 8, 8, 8, 4, 3, 1, 2, 3, 5, 8, 3,
        2, 0, 5, 6, 2, 3, 4, 1]) 
pred: tensor([[-102.4653,  -66.9933,  -42.0075,  ...,   33.9770,   36.3965,
           33.5264],
        [  80.9846,   70.8615,   59.7919,  ...,  -34.1951,  -44.8967,
          -49.7202],
        [  86.4942,   74.7222,   62.6413,  ...,  -35.9524,  -46.2201,
          -52.0130],
        ...,
        [ -14.4757,   15.1350,   24.3065,  ...,   -1.7819,  -15.8803,
          -31.1428],
        [ -34.9994,   -4.5629,    9.0093,  ...,    8.0167,   -5.1290,
          -18.7230],
        [  40.9249,   50.2694,   48.0750,  ...,  -21.2830,  -34.6118,
          -45.6016]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 7, 2, 4, 6, 3, 8, 0, 6, 2, 0, 4, 8, 1, 5, 5, 3, 2, 1, 2, 7, 6, 1, 6,
        1, 5, 1, 0, 2, 4, 0, 0, 1, 4, 1, 1, 2, 7, 1, 5, 5, 5, 2, 7, 8, 0, 1, 1,
        1, 7, 2, 0, 4, 3, 5, 7, 1, 2, 8, 5, 0, 7, 5, 2, 5, 5, 4, 8, 6, 6, 2, 7,
        8, 4, 3, 0, 3, 7, 7, 3, 2, 6, 7, 2, 7, 2, 5, 6, 1, 7, 0, 1, 1, 8, 6, 1,
        3, 8, 3, 0, 8, 2, 6, 2, 0, 8, 1, 3, 0, 0, 2, 5, 7, 1, 6, 0, 1, 2, 5, 7,
        8, 3, 4, 7, 5, 2, 0, 2]) 
pred: tensor([[-86.5243, -49.8789, -26.4526,  ...,  27.4940,  27.9751,  19.2812],
        [-98.5147, -66.7604, -42.4264,  ...,  34.0357,  39.5824,  35.9942],
        [  8.6283,  31.8854,  35.9199,  ...,  -8.9618, -24.9443, -41.7549],
        ...,
        [  7.2249,  30.6107,  34.5240,  ...,  -8.8748, -23.5850, -39.1666],
        [ 76.6264,  69.4995,  58.4284,  ..., -32.4023, -43.1953, -50.8691],
        [  7.3993,  34.5954,  39.9651,  ...,  -9.2883, -28.8871, -48.1611]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 3, 6, 6, 2, 0, 0, 1, 6, 1, 3, 5, 0, 5, 6, 0, 4, 3, 3, 4, 2, 5, 4, 8,
        4, 6, 1, 6, 2, 2, 6, 1, 6, 4, 0, 1, 6, 5, 4, 3, 1, 8, 0, 8, 2, 8, 0, 1,
        4, 5, 4, 1, 0, 3, 1, 7, 1, 6, 4, 0, 6, 8, 5, 1, 5, 7, 8, 6, 7, 3, 5, 2,
        6, 1, 5, 0, 1, 0, 0, 0, 3, 0, 4, 6, 6, 1, 7, 8, 5, 0, 6, 5, 6, 5, 2, 3,
        0, 6, 0, 4, 3, 1, 1, 8, 1, 4, 1, 0, 6, 0, 5, 5, 4, 1, 1, 0, 1, 7, 8, 6,
        7, 8, 6, 1, 6, 7, 8, 8]) 
pred: tensor([[  85.3094,   77.5975,   66.5918,  ...,  -35.1704,  -49.9562,
          -60.3322],
        [ -22.2656,    8.3318,   18.4619,  ...,    2.6677,  -11.8548,
          -27.5137],
        [ -91.2121,  -48.4566,  -24.9530,  ...,   28.7970,   24.2636,
           12.5548],
        ...,
        [-103.1064,  -70.5829,  -44.6975,  ...,   35.7911,   41.8988,
           38.3758],
        [-114.9978,  -88.0847,  -60.2953,  ...,   41.2579,   54.7765,
           58.1417],
        [-113.1871,  -85.8857,  -57.9689,  ...,   40.2917,   53.7803,
           56.4821]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 7, 2, 1, 8, 0, 2, 3, 7, 7, 7, 0, 6, 6, 7, 2, 0, 0, 4, 6, 4, 1, 5, 8,
        0, 0, 8, 5, 8, 8, 2, 6, 6, 6, 5, 6, 1, 0, 6, 2, 2, 2, 2, 6, 3, 5, 3, 2,
        2, 3, 3, 4, 2, 7, 2, 2, 8, 5, 7, 7, 2, 1, 1, 2, 2, 5, 8, 2, 1, 7, 4, 0,
        1, 5, 4, 2, 6, 1, 5, 3, 8, 1, 5, 5, 5, 0, 3, 8, 5, 5, 2, 5, 0, 1, 2, 3,
        4, 0, 8, 5, 0, 4, 7, 3, 6, 7, 8, 3, 7, 4, 3, 5, 8, 6, 5, 7, 4, 1, 2, 7,
        7, 3, 7, 5, 7, 0, 6, 7]) 
pred: tensor([[-88.2552, -45.2711, -22.8831,  ...,  27.9725,  21.4943,   9.6716],
        [-97.7369, -67.8597, -43.7947,  ...,  35.6212,  37.6981,  35.1266],
        [  4.3230,  30.2715,  35.1162,  ...,  -7.1303, -24.4952, -41.6785],
        ...,
        [ 79.8893,  71.5952,  59.9399,  ..., -32.9904, -44.8671, -53.1286],
        [-75.6642, -41.0514, -20.2489,  ...,  26.3248,  20.6658,   9.3264],
        [-98.3634, -67.8819, -43.1342,  ...,  35.4002,  38.7767,  35.9671]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 0, 0, 3, 2, 4, 0, 4, 4, 3, 0, 5, 8, 8, 2, 4, 5, 5, 8, 0, 3, 3, 8, 5,
        2, 7, 5, 6, 7, 0, 0, 0, 0, 1, 5, 4, 8, 5, 8, 4, 7, 0, 7, 4, 6, 5, 3, 0,
        1, 6, 8, 7, 7, 1, 6, 2, 6, 3, 0, 0, 3, 0, 8, 6, 4, 0, 7, 7, 2, 2, 6, 5,
        3, 4, 3, 5, 5, 8, 0, 2, 6, 8, 6, 8, 6, 0, 6, 2, 8, 2, 0, 5, 3, 4, 1, 7,
        3, 1, 8, 8, 4, 5, 0, 6, 4, 3, 3, 8, 7, 2, 7, 2, 3, 7, 7, 8, 3, 8, 1, 5,
        7, 6, 0, 6, 6, 2, 6, 8]) 
pred: tensor([[  12.5431,   39.0204,   42.6457,  ...,   -9.3800,  -33.0740,
          -53.4428],
        [  76.5487,   73.2859,   63.4684,  ...,  -32.2400,  -46.5194,
          -58.4373],
        [  85.5072,   78.5884,   67.9201,  ...,  -35.4450,  -51.1542,
          -62.0272],
        ...,
        [  20.8763,   34.6613,   35.8819,  ...,  -12.0476,  -24.0466,
          -36.5158],
        [ -93.3414,  -50.3302,  -26.3495,  ...,   30.6738,   23.2744,
           12.4614],
        [-116.1166,  -91.0172,  -62.6819,  ...,   43.4271,   53.3321,
           59.1228]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 8, 5, 8, 1, 8, 4, 4, 6, 4, 4, 3, 3, 3, 2, 1, 0, 1, 2, 3, 6, 5, 0, 0,
        0, 6, 3, 3, 6, 4, 0, 1, 5, 4, 1, 1, 8, 2, 0, 6, 5, 5, 5, 0, 1, 2, 4, 2,
        2, 0, 8, 5, 3, 8, 0, 4, 8, 0, 0, 5, 0, 3, 0, 0, 1, 8, 5, 2, 5, 6, 6, 4,
        1, 8, 7, 6, 1, 3, 8, 8, 6, 7, 4, 2, 3, 5, 4, 0, 0, 5, 7, 0, 4, 6, 3, 0,
        4, 1, 2, 2, 6, 1, 1, 8, 8, 2, 8, 1, 7, 0, 1, 5, 2, 6, 4, 1, 3, 3, 7, 4,
        6, 7, 2, 6, 2, 4, 0, 5]) 
pred: tensor([[ -47.9208,   -5.1988,   12.1114,  ...,   12.7483,   -4.5842,
          -26.1064],
        [-121.1648,  -94.4567,  -64.8618,  ...,   45.0030,   55.3289,
           61.0030],
        [ -66.3073,  -26.0334,   -6.7120,  ...,   20.0091,    7.5722,
           -6.7214],
        ...,
        [ -41.4265,   -9.9310,    4.8418,  ...,    9.4740,    0.3192,
          -10.9002],
        [  84.7583,   77.2797,   66.9302,  ...,  -35.6917,  -50.0962,
          -58.8230],
        [ -58.8275,  -21.5538,   -2.7201,  ...,   18.5898,    6.4721,
           -8.7278]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 0, 5, 6, 2, 7, 7, 6, 8, 5, 1, 6, 5, 7, 3, 7, 5, 0, 8, 2, 1, 7, 8, 0,
        6, 1, 2, 6, 2, 4, 0, 0, 5, 5, 7, 5, 6, 5, 6, 3, 0, 4, 5, 6, 3, 0, 0, 7,
        3, 4, 5, 1, 6, 6, 6, 6, 4, 5, 4, 0, 7, 2, 6, 2, 4, 5, 5, 8, 6, 4, 4, 1,
        7, 5, 4, 0, 5, 8, 0, 4, 8, 2, 8, 1, 0, 7, 2, 8, 6, 4, 6, 7, 4, 2, 6, 6,
        5, 8, 1, 7, 3, 6, 2, 3, 4, 1, 2, 5, 6, 5, 5, 7, 7, 1, 0, 5, 8, 8, 6, 0,
        3, 2, 5, 7, 6, 6, 2, 8]) 
pred: tensor([[ -99.1922,  -68.4033,  -42.9604,  ...,   35.3799,   36.9700,
           34.5487],
        [  81.2439,   73.4382,   62.7835,  ...,  -34.1800,  -46.6613,
          -54.5470],
        [ -71.9028,  -26.9744,   -6.5544,  ...,   22.2976,    8.2417,
          -10.2981],
        ...,
        [ -80.8308,  -47.9439,  -25.3305,  ...,   26.4127,   24.7051,
           18.4105],
        [   8.3507,   34.8720,   41.4615,  ...,  -11.4479,  -27.0837,
          -42.3429],
        [-130.2005,  -99.5476,  -67.1528,  ...,   46.6447,   58.0583,
           63.3768]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 3, 2, 3, 4, 1, 7, 7, 0, 2, 0, 6, 5, 8, 4, 7, 0, 0, 7, 4, 6, 4, 0, 6,
        6, 6, 2, 2, 2, 1, 6, 5, 2, 5, 5, 4, 7, 6, 3, 4, 0, 6, 0, 7, 6, 5, 8, 1,
        3, 7, 3, 2, 1, 0, 8, 8, 0, 8, 3, 1, 1, 0, 6, 7, 1, 3, 3, 7, 8, 0, 4, 4,
        7, 7, 1, 2, 7, 3, 7, 6, 0, 7, 0, 1, 1, 4, 2, 1, 5, 2, 5, 3, 6, 2, 5, 6,
        0, 8, 8, 0, 8, 0, 1, 8, 3, 5, 1, 0, 2, 2, 0, 0, 6, 0, 8, 7, 3, 5, 3, 2,
        6, 0, 2, 6, 2, 0, 4, 3]) 
pred: tensor([[-131.4566,  -99.8612,  -67.1476,  ...,   45.8203,   58.7183,
           63.3456],
        [ -12.9201,   16.1262,   24.2012,  ...,   -2.2337,  -16.7697,
          -31.8459],
        [   4.7186,   37.1075,   43.0082,  ...,   -7.6781,  -31.5639,
          -54.8245],
        ...,
        [  84.1050,   78.9349,   67.3061,  ...,  -36.0696,  -51.5545,
          -61.1407],
        [ -49.9688,  -10.2088,    6.8584,  ...,   10.9257,   -0.3961,
          -15.9648],
        [ -23.2927,   16.2704,   27.8492,  ...,    2.1041,  -19.7892,
          -42.5344]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 0, 6, 0, 2, 3, 0, 3, 0, 1, 8, 5, 8, 1, 5, 4, 8, 4, 2, 2, 0, 5, 7, 1,
        0, 4, 3, 3, 6, 7, 5, 4, 5, 4, 5, 1, 4, 6, 2, 0, 4, 3, 7, 7, 4, 3, 8, 0,
        5, 0, 3, 1, 4, 1, 7, 5, 7, 1, 7, 7, 7, 5, 8, 5, 1, 7, 7, 6, 2, 0, 1, 7,
        0, 8, 0, 6, 2, 7, 2, 0, 5, 7, 1, 2, 1, 0, 2, 0, 7, 3, 7, 2, 1, 3, 1, 5,
        8, 3, 5, 8, 3, 1, 8, 3, 3, 5, 4, 1, 5, 2, 5, 4, 1, 0, 1, 5, 7, 5, 3, 2,
        8, 8, 7, 3, 1, 6, 6, 8]) 
pred: tensor([[-102.9265,  -53.4470,  -26.2332,  ...,   30.1449,   25.7984,
           14.3699],
        [  75.9773,   73.3415,   63.0695,  ...,  -33.3279,  -48.1230,
          -56.7115],
        [-101.7327,  -54.7908,  -27.5123,  ...,   31.8231,   27.1760,
           13.8178],
        ...,
        [ -90.3247,  -49.4179,  -25.7101,  ...,   29.2116,   23.4924,
           12.2086],
        [ -82.1808,  -47.4250,  -25.1744,  ...,   25.3180,   23.9117,
           15.9317],
        [-135.8955, -102.6281,  -68.5883,  ...,   46.6433,   60.9387,
           64.9026]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 6, 5, 0, 6, 1, 0, 1, 0, 3, 8, 2, 3, 8, 1, 4, 3, 6, 6, 6, 6, 1, 6, 4,
        4, 2, 3, 4, 8, 8, 4, 8, 0, 5, 6, 8, 5, 5, 1, 7, 4, 3, 0, 8, 0, 5, 7, 2,
        3, 6, 0, 5, 1, 7, 0, 2, 6, 6, 1, 5, 5, 6, 2, 5, 5, 0, 3, 4, 1, 1, 4, 4,
        3, 4, 0, 3, 1, 7, 7, 0, 1, 7, 4, 3, 6, 4, 7, 6, 4, 0, 8, 4, 5, 5, 8, 4,
        3, 5, 8, 6, 7, 7, 4, 6, 2, 4, 5, 8, 5, 8, 8, 8, 1, 1, 7, 3, 7, 7, 6, 2,
        4, 4, 0, 3, 2, 0, 3, 3]) 
pred: tensor([[-139.5541, -105.5689,  -70.0282,  ...,   47.7864,   63.8101,
           67.4998],
        [ -90.5323,  -47.7782,  -23.5146,  ...,   28.0189,   22.7258,
           11.3157],
        [ -73.4975,  -37.8988,  -17.0743,  ...,   20.8297,   18.1169,
            8.4738],
        ...,
        [  91.6875,   80.6587,   66.8551,  ...,  -38.5322,  -50.7185,
          -56.6557],
        [ -38.1541,   11.1099,   25.5588,  ...,    1.5278,  -17.2144,
          -36.7236],
        [ -24.6512,   13.9020,   25.0729,  ...,   -1.1917,  -16.2036,
          -33.2556]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 8, 4, 6, 6, 2, 2, 3, 3, 4, 5, 8, 8, 0, 3, 5, 2, 1, 7, 4, 4, 1, 4, 2,
        8, 6, 1, 7, 8, 6, 3, 3, 1, 6, 6, 4, 7, 5, 4, 7, 7, 0, 1, 0, 5, 5, 8, 6,
        7, 1, 5, 3, 2, 6, 0, 7, 7, 6, 0, 7, 4, 6, 7, 8, 0, 0, 4, 0, 8, 7, 6, 7,
        0, 2, 0, 3, 1, 6, 8, 5, 5, 8, 6, 5, 4, 4, 0, 3, 3, 0, 7, 2, 8, 7, 6, 6,
        2, 0, 5, 3, 1, 1, 3, 8, 1, 1, 5, 5, 1, 6, 6, 0, 7, 7, 4, 7, 2, 8, 3, 7,
        4, 8, 8, 6, 5, 3, 5, 2]) 
pred: tensor([[ -24.8311,    9.4073,   21.2988,  ...,    2.2860,  -13.9950,
          -31.3791],
        [-130.1800, -100.3747,  -66.6060,  ...,   46.2466,   59.8547,
           64.4587],
        [ -54.8015,  -12.1668,    6.3334,  ...,   12.1728,   -2.3238,
          -17.3898],
        ...,
        [  -8.7002,   13.3773,   21.2329,  ...,   -3.4112,  -13.4687,
          -23.1014],
        [ -75.5417,  -28.6950,   -7.9367,  ...,   22.2063,    8.7136,
          -10.2581],
        [  26.8696,   42.3068,   42.7461,  ...,  -16.4239,  -32.3051,
          -45.9874]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 2, 3, 4, 1, 7, 4, 8, 2, 3, 0, 6, 3, 6, 5, 4, 6, 5, 7, 3, 7, 8, 4, 0,
        8, 3, 7, 0, 0, 6, 7, 6, 5, 7, 8, 5, 3, 8, 6, 1, 3, 3, 8, 1, 7, 8, 6, 2,
        0, 3, 8, 1, 4, 3, 6, 7, 3, 4, 8, 2, 1, 5, 2, 3, 5, 1, 4, 4, 1, 1, 0, 6,
        7, 7, 5, 6, 5, 0, 0, 6, 8, 0, 5, 4, 7, 1, 0, 4, 2, 6, 3, 2, 6, 6, 3, 2,
        3, 1, 4, 5, 6, 1, 3, 3, 7, 8, 2, 6, 6, 1, 6, 2, 1, 0, 7, 4, 6, 5, 1, 0,
        0, 4, 3, 7, 1, 4, 7, 3]) 
pred: tensor([[-130.6739, -101.5141,  -67.2759,  ...,   47.7376,   59.9716,
           65.0199],
        [  25.4192,   37.6721,   37.7605,  ...,  -14.4634,  -29.3245,
          -39.2995],
        [ -18.7462,   17.7010,   29.5000,  ...,   -2.5841,  -18.8711,
          -36.0903],
        ...,
        [ -50.0591,   -6.8942,   11.9714,  ...,   11.1364,   -5.2233,
          -22.6644],
        [-116.2119,  -74.5261,  -43.9241,  ...,   38.9458,   40.2843,
           35.2985],
        [ -19.0896,   15.8766,   25.7806,  ...,   -1.5637,  -18.8450,
          -35.5774]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 8, 7, 4, 6, 7, 4, 2, 8, 3, 6, 1, 2, 1, 2, 3, 4, 8, 5, 5, 6, 6, 4, 3,
        4, 4, 5, 4, 1, 7, 7, 3, 4, 1, 4, 1, 5, 0, 2, 8, 3, 5, 3, 0, 6, 4, 2, 5,
        1, 8, 0, 6, 1, 2, 1, 0, 5, 0, 8, 6, 1, 5, 0, 4, 3, 3, 7, 0, 4, 1, 0, 5,
        3, 4, 5, 3, 6, 0, 2, 6, 3, 0, 0, 0, 1, 0, 8, 0, 4, 2, 8, 7, 2, 3, 6, 7,
        0, 8, 1, 8, 4, 1, 3, 5, 3, 1, 3, 6, 7, 3, 3, 0, 4, 4, 3, 0, 0, 6, 2, 0,
        0, 3, 8, 3, 6, 5, 1, 1]) 
pred: tensor([[  52.0891,   62.2603,   58.2941,  ...,  -25.8362,  -43.2815,
          -56.9697],
        [-126.9190,  -97.3263,  -63.2729,  ...,   46.6189,   58.0963,
           61.5467],
        [-120.7604,  -84.0114,  -50.2544,  ...,   43.7827,   47.9944,
           43.8492],
        ...,
        [ -84.8708,  -34.0910,   -9.8077,  ...,   22.9678,   12.6281,
           -2.6289],
        [  40.3342,   52.5797,   50.5013,  ...,  -21.5924,  -36.1801,
          -48.8571],
        [  51.2037,   59.9622,   56.4412,  ...,  -24.2788,  -42.7908,
          -57.0888]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 7, 2, 4, 7, 6, 0, 8, 7, 0, 8, 0, 1, 5, 4, 2, 2, 0, 3, 2, 6, 3, 8, 2,
        2, 8, 4, 3, 4, 6, 1, 0, 8, 1, 8, 0, 3, 4, 8, 2, 3, 7, 6, 8, 6, 2, 7, 4,
        4, 3, 8, 5, 4, 1, 7, 8, 0, 5, 6, 6, 3, 3, 5, 3, 3, 0, 7, 3, 8, 7, 7, 7,
        0, 0, 6, 5, 2, 6, 4, 2, 4, 7, 3, 7, 0, 4, 7, 5, 8, 1, 7, 8, 3, 4, 6, 8,
        0, 7, 0, 1, 0, 4, 6, 4, 8, 8, 4, 0, 8, 3, 5, 3, 1, 1, 6, 1, 2, 6, 0, 4,
        5, 0, 2, 3, 5, 3, 1, 8]) 
pred: tensor([[  14.0478,   36.3299,   39.7023,  ...,  -11.9347,  -27.9841,
          -43.0749],
        [-119.9270,  -76.2460,  -44.4374,  ...,   40.4805,   43.5401,
           36.5849],
        [   9.5281,   35.3021,   40.5332,  ...,  -12.3096,  -26.7415,
          -42.5407],
        ...,
        [ -13.1837,    9.8412,   19.2192,  ...,    0.4809,  -10.1880,
          -22.8631],
        [  43.7737,   51.5232,   48.9491,  ...,  -21.4729,  -35.1656,
          -45.8345],
        [-132.4884, -102.7700,  -67.3937,  ...,   48.9121,   63.3914,
           66.9678]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 7, 3, 5, 1, 5, 6, 7, 4, 8, 2, 3, 6, 3, 0, 7, 2, 8, 6, 4, 2, 7, 5, 8,
        2, 4, 7, 6, 8, 4, 7, 7, 0, 6, 2, 2, 3, 1, 5, 3, 1, 7, 4, 4, 7, 7, 8, 1,
        4, 6, 5, 6, 1, 4, 7, 7, 7, 3, 2, 3, 3, 4, 8, 4, 5, 2, 7, 8, 3, 6, 4, 7,
        5, 8, 2, 1, 7, 5, 8, 6, 5, 4, 5, 2, 5, 0, 5, 2, 8, 1, 4, 4, 5, 1, 0, 6,
        6, 7, 8, 5, 7, 1, 4, 1, 3, 8, 1, 8, 1, 8, 1, 8, 8, 6, 0, 2, 3, 1, 8, 5,
        6, 2, 8, 3, 1, 0, 2, 8]) 
pred: tensor([[ -21.9930,   12.0646,   23.1427,  ...,    0.7771,  -13.0285,
          -29.7621],
        [-119.2304,  -81.6165,  -48.2054,  ...,   42.7336,   47.3182,
           42.1858],
        [ -28.2006,   15.3278,   27.7049,  ...,    2.1278,  -17.9814,
          -41.2748],
        ...,
        [  87.0971,   81.4810,   67.9844,  ...,  -34.8708,  -53.3219,
          -65.7494],
        [   7.7278,   34.6951,   38.6816,  ...,  -11.5904,  -26.0980,
          -42.5907],
        [-141.9312, -107.8777,  -70.2716,  ...,   51.2925,   65.9815,
           69.1836]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 4, 0, 1, 6, 7, 8, 2, 6, 8, 0, 7, 4, 0, 5, 6, 3, 5, 7, 0, 7, 4, 5, 6,
        2, 5, 1, 6, 8, 6, 8, 4, 7, 4, 7, 2, 7, 7, 6, 7, 7, 6, 7, 2, 0, 5, 6, 2,
        1, 3, 8, 4, 4, 6, 3, 7, 8, 7, 0, 2, 5, 1, 2, 1, 2, 3, 2, 0, 0, 6, 4, 1,
        3, 7, 7, 0, 1, 2, 1, 4, 3, 2, 3, 4, 0, 0, 1, 1, 5, 4, 1, 8, 0, 0, 7, 4,
        2, 8, 6, 0, 2, 2, 2, 1, 7, 4, 5, 2, 0, 7, 3, 4, 2, 0, 5, 1, 2, 4, 2, 6,
        7, 3, 5, 8, 8, 2, 3, 8]) 
pred: tensor([[ -98.7394,  -53.2459,  -25.0695,  ...,   30.7181,   26.7129,
           15.6476],
        [ -38.1572,   -3.5495,   11.0993,  ...,    8.9967,   -6.0082,
          -22.3391],
        [  82.4861,   77.8453,   66.0442,  ...,  -35.1529,  -49.4801,
          -59.6445],
        ...,
        [  16.4352,   42.2141,   45.9003,  ...,  -13.0509,  -33.8228,
          -52.0917],
        [ -19.1293,   18.4552,   29.7113,  ...,    0.3601,  -21.2854,
          -42.4898],
        [-130.3794,  -99.2327,  -64.8459,  ...,   46.3850,   59.9784,
           64.0403]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 6, 3, 4, 6, 0, 0, 4, 4, 7, 7, 1, 4, 8, 3, 3, 1, 6, 8, 5, 8, 2, 5, 1,
        1, 3, 5, 7, 5, 6, 4, 2, 2, 6, 6, 7, 2, 1, 0, 7, 7, 3, 6, 6, 7, 2, 8, 4,
        2, 0, 0, 1, 1, 3, 5, 2, 3, 0, 7, 5, 7, 2, 5, 6, 8, 6, 0, 5, 7, 8, 1, 2,
        7, 8, 5, 0, 7, 7, 2, 8, 8, 7, 1, 2, 7, 6, 2, 6, 3, 1, 8, 4, 3, 8, 5, 0,
        0, 6, 3, 8, 3, 1, 7, 8, 8, 3, 7, 4, 3, 0, 6, 6, 0, 5, 6, 2, 0, 6, 4, 1,
        3, 6, 1, 1, 1, 8, 6, 6]) 
pred: tensor([[ -98.8878,  -52.8819,  -26.0078,  ...,   29.6771,   25.1852,
           14.8661],
        [ -90.9203,  -53.1493,  -26.8072,  ...,   27.6372,   25.6682,
           19.7896],
        [ -19.1769,   19.6739,   31.5319,  ...,   -3.5925,  -21.1435,
          -40.0263],
        ...,
        [-129.3694,  -96.3777,  -62.0438,  ...,   44.6765,   56.6094,
           60.7598],
        [-101.4036,  -54.4507,  -26.0231,  ...,   30.7929,   26.1431,
           15.5895],
        [ -96.9487,  -53.7526,  -25.4721,  ...,   31.4720,   24.8092,
           13.6838]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 7, 7, 7, 8, 5, 5, 4, 3, 8, 0, 2, 0, 7, 3, 7, 4, 1, 6, 7, 3, 2, 5, 3,
        4, 7, 4, 4, 5, 0, 7, 5, 7, 5, 6, 7, 2, 2, 8, 0, 1, 5, 0, 4, 0, 5, 5, 5,
        3, 4, 6, 7, 0, 8, 6, 5, 8, 6, 2, 0, 0, 1, 2, 1, 7, 7, 1, 7, 2, 5, 3, 3,
        5, 2, 1, 8, 8, 7, 3, 1, 1, 2, 3, 1, 1, 0, 0, 3, 0, 3, 4, 7, 7, 2, 7, 1,
        5, 4, 4, 3, 7, 2, 6, 7, 0, 1, 5, 7, 8, 1, 3, 6, 6, 7, 3, 0, 5, 5, 2, 5,
        7, 6, 4, 8, 8, 2, 6, 1]) 
pred: tensor([[ -16.6540,   17.6007,   29.3369,  ...,   -1.9179,  -19.2644,
          -38.4243],
        [-116.4409,  -76.8100,  -45.0797,  ...,   38.0781,   40.3517,
           37.9418],
        [-106.8763,  -72.8476,  -43.0088,  ...,   36.6175,   39.1782,
           37.3382],
        ...,
        [  14.6077,   41.9169,   47.6469,  ...,  -14.2862,  -32.6276,
          -51.8610],
        [ -97.9054,  -52.2115,  -25.2632,  ...,   29.6677,   23.9250,
           12.5992],
        [  47.4981,   56.8913,   55.5132,  ...,  -23.1233,  -39.1722,
          -53.1460]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 7, 7, 6, 7, 7, 3, 1, 6, 0, 1, 6, 1, 6, 7, 4, 5, 5, 3, 1, 8, 8, 3, 0,
        1, 2, 6, 4, 1, 1, 3, 8, 0, 1, 7, 4, 2, 7, 5, 6, 3, 3, 8, 5, 4, 0, 1, 8,
        3, 4, 1, 8, 0, 0, 2, 6, 8, 1, 4, 6, 4, 7, 6, 8, 1, 5, 8, 8, 3, 1, 2, 1,
        2, 1, 7, 5, 1, 5, 3, 6, 0, 4, 3, 1, 4, 2, 4, 0, 0, 3, 0, 0, 8, 2, 7, 2,
        1, 2, 3, 5, 7, 3, 0, 4, 0, 4, 0, 3, 1, 3, 2, 6, 1, 7, 8, 4, 3, 8, 0, 7,
        1, 8, 6, 4, 7, 6, 2, 1]) 
pred: tensor([[ -76.3445,  -30.3750,   -6.7973,  ...,   21.7714,   12.0990,
           -5.3514],
        [-122.4413,  -82.4156,  -49.7629,  ...,   40.8893,   47.1341,
           43.5524],
        [-131.4168,  -88.5649,  -53.3652,  ...,   43.7439,   50.4686,
           47.0270],
        ...,
        [-118.9543,  -61.3092,  -29.1298,  ...,   36.0333,   30.6685,
           15.1646],
        [   8.3255,   40.7345,   46.2063,  ...,  -13.4929,  -32.2789,
          -52.9769],
        [  43.2294,   60.7873,   59.8147,  ...,  -22.2134,  -45.9101,
          -64.4464]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 7, 3, 1, 3, 5, 0, 4, 3, 6, 3, 6, 2, 4, 7, 0, 6, 2, 3, 5, 5, 0, 0, 0,
        6, 6, 2, 0, 1, 2, 6, 6, 3, 0, 3, 2, 0, 2, 2, 5, 6, 2, 3, 5, 6, 6, 4, 2,
        0, 2, 6, 5, 3, 2, 4, 0, 6, 7, 6, 3, 3, 4, 3, 2, 7, 1, 1, 1, 7, 2, 7, 0,
        3, 5, 3, 6, 8, 5, 2, 6, 1, 0, 2, 6, 1, 4, 0, 2, 6, 2, 0, 3, 7, 8, 6, 0,
        6, 6, 3, 8, 6, 0, 7, 8, 8, 7, 3, 5, 5, 7, 7, 7, 5, 6, 0, 2, 1, 3, 2, 4,
        1, 3, 8, 2, 2, 5, 3, 3]) 
pred: tensor([[  92.4928,   86.7734,   73.7542,  ...,  -38.7031,  -58.4181,
          -71.1413],
        [-123.0702,  -85.6213,  -51.9850,  ...,   43.3782,   49.4102,
           45.8518],
        [ -17.4254,   16.7979,   27.5182,  ...,   -1.0409,  -18.5021,
          -37.5866],
        ...,
        [ -90.4842,  -35.1747,   -9.7081,  ...,   25.0987,   13.9762,
           -6.3580],
        [ -22.6591,   15.2876,   26.3281,  ...,   -1.6168,  -16.4088,
          -36.0352],
        [ -16.6020,   14.8743,   25.3443,  ...,    0.6136,  -18.6476,
          -36.4861]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 5, 3, 6, 6, 8, 8, 5, 5, 7, 7, 0, 4, 2, 2, 4, 0, 3, 7, 8, 7, 5, 8, 4,
        2, 8, 5, 7, 0, 0, 1, 0, 7, 5, 2, 8, 8, 3, 0, 1, 6, 3, 1, 8, 1, 6, 7, 4,
        4, 3, 7, 4, 4, 1, 0, 2, 7, 1, 5, 0, 7, 8, 6, 0, 3, 1, 3, 5, 4, 5, 7, 2,
        3, 3, 7, 8, 2, 2, 1, 7, 2, 0, 4, 7, 6, 1, 6, 4, 8, 4, 6, 0, 6, 5, 1, 4,
        1, 4, 2, 0, 6, 0, 0, 5, 8, 8, 1, 7, 3, 3, 1, 0, 6, 3, 4, 8, 2, 3, 0, 3,
        3, 1, 0, 5, 3, 3, 6, 3]) 
pred: tensor([[ 93.2000,  82.8601,  68.6535,  ..., -38.8270, -52.7599, -61.0006],
        [-82.9878, -30.3247,  -5.6257,  ...,  25.2484,   9.8424, -12.2098],
        [-23.2057,  12.7318,  25.2167,  ...,   0.3501, -15.1016, -32.1210],
        ...,
        [-29.3965,  15.7992,  28.6124,  ...,  -1.1209, -17.5710, -38.3696],
        [-85.9006, -50.6202, -26.5162,  ...,  28.3642,  26.3841,  17.5421],
        [-30.3767,  11.7705,  26.4992,  ...,   2.3251, -15.9360, -37.1690]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 5, 1, 0, 8, 1, 4, 4, 3, 3, 2, 5, 4, 1, 5, 2, 8, 5, 0, 5, 6, 4, 2, 0,
        1, 4, 7, 4, 4, 6, 1, 8, 5, 4, 0, 6, 0, 2, 3, 4, 8, 2, 3, 7, 2, 8, 0, 3,
        2, 8, 1, 4, 2, 8, 3, 3, 4, 6, 8, 2, 0, 1, 7, 0, 5, 8, 1, 3, 5, 1, 2, 1,
        0, 4, 5, 3, 1, 5, 5, 4, 4, 7, 0, 8, 2, 0, 0, 7, 8, 0, 0, 0, 8, 3, 0, 8,
        4, 4, 2, 0, 4, 6, 7, 0, 7, 1, 2, 1, 8, 6, 2, 6, 1, 4, 2, 7, 4, 7, 6, 7,
        6, 4, 1, 3, 1, 6, 8, 3]) 
pred: tensor([[ 3.2797e+01,  4.7190e+01,  4.6177e+01,  ..., -1.7701e+01,
         -3.7065e+01, -5.1773e+01],
        [-8.3403e+01, -3.0607e+01, -4.9796e+00,  ...,  2.2867e+01,
          9.5863e+00, -9.2063e+00],
        [ 5.3444e+01,  5.9982e+01,  5.3782e+01,  ..., -2.6131e+01,
         -4.2611e+01, -5.3759e+01],
        ...,
        [-9.6614e+01, -5.9049e+01, -3.0292e+01,  ...,  3.3446e+01,
          3.1255e+01,  2.2808e+01],
        [-1.3551e+02, -1.0439e+02, -6.6769e+01,  ...,  5.0190e+01,
          6.2494e+01,  6.5978e+01],
        [-1.9972e+01,  1.8516e+01,  3.1687e+01,  ...,  3.4260e-02,
         -2.0723e+01, -4.0967e+01]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 6, 8, 1, 5, 7, 1, 7, 1, 1, 7, 0, 8, 3, 1, 7, 0, 6, 7, 4, 1, 6, 1, 8,
        3, 3, 8, 4, 2, 8, 6, 6, 8, 6, 0, 8, 5, 3, 5, 8, 8, 1, 6, 5, 2, 8, 8, 7,
        3, 8, 6, 1, 7, 8, 2, 8, 6, 5, 1, 5, 4, 5, 6, 2, 3, 8, 8, 5, 3, 7, 4, 5,
        1, 8, 3, 2, 6, 4, 0, 8, 6, 8, 3, 4, 7, 0, 0, 1, 5, 8, 2, 8, 6, 8, 3, 3,
        4, 0, 8, 8, 0, 0, 3, 4, 2, 8, 2, 6, 5, 8, 1, 7, 2, 5, 0, 8, 7, 8, 5, 5,
        2, 4, 6, 4, 2, 0, 3, 6]) 
pred: tensor([[ -62.3568,  -26.3005,   -5.3571,  ...,   19.8055,    7.4640,
           -6.4934],
        [ -95.6610,  -53.3410,  -24.0392,  ...,   33.0069,   24.7728,
           12.6978],
        [-149.7877, -115.4257,  -73.3640,  ...,   55.2157,   67.7036,
           72.5966],
        ...,
        [  89.8299,   81.5189,   67.7857,  ...,  -38.3006,  -52.9329,
          -60.4190],
        [ -11.3300,   19.2445,   28.4534,  ...,   -5.2675,  -18.1722,
          -32.0434],
        [-108.1906,  -60.3558,  -28.6039,  ...,   35.3051,   30.5784,
           18.6012]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 5, 1, 0, 8, 7, 1, 1, 5, 7, 0, 1, 3, 6, 4, 1, 6, 6, 4, 5, 7, 1, 5, 6,
        3, 4, 5, 1, 1, 1, 1, 6, 5, 3, 6, 3, 0, 6, 1, 8, 5, 8, 6, 8, 8, 1, 0, 2,
        3, 6, 8, 7, 0, 2, 2, 2, 0, 0, 6, 0, 0, 6, 3, 2, 8, 1, 0, 8, 5, 7, 3, 1,
        6, 5, 6, 1, 5, 3, 4, 1, 6, 2, 7, 7, 5, 0, 3, 2, 3, 8, 0, 5, 3, 7, 3, 1,
        5, 5, 4, 5, 7, 6, 4, 3, 3, 1, 5, 3, 0, 0, 4, 1, 1, 3, 4, 7, 6, 0, 4, 2,
        6, 5, 8, 8, 6, 2, 6, 7]) 
pred: tensor([[  16.3520,   41.9961,   45.6180,  ...,  -13.6512,  -34.6322,
          -52.8362],
        [ -92.6572,  -35.8375,   -6.4929,  ...,   25.3545,   12.3124,
           -6.5951],
        [  51.6341,   64.5188,   59.1897,  ...,  -26.9901,  -45.5809,
          -60.7674],
        ...,
        [  17.9023,   40.3142,   45.1195,  ...,  -14.1108,  -33.5249,
          -49.9317],
        [-107.5063,  -58.8465,  -28.4024,  ...,   34.4614,   29.4030,
           16.5200],
        [-143.1151,  -93.4055,  -54.0926,  ...,   47.2048,   51.5521,
           46.4712]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 7, 7, 7, 0, 0, 5, 5, 1, 4, 3, 7, 4, 8, 7, 5, 2, 6, 5, 1, 8, 4, 4, 3,
        7, 5, 7, 2, 1, 5, 6, 3, 6, 0, 3, 1, 8, 6, 7, 1, 8, 6, 3, 8, 4, 3, 8, 5,
        7, 2, 5, 5, 7, 4, 6, 6, 8, 0, 2, 7, 1, 6, 3, 4, 4, 0, 7, 5, 3, 6, 4, 4,
        2, 0, 8, 3, 8, 1, 7, 3, 8, 8, 3, 5, 6, 7, 7, 0, 2, 5, 6, 8, 3, 8, 8, 7,
        1, 6, 4, 1, 0, 5, 2, 2, 3, 7, 0, 0, 4, 0, 0, 8, 5, 3, 2, 0, 4, 1, 3, 7,
        1, 5, 8, 7, 5, 4, 5, 2]) 
pred: tensor([[  10.9118,   38.3068,   44.0169,  ...,   -9.2586,  -35.0877,
          -56.5741],
        [-130.9011,  -88.5472,  -52.2934,  ...,   44.6520,   49.6770,
           44.6205],
        [-118.9033,  -84.4424,  -49.8348,  ...,   42.8587,   46.4999,
           43.8145],
        ...,
        [ -70.9893,  -17.3659,    5.3197,  ...,   17.6516,   -0.7443,
          -22.6278],
        [ -80.1022,  -32.5974,   -8.8703,  ...,   22.6210,   11.6248,
           -6.0156],
        [   5.4718,   39.5850,   44.6780,  ...,  -12.4223,  -33.3078,
          -53.4395]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 2, 6, 6, 8, 4, 5, 8, 3, 7, 3, 6, 0, 5, 0, 8, 1, 8, 8, 0, 3, 7, 1, 0,
        7, 1, 2, 0, 8, 8, 3, 1, 4, 8, 6, 1, 3, 6, 0, 0, 0, 2, 3, 7, 1, 7, 2, 1,
        4, 2, 0, 2, 0, 8, 6, 4, 2, 5, 0, 2, 4, 8, 5, 1, 4, 0, 8, 6, 8, 0, 3, 5,
        3, 2, 8, 3, 6, 3, 3, 1, 6, 5, 4, 5, 4, 8, 6, 8, 4, 5, 5, 8, 2, 8, 3, 2,
        2, 6, 2, 2, 2, 3, 5, 5, 8, 8, 7, 0, 4, 3, 2, 3, 0, 1, 3, 7, 6, 3, 3, 4,
        1, 8, 5, 3, 4, 8, 8, 1]) 
pred: tensor([[ -66.2253,  -13.0418,    8.9963,  ...,   14.7364,   -1.7742,
          -23.5662],
        [  -0.1934,   38.2237,   45.1522,  ...,   -9.7610,  -31.9032,
          -55.3307],
        [-110.7107,  -60.1353,  -30.3727,  ...,   36.3745,   29.7755,
           13.0494],
        ...,
        [-147.9776, -113.8576,  -73.9801,  ...,   52.2694,   68.1171,
           71.9238],
        [-142.6428, -109.5222,  -71.4660,  ...,   50.7800,   65.5956,
           68.6165],
        [  48.0439,   68.0650,   64.4220,  ...,  -24.3161,  -50.4735,
          -73.9023]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 1, 1, 5, 6, 3, 1, 7, 8, 6, 5, 0, 8, 1, 7, 2, 8, 3, 1, 8, 1, 8, 4, 1,
        6, 5, 4, 1, 0, 2, 6, 7, 4, 0, 8, 1, 3, 6, 1, 1, 5, 5, 0, 5, 7, 6, 3, 4,
        6, 0, 7, 3, 8, 4, 8, 0, 7, 0, 2, 0, 8, 0, 4, 0, 7, 3, 2, 2, 7, 6, 5, 1,
        6, 8, 0, 2, 6, 6, 6, 4, 3, 8, 1, 2, 4, 3, 8, 6, 6, 8, 3, 6, 8, 6, 3, 2,
        6, 3, 2, 6, 7, 4, 3, 6, 1, 5, 5, 7, 4, 0, 2, 7, 8, 7, 4, 8, 8, 1, 1, 7,
        7, 4, 3, 5, 3, 3, 8, 3]) 
pred: tensor([[-155.5762, -116.3967,  -75.1069,  ...,   53.0986,   67.7692,
           71.7597],
        [  52.2537,   67.1470,   62.9895,  ...,  -27.4854,  -48.1750,
          -65.8934],
        [  54.2066,   70.5750,   65.5607,  ...,  -28.3769,  -49.6432,
          -69.0577],
        ...,
        [ -16.4283,   18.5258,   29.6846,  ...,   -3.1839,  -20.3621,
          -38.4469],
        [-141.5170, -108.1460,  -70.6749,  ...,   49.3956,   63.5460,
           67.9728],
        [ -19.0773,   17.4516,   27.3519,  ...,   -2.3754,  -19.0478,
          -37.2838]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 3, 5, 3, 1, 1, 4, 5, 2, 3, 0, 0, 4, 7, 5, 7, 3, 2, 8, 1, 5, 1, 0, 2,
        3, 6, 5, 7, 7, 4, 4, 8, 3, 4, 8, 5, 0, 3, 7, 2, 3, 4, 7, 5, 6, 6, 7, 6,
        2, 8, 6, 3, 8, 7, 6, 7, 1, 1, 6, 7, 5, 5, 7, 2, 6, 8, 1, 7, 4, 5, 6, 6,
        8, 2, 6, 0, 5, 1, 5, 4, 6, 6, 0, 8, 8, 3, 4, 6, 5, 0, 4, 3, 0, 2, 4, 6,
        3, 0, 5, 3, 0, 7, 5, 3, 7, 3, 7, 6, 5, 7, 2, 5, 0, 5, 0, 8, 1, 6, 6, 1,
        5, 3, 4, 2, 4, 3, 2, 3]) 
pred: tensor([[-14.1615,  12.5780,  24.6115,  ...,  -0.1297, -16.3202, -31.3325],
        [-18.3741,  16.6464,  29.5017,  ...,   0.1709, -22.1525, -42.6420],
        [-70.0208, -34.7008, -13.0124,  ...,  19.6378,  14.8202,   6.0126],
        ...,
        [-13.1752,  19.6945,  30.2244,  ...,  -1.6935, -22.3077, -41.4755],
        [ 18.7329,  36.5800,  39.1403,  ..., -16.1156, -29.2948, -40.0038],
        [-21.4897,  16.4092,  28.2727,  ...,  -3.9773, -17.8459, -33.7416]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 5, 5, 0, 8, 1, 6, 6, 0, 6, 8, 2, 3, 6, 1, 6, 0, 1, 6, 1, 2, 4, 4, 8,
        1, 1, 3, 7, 3, 0, 6, 2, 8, 3, 0, 3, 3, 2, 8, 1, 0, 8, 7, 5, 0, 2, 3, 1,
        2, 0, 2, 1, 8, 3, 7, 6, 3, 4, 1, 0, 5, 0, 5, 3, 7, 5, 3, 4, 7, 8, 3, 6,
        8, 4, 2, 6, 2, 2, 0, 5, 0, 6, 0, 5, 7, 0, 0, 0, 3, 0, 0, 8, 6, 1, 3, 0,
        6, 2, 8, 3, 4, 7, 7, 2, 4, 6, 0, 0, 4, 5, 1, 4, 0, 7, 1, 6, 4, 4, 0, 1,
        6, 3, 3, 3, 4, 3, 0, 7]) 
pred: tensor([[ -19.2792,   21.8573,   35.2530,  ...,   -0.6730,  -26.4982,
          -51.1525],
        [ -77.0287,  -33.6485,  -10.7619,  ...,   19.0126,   13.0203,
            2.1058],
        [ -89.9871,  -33.7339,   -6.9456,  ...,   21.4530,   10.7113,
           -4.6877],
        ...,
        [   2.9672,   23.4330,   31.3942,  ...,   -7.4514,  -21.6793,
          -34.3459],
        [  96.1433,   87.9150,   75.3703,  ...,  -43.0714,  -56.3073,
          -64.9771],
        [-123.8927,  -82.0328,  -47.8647,  ...,   41.8921,   42.5191,
           39.4562]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 2, 1, 0, 0, 3, 1, 5, 2, 2, 0, 6, 5, 3, 1, 3, 6, 6, 5, 6, 7, 3, 6, 1,
        6, 2, 2, 6, 3, 8, 5, 0, 8, 6, 1, 5, 8, 7, 0, 5, 2, 0, 0, 1, 0, 0, 0, 5,
        0, 4, 7, 7, 7, 2, 1, 3, 2, 2, 4, 1, 5, 0, 6, 5, 1, 1, 0, 2, 5, 5, 1, 4,
        4, 4, 6, 8, 2, 0, 2, 8, 2, 2, 3, 7, 3, 6, 8, 0, 0, 8, 5, 6, 2, 1, 2, 7,
        7, 3, 1, 1, 3, 6, 2, 6, 0, 0, 2, 1, 4, 1, 3, 1, 3, 7, 5, 8, 0, 6, 8, 6,
        1, 1, 6, 4, 1, 5, 1, 6]) 
pred: tensor([[ 14.2550,  39.0444,  44.5414,  ..., -12.3223, -32.7398, -52.2672],
        [ 15.3455,  43.3667,  48.5796,  ..., -14.2076, -35.8225, -55.6047],
        [ 56.5625,  63.2160,  58.2494,  ..., -28.9982, -43.1600, -55.8453],
        ...,
        [-79.6702, -32.9296,  -9.0854,  ...,  22.4517,  10.7451,  -4.6843],
        [ 52.3265,  63.9632,  61.2300,  ..., -28.3887, -43.0643, -57.8706],
        [-98.2555, -56.4340, -28.2569,  ...,  34.5736,  27.1011,  14.3435]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 3, 1, 8, 6, 1, 6, 8, 0, 5, 2, 5, 3, 0, 5, 5, 5, 3, 1, 7, 1, 0, 5, 2,
        2, 6, 7, 0, 5, 5, 3, 5, 1, 5, 3, 8, 2, 4, 3, 0, 5, 0, 0, 3, 0, 4, 7, 6,
        1, 3, 0, 6, 1, 8, 0, 7, 6, 8, 5, 3, 2, 0, 6, 0, 7, 1, 8, 4, 3, 4, 4, 8,
        6, 5, 2, 6, 3, 6, 6, 5, 2, 6, 7, 0, 8, 5, 3, 0, 6, 6, 0, 6, 7, 0, 1, 6,
        2, 0, 2, 4, 5, 0, 8, 6, 0, 0, 3, 6, 5, 6, 1, 6, 7, 2, 6, 5, 6, 3, 6, 0,
        6, 6, 4, 0, 4, 7, 0, 5]) 
pred: tensor([[-109.7585,  -60.3986,  -30.3673,  ...,   36.0675,   29.3546,
           15.5544],
        [  -9.1804,   16.3396,   25.7981,  ...,   -1.9360,  -16.1180,
          -33.0277],
        [  53.1692,   67.3166,   63.9248,  ...,  -25.7733,  -48.5826,
          -68.6446],
        ...,
        [-127.6169,  -85.8158,  -52.2622,  ...,   44.5623,   50.2278,
           45.5978],
        [  95.6850,   90.1619,   76.2249,  ...,  -40.6747,  -58.2221,
          -72.8357],
        [ -83.2797,  -38.2963,  -13.7317,  ...,   25.8760,   17.1493,
            1.3592]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 4, 5, 1, 3, 4, 8, 6, 3, 0, 2, 5, 3, 3, 7, 0, 6, 6, 7, 2, 6, 8, 7, 5,
        2, 6, 1, 6, 2, 5, 4, 4, 6, 0, 5, 2, 8, 0, 3, 7, 5, 4, 4, 0, 2, 2, 8, 5,
        5, 8, 0, 1, 7, 3, 6, 0, 0, 1, 1, 2, 0, 4, 2, 0, 1, 4, 1, 4, 7, 0, 3, 8,
        2, 1, 1, 4, 3, 6, 5, 1, 3, 3, 0, 1, 1, 1, 7, 6, 4, 2, 7, 2, 0, 7, 0, 5,
        6, 8, 4, 1, 2, 6, 3, 3, 1, 0, 2, 2, 7, 2, 2, 7, 6, 5, 8, 2, 6, 8, 1, 4,
        5, 1, 8, 1, 4, 5, 0, 6]) 
pred: tensor([[-124.4163,  -84.4351,  -52.6996,  ...,   45.9325,   48.1670,
           41.9016],
        [ -50.8658,   -9.1972,    8.1926,  ...,   13.1635,   -1.3657,
          -21.6744],
        [ -82.8747,  -33.3820,  -10.9250,  ...,   25.3219,   11.6481,
           -7.6765],
        ...,
        [ -73.8244,  -28.6027,   -6.9197,  ...,   25.1336,    8.3084,
          -13.4548],
        [  96.6706,   89.9773,   75.4602,  ...,  -40.6444,  -58.6871,
          -71.9803],
        [-117.1537,  -63.6117,  -33.5133,  ...,   39.5150,   31.4667,
           15.2103]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 1, 3, 0, 0, 3, 7, 2, 6, 7, 8, 0, 6, 7, 8, 4, 8, 1, 8, 0, 7, 1, 6, 7,
        6, 3, 3, 5, 4, 6, 3, 8, 7, 8, 1, 7, 2, 3, 8, 0, 8, 0, 2, 7, 3, 3, 7, 4,
        6, 2, 8, 7, 7, 8, 2, 2, 1, 7, 0, 7, 0, 0, 0, 3, 7, 1, 4, 2, 4, 5, 3, 1,
        1, 3, 6, 7, 7, 7, 6, 7, 3, 5, 1, 6, 4, 6, 3, 0, 8, 2, 8, 2, 7, 7, 5, 4,
        1, 8, 3, 8, 7, 2, 8, 0, 0, 5, 2, 6, 6, 7, 7, 0, 0, 2, 7, 5, 4, 8, 1, 3,
        5, 4, 7, 8, 1, 6, 0, 1]) 
pred: tensor([[  51.9332,   65.5345,   60.8415,  ...,  -26.0834,  -46.5189,
          -65.1296],
        [  58.4637,   67.2900,   61.0096,  ...,  -30.2457,  -45.6379,
          -59.5544],
        [ -14.2785,   12.4353,   19.7907,  ...,   -1.3566,  -14.3861,
          -27.7111],
        ...,
        [-112.3667,  -64.2989,  -34.8947,  ...,   39.1810,   31.5122,
           17.6001],
        [  96.9079,   92.1858,   77.9335,  ...,  -42.1891,  -61.2123,
          -75.5729],
        [  62.2704,   70.8353,   65.1358,  ...,  -29.6372,  -49.3794,
          -67.5817]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 0, 5, 5, 1, 0, 4, 2, 8, 2, 8, 5, 3, 6, 2, 6, 1, 3, 4, 1, 8, 3, 8, 6,
        3, 5, 3, 4, 4, 8, 1, 1, 8, 5, 6, 1, 0, 1, 0, 4, 2, 0, 7, 4, 0, 6, 6, 0,
        1, 6, 0, 2, 3, 2, 0, 4, 0, 0, 0, 4, 0, 7, 3, 5, 0, 0, 3, 6, 4, 2, 2, 8,
        1, 2, 8, 3, 3, 1, 1, 1, 1, 3, 5, 0, 0, 6, 7, 3, 7, 4, 4, 1, 5, 2, 6, 2,
        0, 6, 3, 8, 0, 6, 8, 4, 8, 6, 2, 2, 1, 6, 0, 1, 3, 8, 7, 8, 1, 1, 5, 5,
        1, 0, 6, 4, 6, 3, 8, 6]) 
pred: tensor([[ -85.0238,  -38.8600,  -13.0393,  ...,   25.7057,   14.2717,
           -1.2627],
        [ 102.2467,   93.9756,   80.7173,  ...,  -44.4023,  -61.8165,
          -74.1908],
        [ -99.8837,  -40.5261,  -13.1135,  ...,   25.1709,   14.7837,
           -1.1867],
        ...,
        [ -26.5016,   14.9701,   28.8435,  ...,   -2.3430,  -19.2992,
          -38.3854],
        [-153.8394, -116.4494,  -79.4898,  ...,   54.4650,   70.5608,
           76.3718],
        [-116.2967,  -61.2373,  -31.9292,  ...,   34.9136,   30.8511,
           18.5969]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 5, 3, 2, 1, 2, 3, 7, 1, 5, 2, 4, 0, 2, 0, 8, 0, 2, 0, 6, 0, 6, 6, 0,
        5, 0, 1, 4, 0, 7, 6, 5, 0, 0, 8, 2, 3, 0, 6, 7, 8, 7, 7, 5, 0, 7, 8, 8,
        6, 7, 3, 5, 2, 3, 7, 0, 4, 8, 6, 5, 3, 2, 4, 7, 7, 3, 6, 5, 2, 6, 2, 2,
        4, 5, 5, 0, 8, 0, 1, 4, 1, 0, 4, 5, 5, 3, 6, 3, 1, 6, 6, 0, 2, 6, 3, 2,
        2, 5, 6, 4, 2, 7, 7, 8, 3, 6, 1, 4, 7, 5, 3, 6, 2, 5, 0, 7, 5, 1, 7, 8,
        0, 5, 5, 5, 1, 3, 2, 1]) 
pred: tensor([[ 21.6210,  44.2658,  49.0410,  ..., -15.5336, -34.1317, -53.7722],
        [-85.2793, -36.1151, -10.3435,  ...,  23.4117,  14.5287,  -1.4595],
        [-22.8877,  15.9274,  28.7032,  ...,  -1.6929, -19.4833, -38.9244],
        ...,
        [-26.9974,  15.6071,  29.0684,  ...,  -1.5140, -19.5052, -38.9846],
        [  9.2151,  43.1585,  50.7875,  ..., -13.3456, -37.7087, -61.0003],
        [ 50.3006,  60.3995,  58.4137,  ..., -28.3925, -43.7045, -54.6604]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 4, 1, 8, 8, 6, 0, 1, 3, 0, 5, 3, 3, 3, 5, 6, 6, 4, 7, 3, 1, 5, 2, 6,
        4, 2, 5, 7, 6, 0, 3, 6, 0, 2, 0, 4, 3, 8, 5, 3, 5, 6, 4, 2, 8, 1, 0, 6,
        0, 1, 3, 1, 5, 0, 8, 3, 1, 7, 6, 8, 6, 8, 4, 8, 3, 3, 4, 6, 5, 0, 2, 1,
        2, 0, 2, 6, 8, 0, 2, 7, 8, 5, 7, 3, 4, 1, 1, 2, 1, 5, 7, 7, 4, 6, 6, 0,
        8, 2, 2, 7, 2, 6, 1, 5, 7, 1, 6, 3, 6, 8, 5, 0, 1, 1, 0, 5, 1, 7, 5, 7,
        1, 6, 0, 1, 3, 3, 6, 5]) 
pred: tensor([[ -95.2547,  -36.1740,   -9.3042,  ...,   22.1269,   11.2991,
           -3.6244],
        [ -65.2775,   -8.7255,   13.6208,  ...,   10.9353,   -5.3679,
          -25.8124],
        [  63.5759,   72.8161,   69.3976,  ...,  -31.4687,  -53.3691,
          -69.6212],
        ...,
        [ -20.4197,   14.8385,   27.2838,  ...,   -1.8013,  -19.2538,
          -35.2130],
        [-114.3145,  -64.7072,  -33.8135,  ...,   35.3808,   31.1231,
           20.3398],
        [ -85.9905,  -34.6094,   -9.3665,  ...,   23.0916,   10.5041,
           -5.6797]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 0, 6, 1, 0, 6, 5, 6, 7, 1, 4, 8, 0, 5, 7, 8, 7, 1, 4, 2, 3, 2, 8, 7,
        4, 3, 3, 8, 5, 1, 2, 3, 3, 2, 7, 6, 8, 5, 8, 5, 3, 1, 1, 5, 6, 6, 6, 7,
        6, 5, 1, 0, 0, 2, 7, 4, 4, 0, 1, 0, 8, 2, 5, 5, 1, 3, 0, 2, 8, 3, 3, 3,
        4, 3, 2, 1, 3, 8, 0, 3, 1, 7, 3, 6, 2, 0, 1, 3, 6, 8, 0, 4, 8, 4, 1, 3,
        5, 5, 3, 5, 2, 0, 5, 2, 5, 7, 7, 7, 0, 5, 0, 1, 6, 4, 4, 7, 6, 5, 0, 0,
        8, 3, 8, 0, 1, 0, 5, 0]) 
pred: tensor([[  58.4429,   70.2112,   67.3174,  ...,  -29.6411,  -50.6254,
          -67.7911],
        [ 103.4298,   93.8825,   81.5403,  ...,  -43.7586,  -63.0988,
          -74.4172],
        [-111.7296,  -54.6672,  -25.2837,  ...,   32.8092,   24.8505,
            8.8319],
        ...,
        [ 107.2397,   92.7538,   79.5392,  ...,  -46.4915,  -60.4732,
          -66.5272],
        [ -85.8553,  -28.2913,   -3.8802,  ...,   21.4635,    7.1288,
          -13.2658],
        [ 104.1026,   91.8616,   79.4542,  ...,  -44.5715,  -59.4755,
          -68.9081]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 3, 4, 5, 0, 3, 6, 5, 3, 0, 1, 5, 0, 4, 1, 5, 2, 4, 0, 8, 7, 6, 1, 0,
        4, 8, 0, 5, 3, 0, 5, 2, 8, 5, 1, 2, 6, 7, 7, 7, 6, 2, 1, 0, 2, 4, 5, 0,
        3, 1, 4, 2, 2, 0, 0, 0, 0, 6, 2, 8, 5, 0, 5, 4, 2, 2, 2, 6, 3, 3, 5, 0,
        6, 0, 2, 7, 0, 4, 8, 8, 3, 8, 5, 5, 2, 5, 8, 4, 8, 4, 1, 4, 2, 5, 6, 4,
        8, 0, 2, 7, 5, 3, 8, 0, 4, 6, 8, 6, 6, 4, 6, 0, 2, 1, 1, 2, 1, 3, 6, 3,
        1, 4, 3, 6, 4, 8, 5, 2]) 
pred: tensor([[  65.6785,   74.1644,   69.4389,  ...,  -29.1680,  -55.2046,
          -75.3204],
        [ -31.2871,   15.0061,   29.7984,  ...,    2.6524,  -21.8479,
          -47.0770],
        [ -59.2376,   -5.0189,   15.1541,  ...,   13.2051,   -7.7417,
          -33.4380],
        ...,
        [-156.3705, -114.3174,  -77.2702,  ...,   55.6598,   68.7093,
           70.0985],
        [ -74.1361,  -35.6404,  -13.4180,  ...,   23.0484,   16.2932,
            2.4606],
        [  16.7738,   47.9645,   52.7925,  ...,  -16.9443,  -38.1349,
          -59.9068]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 5, 2, 7, 2, 0, 2, 0, 8, 2, 3, 5, 5, 1, 7, 0, 4, 0, 7, 6, 4, 2, 8, 4,
        7, 5, 6, 5, 1, 6, 1, 3, 7, 0, 5, 2, 2, 8, 3, 7, 3, 4, 8, 1, 3, 2, 0, 3,
        2, 4, 4, 4, 6, 3, 3, 0, 5, 1, 1, 7, 6, 2, 8, 2, 8, 3, 0, 7, 0, 3, 2, 0,
        1, 0, 3, 6, 2, 0, 3, 0, 2, 4, 1, 2, 8, 3, 1, 4, 0, 7, 8, 4, 1, 1, 6, 0,
        8, 2, 8, 2, 4, 4, 4, 0, 0, 7, 2, 7, 3, 1, 0, 5, 0, 2, 1, 7, 0, 1, 6, 3,
        3, 2, 3, 8, 0, 5, 6, 4]) 
pred: tensor([[  50.7020,   61.1697,   57.6245,  ...,  -27.3669,  -43.9503,
          -57.7928],
        [ -89.0928,  -36.8456,  -12.3461,  ...,   27.0862,   12.9156,
           -6.7398],
        [  17.8078,   48.0811,   51.9899,  ...,  -14.1259,  -40.6531,
          -65.8010],
        ...,
        [-100.5603,  -39.0894,  -11.9138,  ...,   28.7596,   13.5642,
           -8.1808],
        [-109.4584,  -59.7403,  -31.3554,  ...,   36.2067,   28.9368,
           14.5594],
        [ -60.3959,  -17.0593,    1.6933,  ...,   13.0952,    2.6304,
          -12.4874]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 6, 5, 3, 0, 0, 8, 5, 6, 4, 8, 2, 5, 3, 7, 0, 7, 2, 7, 2, 6, 6, 1, 1,
        8, 7, 3, 1, 3, 6, 2, 2, 2, 5, 8, 0, 3, 1, 1, 0, 5, 5, 0, 5, 0, 1, 3, 6,
        7, 4, 7, 2, 2, 4, 7, 1, 8, 0, 0, 3, 0, 1, 0, 8, 1, 6, 7, 3, 8, 0, 7, 2,
        3, 2, 0, 3, 1, 6, 1, 3, 2, 1, 6, 5, 8, 6, 4, 0, 6, 8, 6, 8, 1, 2, 8, 0,
        2, 7, 1, 6, 0, 6, 7, 0, 0, 6, 3, 2, 7, 8, 0, 5, 6, 7, 0, 1, 1, 8, 5, 0,
        6, 7, 8, 5, 8, 0, 8, 4]) 
pred: tensor([[  14.5950,   43.6241,   46.9381,  ...,  -14.3696,  -35.9300,
          -57.7734],
        [-123.9508,  -68.8597,  -37.8820,  ...,   39.8347,   33.5300,
           21.0384],
        [-107.2464,  -43.2261,  -14.0938,  ...,   31.1928,   15.1589,
           -6.3600],
        ...,
        [ 100.7101,   90.4716,   76.2348,  ...,  -43.0540,  -57.8256,
          -69.0181],
        [-173.0354, -131.0571,  -89.4942,  ...,   62.4977,   76.8333,
           83.5107],
        [ -60.5854,  -17.5547,    3.0813,  ...,   17.4752,   -0.3109,
          -18.9436]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 5, 6, 6, 6, 3, 5, 2, 1, 2, 7, 8, 8, 2, 6, 6, 1, 8, 8, 1, 2, 1, 2, 7,
        3, 5, 6, 5, 0, 1, 1, 6, 3, 8, 7, 2, 6, 0, 6, 0, 4, 3, 2, 4, 3, 6, 3, 0,
        4, 8, 4, 5, 4, 4, 1, 5, 2, 2, 2, 8, 5, 3, 1, 2, 4, 1, 0, 3, 8, 2, 2, 0,
        4, 7, 3, 5, 1, 3, 2, 2, 3, 6, 4, 0, 3, 6, 7, 6, 6, 6, 0, 3, 2, 5, 8, 3,
        5, 6, 3, 0, 3, 2, 4, 0, 6, 5, 7, 0, 7, 5, 3, 0, 1, 4, 2, 0, 4, 3, 5, 6,
        2, 5, 3, 4, 7, 4, 2, 4]) 
pred: tensor([[  13.4795,   42.1611,   47.2657,  ...,  -11.1415,  -35.8539,
          -58.4418],
        [ -88.6617,  -34.1446,   -8.9124,  ...,   28.2922,    8.5815,
          -14.6429],
        [-121.9432,  -65.4423,  -34.0491,  ...,   38.6274,   29.8963,
           16.0263],
        ...,
        [ -67.3444,  -10.5203,   11.7403,  ...,   14.6690,   -5.5664,
          -28.5032],
        [  12.0706,   44.2747,   50.2850,  ...,  -11.7845,  -38.8203,
          -64.2624],
        [ -54.0231,   -3.0917,   15.6974,  ...,   16.8315,  -12.7123,
          -43.7896]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 1, 8, 2, 2, 1, 4, 8, 2, 8, 7, 6, 2, 1, 0, 0, 6, 6, 8, 6, 4, 5, 1, 2,
        0, 1, 2, 8, 3, 2, 0, 0, 1, 4, 8, 3, 8, 0, 8, 3, 4, 8, 8, 3, 7, 1, 3, 8,
        5, 5, 2, 1, 3, 7, 4, 1, 1, 7, 5, 0, 5, 0, 0, 1, 3, 2, 7, 2, 1, 1, 1, 7,
        5, 4, 0, 8, 4, 5, 3, 1, 1, 1, 1, 2, 4, 4, 7, 7, 1, 3, 5, 4, 4, 1, 5, 4,
        5, 3, 7, 8, 4, 7, 3, 4, 6, 1, 2, 2, 0, 6, 2, 3, 4, 8, 5, 0, 8, 0, 1, 0,
        0, 3, 1, 4, 7, 8, 8, 1]) 
pred: tensor([[-114.9483,  -71.5489,  -38.9544,  ...,   36.9541,   35.3076,
           29.7211],
        [  53.5630,   66.3615,   63.9749,  ...,  -29.0683,  -46.3008,
          -61.1859],
        [-153.1951, -117.0811,  -79.1133,  ...,   55.1436,   68.0945,
           74.7492],
        ...,
        [-155.0546, -117.4759,  -78.3204,  ...,   55.1490,   68.2415,
           74.5794],
        [-167.8868, -126.4128,  -84.6500,  ...,   59.3447,   73.0176,
           79.8099],
        [  59.7317,   69.4677,   66.1309,  ...,  -31.7408,  -46.9851,
          -61.3553]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 2, 0, 5, 8, 5, 3, 7, 0, 1, 5, 8, 5, 8, 2, 2, 0, 6, 3, 7, 6, 6, 0, 8,
        7, 6, 0, 6, 0, 4, 6, 6, 6, 7, 1, 3, 3, 2, 0, 1, 8, 6, 5, 1, 4, 8, 7, 8,
        7, 2, 0, 5, 8, 8, 5, 7, 3, 2, 2, 3, 2, 7, 6, 1, 7, 2, 4, 2, 0, 3, 5, 2,
        2, 2, 2, 1, 0, 5, 1, 3, 3, 7, 5, 4, 0, 6, 3, 2, 1, 3, 0, 8, 4, 7, 6, 0,
        8, 4, 1, 3, 1, 5, 7, 1, 6, 0, 1, 0, 6, 6, 3, 2, 7, 6, 5, 3, 7, 8, 1, 6,
        2, 1, 4, 2, 6, 6, 4, 2]) 
pred: tensor([[ 108.8598,  101.8405,   89.0041,  ...,  -46.9129,  -68.5014,
          -83.9008],
        [  22.5597,   47.9247,   52.4599,  ...,  -20.3244,  -36.3483,
          -53.1617],
        [ 108.6340,  102.4948,   89.6191,  ...,  -46.9067,  -68.9763,
          -85.1660],
        ...,
        [-106.9427,  -55.5062,  -25.6375,  ...,   33.7602,   24.5914,
            9.0864],
        [ -44.8984,    4.4739,   22.5236,  ...,   12.1888,  -17.0728,
          -48.2416],
        [  23.1065,   50.8188,   54.8144,  ...,  -18.9051,  -39.8655,
          -61.4987]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 2, 0, 4, 4, 3, 6, 7, 4, 3, 6, 8, 6, 2, 6, 3, 5, 0, 7, 1, 1, 2, 4, 2,
        0, 1, 8, 8, 7, 2, 5, 0, 8, 1, 1, 8, 3, 1, 5, 7, 6, 3, 5, 2, 7, 1, 7, 7,
        1, 7, 0, 8, 2, 1, 7, 3, 5, 0, 6, 7, 8, 0, 2, 0, 7, 6, 5, 2, 7, 1, 2, 5,
        0, 7, 1, 6, 6, 7, 3, 4, 0, 1, 3, 0, 7, 7, 5, 8, 0, 5, 4, 7, 2, 6, 2, 0,
        5, 7, 4, 5, 0, 6, 5, 3, 5, 3, 7, 5, 0, 0, 3, 5, 7, 0, 1, 8, 0, 3, 0, 2,
        2, 8, 5, 0, 8, 2, 2, 0]) 
pred: tensor([[-105.9308,  -55.8249,  -25.7563,  ...,   33.3586,   25.2977,
           10.3631],
        [  23.4880,   48.2516,   53.2963,  ...,  -19.8268,  -37.0996,
          -54.4008],
        [ 105.5248,   99.5916,   86.2918,  ...,  -45.6356,  -64.9207,
          -80.0240],
        ...,
        [  14.2260,   48.7400,   56.3017,  ...,  -15.8457,  -39.8392,
          -63.2975],
        [  13.1102,   44.4252,   50.9525,  ...,  -16.8390,  -34.6257,
          -53.1165],
        [ 100.2085,   94.1982,   82.4012,  ...,  -44.1298,  -61.0623,
          -73.0632]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 8, 0, 1, 8, 0, 2, 1, 6, 7, 2, 4, 5, 1, 3, 5, 2, 7, 2, 6, 7, 7, 0, 1,
        7, 4, 7, 1, 6, 3, 3, 1, 4, 0, 7, 1, 8, 8, 1, 7, 4, 3, 3, 5, 0, 8, 0, 6,
        5, 3, 0, 3, 2, 1, 6, 0, 1, 5, 7, 3, 0, 8, 1, 1, 1, 7, 1, 1, 1, 0, 2, 0,
        3, 0, 6, 3, 8, 1, 5, 7, 1, 7, 7, 2, 4, 6, 7, 3, 2, 7, 4, 2, 8, 3, 6, 8,
        8, 5, 4, 1, 8, 0, 6, 3, 7, 0, 3, 2, 2, 8, 0, 3, 5, 6, 0, 7, 5, 5, 7, 7,
        3, 6, 6, 3, 0, 6, 0, 1]) 
pred: tensor([[-124.4794,  -68.4693,  -32.8598,  ...,   38.0679,   33.4340,
           18.2684],
        [-172.1032, -129.4372,  -84.1937,  ...,   59.0055,   77.2049,
           82.2409],
        [  98.1216,   93.9340,   81.7125,  ...,  -43.4781,  -61.3000,
          -73.8701],
        ...,
        [-110.2472,  -58.7084,  -26.6383,  ...,   34.6942,   27.1549,
           11.8045],
        [ 102.0687,   94.9115,   80.9125,  ...,  -45.2015,  -61.0343,
          -72.1588],
        [  60.3729,   75.2400,   70.5951,  ...,  -30.7906,  -52.4953,
          -72.3463]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 6, 5, 3, 6, 0, 6, 1, 0, 3, 8, 3, 2, 2, 7, 7, 8, 8, 5, 7, 8, 4, 4, 3,
        3, 2, 4, 6, 6, 8, 2, 0, 8, 7, 1, 5, 0, 4, 4, 1, 8, 7, 2, 2, 1, 7, 1, 7,
        0, 3, 7, 3, 8, 5, 4, 6, 3, 8, 4, 5, 5, 2, 7, 1, 6, 1, 1, 1, 7, 3, 7, 7,
        0, 5, 0, 7, 2, 7, 0, 0, 1, 0, 5, 1, 7, 8, 2, 3, 3, 0, 1, 3, 3, 4, 0, 6,
        7, 1, 8, 7, 7, 6, 7, 0, 0, 4, 2, 1, 8, 0, 5, 7, 2, 3, 8, 2, 5, 7, 6, 2,
        2, 1, 5, 2, 8, 4, 5, 1]) 
pred: tensor([[-122.4836,  -67.9014,  -33.8868,  ...,   39.1915,   33.5137,
           17.7859],
        [-118.9471,  -65.9207,  -33.7104,  ...,   38.4573,   33.0363,
           17.0775],
        [ -99.2830,  -41.8528,  -13.2298,  ...,   29.1119,   15.0452,
           -6.7167],
        ...,
        [ -68.1823,  -14.9631,    7.3109,  ...,   17.7878,   -1.7023,
          -27.4111],
        [ -80.5114,  -34.1934,   -8.8546,  ...,   24.0460,   12.4734,
           -6.6073],
        [  62.7011,   74.4128,   68.6409,  ...,  -31.5476,  -53.6967,
          -71.8346]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 2, 8, 8, 2, 2, 2, 8, 4, 3, 2, 4, 7, 0, 4, 1, 4, 5, 0, 7, 0, 2, 1, 7,
        1, 2, 5, 6, 5, 7, 5, 7, 7, 0, 1, 8, 7, 6, 3, 1, 6, 5, 3, 8, 4, 0, 0, 2,
        5, 6, 2, 2, 0, 7, 4, 7, 0, 6, 3, 1, 0, 8, 1, 0, 6, 3, 1, 4, 8, 2, 2, 2,
        5, 5, 3, 1, 0, 6, 4, 2, 0, 5, 8, 7, 8, 4, 7, 6, 6, 3, 0, 3, 2, 3, 0, 0,
        2, 0, 2, 7, 5, 5, 7, 5, 7, 7, 4, 7, 5, 0, 2, 1, 4, 8, 0, 0, 8, 4, 2, 3,
        4, 6, 4, 2, 6, 2, 8, 0]) 
pred: tensor([[-129.7070,  -73.0120,  -37.8616,  ...,   42.3149,   35.2165,
           19.6044],
        [  31.6527,   52.4334,   52.0917,  ...,  -19.8625,  -39.8487,
          -60.0253],
        [-164.4794, -126.7738,  -84.3646,  ...,   59.2552,   75.2185,
           80.5178],
        ...,
        [   4.5248,   41.1257,   47.2134,  ...,   -8.8770,  -38.1077,
          -64.8065],
        [-177.6970, -136.9143,  -90.7758,  ...,   63.3387,   81.1279,
           87.5380],
        [ 103.2284,   99.0958,   82.5092,  ...,  -43.4804,  -66.4146,
          -82.4059]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 8, 8, 0, 2, 2, 3, 7, 6, 7, 8, 0, 5, 8, 3, 6, 6, 3, 5, 2, 5, 5, 0, 4,
        6, 7, 0, 5, 7, 5, 8, 5, 6, 4, 1, 3, 0, 7, 4, 6, 7, 5, 3, 7, 4, 4, 7, 7,
        3, 6, 0, 3, 6, 1, 5, 0, 8, 6, 4, 6, 8, 3, 2, 3, 2, 5, 5, 8, 1, 3, 2, 2,
        6, 2, 1, 4, 8, 5, 5, 6, 5, 8, 0, 1, 6, 2, 0, 7, 3, 0, 3, 2, 0, 0, 2, 8,
        0, 1, 3, 4, 1, 2, 7, 8, 0, 8, 3, 3, 5, 4, 8, 6, 6, 5, 5, 7, 6, 6, 2, 1,
        1, 2, 6, 6, 5, 4, 5, 6]) 
pred: tensor([[-165.5904, -127.4726,  -84.2184,  ...,   60.0862,   74.9686,
           80.5120],
        [-162.5745, -126.3175,  -83.6948,  ...,   58.9206,   74.7433,
           81.2430],
        [-174.4797, -133.3414,  -87.3825,  ...,   62.2864,   78.1538,
           84.3066],
        ...,
        [ -59.3657,  -10.2851,   10.2554,  ...,   14.1066,   -4.4294,
          -25.7603],
        [ -93.0419,  -40.9931,  -12.8952,  ...,   24.7886,   16.8397,
            1.8148],
        [-101.8268,  -64.8266,  -34.7517,  ...,   34.7978,   31.7924,
           25.3311]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 3, 3, 2, 4, 6, 4, 5, 6, 1, 6, 6, 6, 4, 8, 8, 3, 7, 8, 0, 0, 7, 6, 5,
        4, 5, 0, 2, 2, 5, 1, 2, 4, 4, 6, 2, 1, 3, 1, 6, 0, 7, 6, 7, 4, 5, 4, 4,
        4, 4, 2, 0, 0, 2, 6, 2, 0, 6, 3, 1, 5, 7, 6, 3, 6, 5, 6, 7, 1, 0, 6, 6,
        2, 2, 3, 2, 7, 3, 2, 1, 1, 6, 1, 1, 5, 4, 2, 5, 0, 7, 0, 4, 2, 7, 8, 8,
        6, 8, 2, 2, 0, 4, 4, 2, 8, 6, 1, 4, 2, 0, 8, 2, 0, 3, 8, 4, 2, 8, 7, 5,
        5, 0, 8, 6, 1, 2, 1, 2]) 
pred: tensor([[-91.8600, -35.5088,  -7.6591,  ...,  27.2491,   9.5414, -13.8667],
        [-10.8064,  22.4270,  34.6000,  ...,  -3.6079, -23.9288, -44.2648],
        [-15.9567,  23.9216,  36.8141,  ...,  -5.3896, -26.4482, -46.8418],
        ...,
        [ 41.4203,  55.4869,  55.8713,  ..., -21.6844, -40.6577, -57.1261],
        [ 60.3684,  72.9756,  69.5843,  ..., -30.3042, -53.7305, -70.7946],
        [ 22.4071,  44.3623,  48.6860,  ..., -13.9197, -37.6478, -57.6551]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 7, 1, 7, 0, 4, 6, 0, 6, 0, 1, 4, 0, 2, 6, 4, 3, 6, 6, 4, 1, 4, 1, 4,
        8, 3, 7, 2, 8, 6, 2, 4, 8, 8, 8, 5, 6, 3, 4, 2, 5, 7, 0, 8, 6, 6, 2, 7,
        2, 1, 8, 0, 0, 6, 6, 5, 5, 5, 3, 1, 7, 2, 6, 8, 6, 4, 6, 7, 8, 7, 3, 2,
        8, 8, 6, 4, 7, 5, 3, 4, 8, 7, 4, 6, 7, 5, 4, 8, 4, 8, 6, 3, 8, 3, 3, 5,
        4, 4, 0, 2, 0, 3, 7, 2, 4, 4, 4, 1, 8, 5, 3, 7, 0, 1, 6, 8, 7, 2, 2, 7,
        4, 6, 7, 5, 8, 1, 7, 1]) 
pred: tensor([[ -97.5431,  -56.4543,  -26.8495,  ...,   31.0253,   27.8085,
           17.8353],
        [-124.1011,  -82.0124,  -46.1620,  ...,   42.8176,   43.4530,
           37.6276],
        [  68.4642,   82.7267,   79.8077,  ...,  -33.1050,  -61.0516,
          -83.8541],
        ...,
        [  78.3664,   81.6284,   75.7041,  ...,  -37.0348,  -54.5507,
          -68.7771],
        [-146.3026,  -93.6884,  -52.4798,  ...,   47.8839,   50.5516,
           43.5823],
        [  68.1340,   81.2171,   77.6357,  ...,  -31.9708,  -60.5851,
          -83.3494]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 3, 0, 6, 4, 5, 4, 6, 4, 2, 4, 2, 3, 8, 0, 6, 2, 0, 6, 2, 1, 6, 2, 0,
        2, 5, 3, 3, 5, 2, 2, 1, 5, 8, 3, 2, 5, 4, 8, 5, 0, 7, 1, 8, 8, 5, 1, 8,
        2, 6, 6, 6, 7, 5, 6, 6, 1, 0, 0, 4, 6, 4, 2, 4, 4, 4, 5, 8, 7, 5, 5, 0,
        6, 4, 0, 5, 7, 4, 5, 2, 4, 1, 1, 5, 8, 8, 5, 8, 8, 6, 2, 2, 6, 2, 6, 6,
        8, 8, 8, 6, 5, 3, 1, 8, 7, 5, 7, 6, 8, 8, 6, 3, 0, 8, 5, 2, 5, 7, 1, 5,
        2, 2, 4, 3, 2, 0, 6, 7]) 
pred: tensor([[-167.6007, -125.5604,  -81.1753,  ...,   58.1655,   75.3407,
           79.5545],
        [ -29.9739,   18.2565,   34.0525,  ...,   -1.0344,  -22.4955,
          -46.5606],
        [ 105.5765,   97.3087,   84.4475,  ...,  -46.9193,  -63.8167,
          -74.1022],
        ...,
        [ 104.7892,  100.9748,   88.9499,  ...,  -45.6903,  -67.0425,
          -83.1934],
        [-136.4785,  -70.9926,  -32.4468,  ...,   38.8130,   34.7217,
           20.0575],
        [-151.4307,  -95.9689,  -55.0482,  ...,   49.1120,   52.7632,
           44.8702]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 2, 6, 4, 6, 6, 8, 8, 3, 5, 6, 5, 0, 8, 8, 1, 0, 3, 8, 4, 7, 2, 2, 1,
        5, 3, 5, 6, 0, 5, 3, 2, 5, 8, 6, 8, 6, 4, 4, 2, 3, 5, 4, 6, 1, 6, 8, 5,
        1, 6, 3, 8, 8, 7, 1, 5, 6, 7, 4, 6, 0, 8, 2, 0, 1, 8, 8, 8, 6, 3, 8, 7,
        0, 5, 4, 3, 5, 4, 0, 2, 3, 6, 2, 6, 0, 0, 4, 4, 1, 8, 4, 6, 5, 4, 5, 6,
        6, 2, 8, 2, 0, 4, 3, 2, 5, 0, 4, 6, 0, 5, 5, 4, 8, 0, 4, 6, 5, 3, 6, 6,
        8, 5, 6, 6, 3, 0, 2, 8]) 
pred: tensor([[-135.6252,  -93.1453,  -55.6416,  ...,   46.7804,   52.7222,
           48.4962],
        [  10.4853,   45.3496,   53.8386,  ...,  -12.6810,  -38.9829,
          -64.0634],
        [-135.9223,  -74.8755,  -37.8196,  ...,   40.3141,   38.1510,
           24.2255],
        ...,
        [ 109.1919,  100.4777,   86.2056,  ...,  -48.8423,  -63.7769,
          -74.5989],
        [   1.9383,   43.3106,   54.3030,  ...,  -13.3110,  -37.6405,
          -62.5961],
        [-174.3617, -129.3384,  -84.0696,  ...,   59.6008,   78.0743,
           82.1062]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 4, 1, 2, 6, 3, 1, 2, 2, 6, 6, 1, 5, 1, 2, 2, 1, 7, 3, 2, 6, 7, 3, 4,
        3, 5, 2, 4, 8, 6, 0, 3, 5, 5, 0, 4, 1, 3, 5, 8, 2, 0, 3, 8, 1, 2, 1, 3,
        2, 8, 8, 1, 2, 3, 6, 6, 8, 7, 1, 8, 0, 8, 1, 8, 5, 0, 7, 4, 6, 5, 2, 4,
        6, 6, 3, 0, 0, 8, 8, 3, 6, 0, 5, 2, 1, 8, 0, 5, 3, 6, 7, 7, 5, 1, 6, 2,
        5, 2, 4, 5, 2, 0, 4, 1, 0, 8, 3, 6, 6, 4, 3, 3, 2, 8, 2, 1, 8, 5, 0, 4,
        1, 2, 8, 2, 5, 7, 5, 5]) 
pred: tensor([[  22.1968,   49.4171,   52.5790,  ...,  -18.9397,  -38.7316,
          -57.9220],
        [ -37.8069,   -7.2360,    9.1444,  ...,    9.0734,   -4.0709,
          -19.0403],
        [  51.8679,   71.5362,   70.0046,  ...,  -25.7086,  -54.0129,
          -78.9532],
        ...,
        [-152.8830,  -96.8380,  -58.1697,  ...,   49.1201,   52.6888,
           46.2699],
        [ -99.7744,  -42.7111,  -13.5239,  ...,   28.5914,   14.8444,
           -4.8942],
        [ -95.4930,  -45.3980,  -17.2971,  ...,   27.2621,   18.7825,
            4.2026]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 0, 1, 4, 8, 6, 3, 1, 4, 1, 1, 6, 4, 8, 1, 0, 1, 2, 2, 7, 0, 4, 4, 1,
        2, 6, 1, 7, 5, 5, 5, 5, 6, 0, 1, 2, 1, 6, 0, 0, 1, 1, 1, 5, 8, 2, 7, 0,
        6, 5, 5, 6, 6, 0, 1, 7, 4, 0, 8, 5, 4, 5, 1, 0, 3, 6, 2, 6, 3, 4, 2, 1,
        7, 6, 6, 2, 6, 6, 6, 0, 2, 8, 5, 3, 7, 1, 5, 0, 1, 0, 6, 6, 1, 0, 1, 1,
        8, 4, 4, 8, 0, 8, 0, 7, 5, 8, 4, 5, 0, 4, 1, 5, 6, 1, 5, 0, 4, 4, 3, 8,
        8, 0, 6, 0, 1, 2, 5, 1]) 
pred: tensor([[-96.3938, -42.0588, -13.4575,  ...,  27.7423,  13.3156,  -4.0106],
        [107.7036, 104.0826,  90.2474,  ..., -46.3250, -71.6740, -90.3123],
        [ 64.6978,  79.4288,  74.2171,  ..., -30.7412, -59.9465, -84.2589],
        ...,
        [ 31.5582,  51.1395,  51.4902,  ..., -17.4189, -42.4313, -63.7818],
        [-94.3637, -39.8946, -12.0530,  ...,  26.7522,  12.5942,  -5.6434],
        [ 64.0876,  80.4686,  75.4976,  ..., -31.9453, -60.3341, -84.5573]],
       grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 6, 4, 1, 2, 8, 8, 6, 6, 3, 6, 6, 4, 6, 4, 4, 1, 5, 8, 3, 3, 8, 5, 5,
        3, 3, 0, 5, 3, 1, 5, 3, 2, 8, 6, 0, 3, 0, 8, 6, 8, 7, 6, 7, 5, 7, 3, 6,
        4, 6, 5, 5, 2, 1, 6, 8, 3, 6, 1, 2, 2, 0, 8, 3, 2, 7, 5, 2, 4, 6, 2, 3,
        6, 5, 0, 4, 8, 8, 0, 4, 0, 5, 7, 5, 8, 7, 8, 1, 7, 8, 2, 6, 7, 5, 1, 5,
        0, 7, 7, 2, 0, 4, 7, 6, 4, 1, 0, 2, 8, 5, 3, 8, 6, 6, 7, 1, 4, 2, 7, 0,
        5, 4, 4, 1, 7, 6, 7, 4]) 
pred: tensor([[ -82.9531,  -31.7664,   -6.5726,  ...,   24.9470,    7.1624,
          -13.9784],
        [-127.7681,  -70.1371,  -37.6961,  ...,   40.3362,   32.2050,
           18.2507],
        [ -68.9005,  -14.7293,    7.5016,  ...,   17.3360,   -4.5085,
          -28.1930],
        ...,
        [-108.7291,  -62.8598,  -34.1447,  ...,   34.5694,   28.9336,
           19.6460],
        [-144.3791,  -96.7248,  -60.3655,  ...,   50.8321,   50.8430,
           45.2780],
        [ -66.1794,   -7.9889,   13.1424,  ...,   14.1722,   -9.4578,
          -35.4756]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([2, 7, 6, 2, 8, 6, 5, 1, 2, 6, 6, 2, 5, 1, 4, 6, 8, 4, 4, 0, 0, 1, 1, 1,
        5, 7, 3, 0, 7, 2, 1, 5, 3, 1, 8, 8, 2, 2, 4, 1, 2, 3, 3, 2, 5, 2, 5, 1,
        4, 2, 4, 2, 4, 1, 7, 6, 6, 4, 6, 6, 5, 6, 0, 5, 6, 1, 7, 6, 5, 8, 2, 7,
        0, 0, 3, 4, 8, 6, 8, 4, 1, 1, 8, 0, 6, 0, 6, 6, 0, 8, 6, 2, 3, 7, 2, 3,
        4, 1, 5, 1, 5, 3, 4, 8, 5, 1, 3, 0, 1, 5, 4, 7, 2, 1, 3, 0, 8, 2, 5, 3,
        4, 6, 2, 2, 7, 1, 4, 4]) 
pred: tensor([[  18.2786,   47.1050,   51.8213,  ...,  -14.2153,  -38.3786,
          -62.8249],
        [-167.7054, -108.1804,  -67.0004,  ...,   54.2609,   59.5004,
           53.4462],
        [-140.0953,  -78.1065,  -41.3046,  ...,   43.0881,   38.9261,
           24.9530],
        ...,
        [  71.1433,   75.9998,   67.8109,  ...,  -32.1345,  -52.4588,
          -69.9998],
        [ -54.3812,   -4.0248,   15.5340,  ...,   15.1739,  -11.2891,
          -40.5382],
        [ -74.7920,  -13.9053,   10.1811,  ...,   16.3943,   -4.4389,
          -30.5531]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 5, 8, 6, 3, 8, 8, 6, 0, 2, 2, 8, 8, 7, 8, 3, 0, 0, 4, 5, 1, 5, 8, 2,
        4, 4, 6, 6, 2, 3, 6, 8, 4, 3, 0, 6, 7, 0, 2, 0, 8, 7, 4, 3, 1, 4, 0, 1,
        0, 6, 7, 7, 0, 8, 2, 2, 4, 4, 3, 2, 0, 2, 6, 2, 2, 8, 4, 7, 2, 3, 5, 5,
        1, 1, 6, 1, 2, 1, 0, 6, 8, 5, 7, 2, 8, 3, 4, 5, 5, 4, 4, 2, 6, 3, 5, 4,
        2, 3, 3, 1, 7, 6, 2, 2, 1, 2, 1, 1, 6, 3, 5, 2, 7, 0, 6, 5, 4, 0, 6, 8,
        0, 0, 0, 7, 4, 2, 8, 7]) 
pred: tensor([[ -65.9585,  -14.7421,    7.9509,  ...,   16.2688,   -2.0503,
          -26.2091],
        [ -87.4959,  -38.1046,   -9.8505,  ...,   25.9444,   14.6429,
           -4.5495],
        [-175.9496, -130.2534,  -85.3701,  ...,   59.1797,   79.4222,
           84.7572],
        ...,
        [  13.2623,   43.2761,   49.1331,  ...,  -15.0270,  -35.8626,
          -56.6193],
        [-175.9496, -130.2534,  -85.3701,  ...,   59.1797,   79.4222,
           84.7572],
        [-147.8918,  -97.7309,  -60.4426,  ...,   48.2110,   56.5028,
           51.6945]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 6, 6, 7, 8, 1, 1, 2, 1, 8, 3, 5, 3, 6, 8, 6, 3, 5, 2, 5, 2, 8, 8, 8,
        2, 1, 4, 2, 3, 2, 5, 1, 6, 2, 5, 7, 4, 3, 1, 2, 3, 4, 4, 4, 7, 5, 5, 3,
        7, 5, 0, 5, 0, 3, 0, 4, 0, 1, 8, 2, 7, 0, 1, 0, 3, 0, 1, 1, 0, 1, 7, 5,
        6, 1, 5, 2, 4, 6, 4, 0, 0, 4, 3, 0, 3, 6, 7, 5, 3, 0, 7, 1, 2, 3, 1, 2,
        5, 8, 0, 1, 3, 8, 5, 0, 7, 1, 5, 7, 6, 5, 3, 1, 5, 2, 2, 6, 2, 2, 8, 2,
        6, 6, 0, 3, 6, 7, 2, 2]) 
pred: tensor([[ 108.1636,  102.1870,   89.5265,  ...,  -44.7719,  -69.3096,
          -86.8955],
        [-121.8406,  -66.3608,  -32.2484,  ...,   37.4026,   32.1422,
           17.8741],
        [-126.1855,  -67.1787,  -31.5269,  ...,   37.5227,   32.6151,
           18.3975],
        ...,
        [-144.1331,  -97.6512,  -58.1683,  ...,   49.1359,   55.3420,
           51.0463],
        [  39.5806,   57.0573,   59.9230,  ...,  -20.9599,  -44.6449,
          -65.6311],
        [  17.9434,   45.0439,   50.0685,  ...,  -15.1130,  -37.0817,
          -58.2574]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 3, 7, 3, 7, 0, 6, 0, 4, 7, 4, 4, 0, 1, 7, 8, 2, 4, 1, 6, 5, 6, 5, 1,
        2, 0, 0, 0, 7, 3, 0, 4, 4, 1, 7, 1, 0, 6, 8, 6, 1, 0, 0, 7, 2, 5, 8, 5,
        4, 5, 2, 2, 2, 4, 3, 0, 8, 5, 0, 8, 5, 3, 0, 0, 6, 3, 6, 4, 6, 1, 7, 7,
        1, 0, 2, 7, 0, 1, 3, 6, 1, 2, 8, 7, 7, 4, 7, 1, 0, 4, 3, 5, 1, 0, 0, 3,
        3, 0, 7, 0, 6, 5, 5, 2, 5, 2, 5, 3, 2, 1, 1, 8, 0, 0, 1, 8, 2, 7, 7, 3,
        1, 5, 5, 4, 0, 3, 8, 1]) 
pred: tensor([[ -51.6105,   -3.0733,   17.9421,  ...,   10.0267,   -9.4877,
          -32.0160],
        [ -22.4582,   17.7627,   33.4462,  ...,   -3.4477,  -22.1072,
          -39.8397],
        [-155.0591,  -97.0809,  -57.3360,  ...,   49.5886,   52.5675,
           46.3225],
        ...,
        [  -7.7214,   25.4703,   37.1129,  ...,   -5.7548,  -25.6433,
          -45.5556],
        [-168.8772, -123.7873,  -80.2841,  ...,   57.3977,   72.1915,
           77.8046],
        [  81.1116,   83.8083,   77.3506,  ...,  -38.7001,  -57.6528,
          -71.4438]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([3, 2, 5, 6, 2, 8, 6, 4, 8, 2, 2, 5, 5, 1, 2, 2, 7, 2, 1, 8, 5, 6, 5, 6,
        7, 7, 6, 8, 5, 1, 6, 3, 7, 1, 7, 2, 5, 1, 5, 8, 6, 1, 0, 1, 6, 0, 4, 3,
        2, 7, 4, 0, 6, 6, 2, 5, 0, 6, 6, 1, 7, 3, 2, 5, 5, 0, 2, 2, 4, 4, 2, 1,
        4, 4, 4, 3, 6, 3, 3, 2, 2, 6, 7, 5, 6, 3, 7, 4, 6, 3, 3, 3, 5, 3, 1, 1,
        8, 7, 1, 3, 3, 4, 8, 8, 7, 2, 0, 6, 6, 7, 6, 1, 2, 5, 7, 3, 0, 6, 7, 2,
        8, 7, 8, 1, 7, 4, 8, 5]) 
pred: tensor([[ -16.3385,   25.3383,   38.5257,  ...,   -3.3884,  -28.6060,
          -52.4458],
        [  35.2291,   61.6343,   64.7541,  ...,  -19.9664,  -51.4247,
          -78.8074],
        [ -89.8670,  -35.2163,   -6.7133,  ...,   26.0352,    9.7731,
          -10.4891],
        ...,
        [ -65.1282,   -7.0160,   16.3447,  ...,   10.8621,   -8.1703,
          -30.0095],
        [-168.0156, -122.8203,  -79.2384,  ...,   58.2002,   70.6279,
           74.9369],
        [ -88.1921,  -33.8633,   -6.0285,  ...,   25.7021,    7.8545,
          -12.5039]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 0, 8, 1, 6, 5, 4, 7, 1, 2, 0, 2, 0, 5, 6, 7, 2, 3, 6, 2, 1, 0, 3, 0,
        3, 6, 1, 6, 3, 4, 3, 2, 1, 1, 8, 0, 0, 7, 3, 4, 4, 6, 4, 4, 7, 7, 3, 5,
        2, 0, 8, 3, 8, 4, 8, 3, 0, 3, 3, 7, 5, 8, 3, 6, 0, 2, 2, 7, 4, 5, 1, 3,
        5, 2, 6, 6, 2, 5, 0, 6, 2, 4, 5, 5, 0, 6, 3, 6, 0, 6, 4, 2, 1, 8, 5, 7,
        7, 8, 0, 7, 1, 7, 4, 5, 3, 3, 8, 1, 4, 8, 5, 7, 6, 3, 8, 5, 3, 8, 7, 4,
        5, 6, 5, 6, 2, 0, 3, 2]) 
pred: tensor([[ -70.3544,  -10.9450,   11.8465,  ...,   15.4738,   -7.0285,
          -32.3463],
        [ 115.4436,  107.7164,   93.2995,  ...,  -47.2946,  -74.4094,
          -92.6143],
        [-176.2623, -130.3228,  -85.9274,  ...,   61.0342,   77.3780,
           82.1594],
        ...,
        [ 113.7663,  102.3583,   85.5485,  ...,  -47.6826,  -67.4982,
          -79.8415],
        [ -35.9499,   16.7287,   32.2723,  ...,    0.3234,  -22.2918,
          -46.5548],
        [  20.3284,   51.3596,   57.7276,  ...,  -11.6436,  -45.9938,
          -76.2682]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([7, 2, 5, 0, 0, 3, 3, 7, 2, 2, 6, 7, 6, 0, 6, 0, 0, 1, 6, 2, 5, 8, 0, 8,
        7, 4, 3, 4, 6, 6, 3, 8, 8, 8, 6, 4, 5, 7, 0, 3, 4, 3, 8, 6, 0, 8, 8, 1,
        7, 0, 4, 7, 0, 6, 2, 5, 1, 4, 3, 8, 0, 2, 1, 4, 0, 6, 2, 8, 2, 5, 7, 8,
        4, 4, 0, 6, 1, 1, 5, 5, 6, 4, 2, 1, 5, 1, 4, 4, 1, 3, 0, 5, 7, 2, 4, 6,
        7, 5, 0, 0, 7, 3, 8, 7, 6, 5, 2, 3, 5, 2, 7, 0, 5, 1, 3, 2, 4, 4, 2, 6,
        3, 5, 7, 4, 1, 8, 0, 3]) 
pred: tensor([[-146.4788,  -99.0634,  -59.7565,  ...,   51.3020,   56.8443,
           50.1824],
        [   9.0376,   38.5514,   44.9395,  ...,  -10.4733,  -32.9279,
          -54.9760],
        [ -90.5046,  -39.1901,  -12.1154,  ...,   27.4550,   14.4783,
           -4.9653],
        ...,
        [-180.5144, -134.9696,  -89.4912,  ...,   63.3893,   81.8354,
           85.8439],
        [ 112.3195,  101.1035,   83.2476,  ...,  -46.7129,  -66.7843,
          -79.2765],
        [ -38.4852,   13.8146,   30.1527,  ...,    4.9809,  -22.0964,
          -50.8338]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 7, 3, 4, 7, 5, 0, 8, 2, 2, 0, 7, 8, 4, 3, 8, 1, 8, 6, 1, 7, 5, 0, 4,
        1, 0, 5, 5, 0, 1, 8, 7, 8, 6, 7, 8, 6, 0, 2, 8, 0, 0, 5, 6, 0, 1, 5, 6,
        1, 3, 8, 3, 7, 2, 0, 7, 1, 7, 4, 2, 7, 8, 1, 2, 4, 0, 5, 5, 7, 5, 3, 6,
        7, 8, 4, 5, 7, 0, 7, 8, 8, 2, 3, 0, 7, 0, 1, 8, 1, 6, 0, 0, 7, 0, 8, 5,
        7, 1, 1, 3, 8, 1, 5, 0, 7, 6, 2, 2, 7, 5, 6, 6, 2, 5, 2, 0, 5, 0, 7, 1,
        5, 7, 2, 3, 2, 7, 8, 0]) 
pred: tensor([[-181.2105, -137.2224,  -92.6239,  ...,   63.6104,   81.9436,
           88.1818],
        [-142.3761,  -97.4687,  -59.7613,  ...,   49.5831,   54.4237,
           49.9785],
        [ -26.1780,   15.9922,   28.9360,  ...,    0.6880,  -21.9117,
          -44.5011],
        ...,
        [-148.8931, -102.0195,  -63.3859,  ...,   51.7013,   56.5489,
           52.0376],
        [-178.3326, -134.3430,  -90.5783,  ...,   62.3088,   80.0238,
           85.8911],
        [ 111.7351,  104.7982,   87.2929,  ...,  -46.1798,  -71.9918,
          -87.8717]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([8, 7, 6, 2, 2, 0, 6, 3, 0, 2, 2, 7, 8, 1, 2, 7, 7, 7, 5, 3, 7, 2, 3, 2,
        7, 4, 0, 0, 2, 2, 1, 0, 7, 6, 0, 1, 2, 0, 2, 3, 8, 0, 3, 3, 7, 4, 5, 6,
        0, 1, 0, 8, 3, 8, 5, 1, 6, 4, 6, 0, 2, 3, 5, 1, 3, 0, 3, 2, 5, 5, 3, 8,
        2, 3, 3, 7, 6, 5, 5, 4, 4, 8, 8, 5, 4, 0, 2, 5, 1, 5, 8, 1, 7, 5, 1, 2,
        1, 5, 7, 7, 8, 8, 3, 3, 8, 3, 7, 7, 5, 2, 8, 4, 2, 7, 4, 4, 3, 4, 5, 1,
        3, 2, 3, 2, 5, 5, 3, 4]) 
pred: tensor([[-173.6838, -130.5074,  -87.2889,  ...,   59.8004,   76.3901,
           82.8625],
        [-159.8221, -106.5885,  -66.5622,  ...,   52.7050,   57.5841,
           53.7350],
        [-119.0388,  -72.2646,  -38.9813,  ...,   38.7910,   35.7640,
           26.7687],
        ...,
        [ -98.1477,  -38.2018,  -10.7534,  ...,   27.1198,    9.8032,
          -11.0915],
        [  -6.4118,   20.5326,   28.3456,  ...,   -5.9447,  -21.5049,
          -35.6477],
        [ -50.2172,   -7.9133,   11.1172,  ...,   11.8043,   -9.5665,
          -29.0014]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([0, 0, 5, 4, 6, 8, 4, 8, 3, 5, 3, 6, 8, 2, 5, 2, 0, 2, 6, 3, 3, 1, 2, 7,
        4, 7, 7, 2, 8, 4, 2, 3, 7, 8, 1, 4, 0, 2, 4, 0, 8, 3, 4, 7, 4, 7, 3, 8,
        4, 8, 4, 3, 5, 0, 0, 5, 0, 8, 1, 1, 3, 8, 2, 7, 7, 1, 2, 3, 3, 8, 4, 7,
        7, 1, 0, 1, 6, 0, 8, 0, 2, 2, 1, 1, 0, 5, 2, 3, 6, 4, 3, 7, 1, 7, 6, 6,
        3, 7, 2, 6, 8, 8, 2, 1, 8, 6, 8, 3, 1, 4, 8, 2, 8, 6, 6, 0, 1, 3, 1, 0,
        5, 6, 7, 5, 2, 6, 2, 0]) 
pred: tensor([[ 114.6601,  105.1031,   89.1627,  ...,  -49.4042,  -70.1025,
          -81.6704],
        [ 114.9747,  108.6124,   93.8890,  ...,  -48.4304,  -74.7583,
          -91.0414],
        [ -94.4707,  -35.8113,   -7.5314,  ...,   28.1426,    7.4832,
          -16.7154],
        ...,
        [-128.7711,  -70.3931,  -35.8735,  ...,   38.9667,   34.0952,
           20.5071],
        [  20.1036,   54.6529,   60.8153,  ...,  -14.6642,  -51.2495,
          -80.0643],
        [ 109.6432,  104.7558,   90.8820,  ...,  -46.1929,  -73.4760,
          -89.6386]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 2, 3, 5, 4, 2, 2, 1, 6, 2, 7, 4, 6, 4, 5, 6, 7, 7, 0, 0, 8, 7, 4, 8,
        1, 0, 1, 2, 6, 6, 4, 6, 7, 8, 8, 2, 1, 7, 1, 6, 8, 0, 4, 8, 6, 6, 2, 6,
        7, 8, 0, 7, 2, 4, 4, 7, 8, 0, 6, 2, 6, 3, 0, 0, 0, 5, 8, 3, 1, 8, 0, 2,
        5, 8, 2, 3, 2, 8, 6, 2, 7, 7, 6, 0, 5, 4, 3, 2, 8, 6, 3, 4, 5, 8, 7, 6,
        7, 2, 7, 7, 3, 3, 6, 3, 8, 1, 8, 5, 8, 8, 6, 7, 6, 1, 3, 2, 4, 7, 4, 8,
        0, 5, 3, 8, 0, 2, 7, 5]) 
pred: tensor([[-133.0057,  -66.4066,  -29.6937,  ...,   37.5366,   29.6828,
           13.1221],
        [  19.1680,   52.2321,   59.1165,  ...,  -16.3983,  -45.9509,
          -70.2598],
        [ -27.9396,   21.4066,   38.5924,  ...,    0.2712,  -26.7416,
          -55.0612],
        ...,
        [  20.0859,   48.5370,   55.0694,  ...,  -17.5441,  -39.7310,
          -60.0451],
        [-156.8412,  -96.0373,  -54.6332,  ...,   48.8608,   51.1934,
           42.3657],
        [ -79.9265,  -28.0620,   -1.8032,  ...,   20.3228,    6.8070,
          -11.4417]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([1, 4, 1, 3, 6, 0, 1, 4, 4, 3, 1, 0, 0, 4, 0, 3, 6, 5, 4, 6, 8, 6, 3, 4,
        6, 4, 7, 1, 3, 6, 1, 1, 5, 7, 0, 0, 2, 0, 8, 1, 0, 1, 3, 2, 3, 1, 2, 8,
        7, 7, 5, 2, 1, 3, 0, 7, 7, 0, 1, 7, 7, 7, 1, 1, 6, 0, 2, 7, 6, 3, 7, 4,
        6, 4, 4, 3, 7, 6, 3, 2, 5, 7, 0, 8, 0, 8, 6, 3, 1, 0, 2, 8, 4, 2, 3, 8,
        2, 0, 3, 2, 1, 8, 1, 2, 1, 8, 1, 4, 2, 6, 0, 3, 1, 5, 4, 5, 8, 4, 5, 8,
        7, 2, 7, 8, 0, 8, 8, 3]) 
pred: tensor([[  69.8965,   82.4662,   80.2207,  ...,  -34.1934,  -61.5180,
          -81.6497],
        [ -66.3180,  -10.8614,   14.1141,  ...,   14.2861,   -6.0587,
          -29.3908],
        [  73.4823,   79.3811,   75.2286,  ...,  -34.7399,  -56.2648,
          -71.7629],
        ...,
        [-173.9383, -126.2640,  -80.5593,  ...,   58.3634,   74.4295,
           77.7366],
        [-184.5733, -132.0365,  -83.9317,  ...,   60.6455,   77.7275,
           80.8322],
        [ -14.4504,   24.3062,   38.6970,  ...,   -2.9519,  -27.2647,
          -50.2836]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 0, 4, 0, 1, 7, 7, 1, 1, 0, 1, 3, 6, 0, 5, 1, 4, 5, 5, 6, 8, 3, 4, 3,
        1, 0, 6, 5, 4, 8, 6, 2, 5, 5, 2, 8, 8, 7, 1, 8, 7, 4, 7, 8, 6, 7, 7, 0,
        1, 3, 8, 7, 5, 2, 5, 8, 8, 1, 0, 5, 2, 3, 6, 1, 6, 8, 6, 5, 3, 3, 3, 4,
        0, 6, 1, 3, 7, 8, 3, 5, 0, 8, 6, 7, 5, 7, 6, 7, 3, 5, 7, 3, 3, 6, 1, 0,
        8, 4, 8, 8, 6, 0, 0, 0, 1, 6, 1, 2, 6, 8, 3, 0, 2, 4, 7, 1, 3, 1, 1, 6,
        6, 4, 0, 3, 4, 4, 1, 5]) 
pred: tensor([[-121.8160,  -69.1139,  -33.8029,  ...,   40.0035,   32.1229,
           17.7178],
        [ 116.0124,  110.5141,   96.9236,  ...,  -48.7197,  -75.2381,
          -92.4264],
        [ -52.6462,   -8.0057,   13.1323,  ...,   12.2805,   -7.9499,
          -29.0025],
        ...,
        [ -66.3399,  -13.5751,   11.2543,  ...,   13.9482,   -2.2393,
          -23.2323],
        [  68.9943,   76.3407,   71.2632,  ...,  -32.2283,  -54.2071,
          -70.0421],
        [ -86.6968,  -35.0274,   -6.4430,  ...,   28.1389,    8.1353,
          -15.1857]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([6, 1, 3, 3, 5, 8, 1, 7, 6, 4, 2, 8, 5, 2, 8, 8, 0, 3, 2, 1, 0, 7, 3, 6,
        1, 3, 6, 5, 5, 3, 0, 6, 8, 1, 3, 6, 5, 3, 1, 8, 3, 7, 8, 1, 8, 1, 5, 1,
        8, 2, 6, 1, 1, 0, 4, 8, 3, 6, 4, 7, 2, 7, 0, 4, 3, 8, 6, 0, 5, 2, 3, 3,
        2, 2, 5, 3, 7, 4, 2, 1, 3, 6, 5, 5, 6, 6, 1, 0, 1, 2, 7, 3, 5, 3, 5, 3,
        6, 5, 2, 0, 2, 5, 7, 0, 5, 1, 2, 2, 2, 0, 6, 4, 2, 8, 7, 8, 7, 2, 7, 4,
        5, 4, 8, 6, 6, 4, 2, 8]) 
pred: tensor([[-130.0490,  -77.4308,  -39.7370,  ...,   43.3575,   37.7784,
           24.9406],
        [  73.9684,   79.4215,   71.4714,  ...,  -33.7580,  -55.7805,
          -71.6446],
        [ -27.6280,   19.6110,   34.9389,  ...,   -1.5692,  -23.6094,
          -47.6971],
        ...,
        [ -60.9976,   -9.9863,   11.6887,  ...,   15.9786,   -8.4867,
          -32.7192],
        [  18.5237,   47.9938,   53.5582,  ...,  -15.4624,  -39.6013,
          -61.2833],
        [-178.1112, -133.4654,  -86.1105,  ...,   61.4320,   79.6762,
           84.7273]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([4, 3, 6, 4, 7, 8, 3, 7, 7, 3, 0, 2, 3, 1, 0, 6, 4, 3, 1, 4, 1, 6, 8, 8,
        3, 0, 7, 2, 2, 7, 8, 8, 1, 4, 1, 2, 0, 1, 2, 0, 6, 4, 3, 6, 6, 2, 7, 3,
        8, 8, 3, 6, 8, 5, 3, 3, 4, 5, 3, 1, 7, 6, 4, 1, 4, 5, 1, 0, 4, 7, 6, 4,
        1, 7, 4, 7, 1, 3, 6, 5, 6, 5, 0, 1, 2, 2, 2, 1, 0, 2, 1, 6, 2, 1, 7, 7,
        4, 1, 6, 8, 2, 5, 4, 5, 1, 3, 8, 1, 6, 8, 7, 1, 2, 8, 0, 4, 1, 4, 5, 5,
        6, 1, 1, 4, 7, 5, 0, 7]) 
pred: tensor([[ -62.6411,   -7.6288,   13.4856,  ...,   16.3552,   -9.7987,
          -37.6374],
        [ -31.5853,   20.1229,   35.8030,  ...,    0.1783,  -24.0419,
          -50.0600],
        [-141.7832,  -76.5458,  -38.4393,  ...,   42.2863,   38.5089,
           23.2898],
        ...,
        [ -71.5664,  -34.6948,   -9.7861,  ...,   23.0640,   11.2609,
           -2.2453],
        [ 114.7773,  109.4170,   90.8618,  ...,  -46.7819,  -74.2009,
          -91.6730],
        [-145.0383,  -99.2737,  -58.8204,  ...,   50.5048,   55.2978,
           50.1386]], grad_fn=<AddmmBackward0>)

input: torch.Size([128, 3, 32, 32]) 
labels in objectives: tensor([5, 0, 4, 2, 0, 0, 3, 8, 8, 8, 8, 1, 4, 6, 0, 1, 5, 5, 0, 7, 7, 8, 6, 8,
        8, 7, 1, 0, 4, 5, 3, 6, 7, 5, 2, 0, 5, 6, 8, 1, 8, 5, 1, 0, 5, 0, 0, 4,
        4, 5, 8, 7, 2, 0, 4, 0, 8, 2, 3, 6, 3, 0, 4, 6, 8, 0, 1, 6, 2, 2, 5, 1,
        0, 5, 4, 4, 8, 7, 8, 6, 8, 8, 6, 4, 8, 0, 6, 3, 7, 0, 2, 2, 0, 7, 1, 0,
        7, 3, 5, 4, 6, 4, 6, 0, 8, 2, 6, 3, 8, 0, 6, 1, 5, 1, 0, 5, 0, 1, 5, 4,
        8, 0, 8, 4, 8, 2, 3, 7]) 
pred: tensor([[ -93.5516,  -43.2180,  -15.4419,  ...,   26.8323,   17.2438,
            1.8402],
        [ 110.3641,  104.1925,   85.2017,  ...,  -44.9211,  -71.2436,
          -85.9665],
        [ -55.8049,   -9.8606,   10.2299,  ...,   12.3670,   -3.9732,
          -23.8853],
        ...,
        [  15.0078,   47.9918,   51.5626,  ...,  -11.7064,  -43.2053,
          -68.5536],
        [ -30.3140,   11.9763,   25.6489,  ...,    5.2697,  -22.4221,
          -46.2677],
        [-162.2229, -108.8618,  -64.9802,  ...,   54.6126,   60.9604,
           55.7989]], grad_fn=<AddmmBackward0>)
====> [MM-VAE] Time:   3.472s or 00:00:03
